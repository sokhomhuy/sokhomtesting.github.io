{"version":3,"sources":["D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/account-types/account-types.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/account-types/account-types.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/account-types/create-account-type-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/account-types/create-account-type-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/account-types/edit-account-type-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/account-types/edit-account-type-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/admin-routing.module.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/admin.module.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/audit-logs/audit-log-detail-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/audit-logs/audit-log-detail-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/audit-logs/audit-logs.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/audit-logs/audit-logs.component.less","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/audit-logs/audit-logs.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/currencies/currencies.component.css","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/currencies/currencies.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/currencies/currencies.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/dashboard/host-dashboard.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/dashboard/host-dashboard.component.less","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/dashboard/host-dashboard.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-components.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-components.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-date-time.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-date-time.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-editor.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-editor.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-file-upload.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-file-upload.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-input-mask.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-input-mask.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-selection.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-selection.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/editions/create-or-edit-edition-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/editions/create-or-edit-edition-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/editions/editions.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/editions/editions.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/format-settings/format-settings.component.css","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/format-settings/format-settings.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/format-settings/format-settings.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/item-types/item-types.component.css","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/item-types/item-types.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/item-types/item-types.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/create-or-edit-language-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/create-or-edit-language-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/edit-text-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/edit-text-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/language-texts.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/language-texts.component.less","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/language-texts.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/languages.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/languages.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/maintenance/maintenance.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/maintenance/maintenance.component.less","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/maintenance/maintenance.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/add-member-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/add-member-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/create-or-edit-unit-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/create-or-edit-unit-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-tree.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-tree.component.less","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-tree.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-unit-members.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-unit-members.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-units.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-units.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/roles/create-or-edit-role-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/roles/create-or-edit-role-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/roles/roles.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/roles/roles.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/settings/host-settings.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/settings/host-settings.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/settings/tenant-settings.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/settings/tenant-settings.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/edition-combo.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/feature-tree.component.less","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/feature-tree.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/organization-unit-tree.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/permission-combo.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/permission-tree.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/role-combo.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/subscription-management/subscription-management.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/subscription-management/subscription-management.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/create-tenant-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/create-tenant-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/edit-tenant-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/edit-tenant-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/tenant-features-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/tenant-features-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/tenants.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/tenants.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/users/create-or-edit-user-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/users/create-or-edit-user-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/users/edit-user-permissions-modal.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/users/edit-user-permissions-modal.component.ts","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/users/users.component.html","D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/users/users.component.ts"],"names":[],"mappings":"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","file":"admin.module.chunk.js","sourcesContent":["module.exports = \"<div [@routerTransition]>\\r\\n  <div class=\\\"row margin-bottom-5\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-6\\\">\\r\\n          <div class=\\\"page-head\\\">\\r\\n              <div class=\\\"page-title\\\">\\r\\n                  <h1>\\r\\n                      {{l('AccountTypes')}}\\r\\n                  </h1>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-12 col-sm-6 text-right\\\">\\r\\n          <div class=\\\"btn-group\\\">\\r\\n              <a class=\\\"btn blue btn-outline btn-sm\\\" href=\\\"javascript:;\\\" \\r\\n                data-toggle=\\\"dropdown\\\" \\r\\n                data-hover=\\\"dropdown\\\" \\r\\n                data-close-others=\\\"true\\\" \\r\\n                aria-expanded=\\\"true\\\">\\r\\n                {{l('AccountType')}}\\r\\n                <i class=\\\"fa fa-angle-down\\\"></i>\\r\\n              </a><div class=\\\"dropdown-backdrop\\\"></div>\\r\\n              <ul class=\\\"dropdown-menu pull-right\\\" *ngIf=\\\"canCreate\\\">\\r\\n                  <li>\\r\\n                      <a (click)=\\\"createNewAccountType()\\\">\\r\\n                          <i class=\\\"icon-plus\\\"></i>\\r\\n                          {{l('CreateNewAccountType')}}\\r\\n                      </a>\\r\\n                  </li>\\r\\n              </ul>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12 col-xs-12 col-sm-12\\\">\\r\\n          <!-- BEGIN PORTLET-->\\r\\n          <div class=\\\"portlet light\\\">\\r\\n              <div class=\\\"portlet-title\\\">\\r\\n                  <div class=\\\"caption col-md-4 form-group search-header\\\">\\r\\n                    <form autocomplete=\\\"off\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <div class=\\\"input-group-control\\\">\\r\\n                                <input class=\\\"form-control\\\" name=\\\"filter\\\" [(ngModel)]=\\\"filterText\\\"\\r\\n                                       placeholder=\\\"{{l('Search')}}\\\" type=\\\"text\\\" #gb pInputText>\\r\\n                            </div>\\r\\n                            <span class=\\\"input-group-btn btn-right\\\">\\r\\n                                <button class=\\\"btn blue\\\" type=\\\"submit\\\">\\r\\n                                    {{l('Search')}}\\r\\n                                </button>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                  </div>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"portlet-body\\\">\\r\\n                  <div class=\\\"portlet-body\\\">\\r\\n                      <div class=\\\"primeng-datatable-container\\\">\\r\\n                          <p-dataTable [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                                       [rows]=\\\"primengDatatableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                       [paginator]=\\\"true\\\"\\r\\n                                       [loading]=\\\"primengDatatableHelper.isLoading\\\"\\r\\n                                       [rowsPerPageOptions]=\\\"primengDatatableHelper.predefinedRecordsCountPerPage\\\"\\r\\n                                       [globalFilter]=\\\"gb\\\"\\r\\n                                       scrollable=\\\"true\\\"\\r\\n                                       ScrollWidth=\\\"100%\\\"\\r\\n                                       resizableColumns=\\\"primengDatatableHelper.resizableColumns\\\"\\r\\n                                       #dt>\\r\\n                              <p-column header=\\\"{{l('No')}}\\\" [style]=\\\"{'width':'30px'}\\\" [sortable]=\\\"false\\\">\\r\\n                                  <ng-template let-i=\\\"rowIndex\\\" pTemplate=\\\"rowexpansion\\\">\\r\\n                                      {{i + 1}}\\r\\n                                  </ng-template>\\r\\n                              </p-column>\\r\\n                              <p-column field=\\\"accountTypeName\\\" header=\\\"{{l('Name')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'250px'}\\\"></p-column>\\r\\n                              <p-column field=\\\"description\\\" header=\\\"{{l('Description')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'250px'}\\\"></p-column>\\r\\n                              <p-column field=\\\"isActive\\\" header=\\\"{{l('Status')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'100px'}\\\">\\r\\n                                  <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                      <span class=\\\"label label-success\\\" *ngIf=\\\"record.isActive\\\">{{l('Active')}}</span>\\r\\n                                      <span class=\\\"label label-warning\\\" *ngIf=\\\"!record.isActive\\\">{{l('Inactive')}}</span>\\r\\n                                  </ng-template>\\r\\n                              </p-column>\\r\\n                              <p-column field=\\\"isActive\\\"\\r\\n                                        header=\\\"{{l('Actions')}}\\\"\\r\\n                                        [sortable]=\\\"false\\\"\\r\\n                                        [style]=\\\"{'width':'75px'}\\\">\\r\\n                                  <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                      <div class=\\\"btn-group dropdown\\\" normalizePosition>\\r\\n                                          <button class=\\\"dropdown-toggle btn btn-xs btn-primary blue\\\"\\r\\n                                                  data-toggle=\\\"dropdown\\\"\\r\\n                                                  aria-haspopup=\\\"true\\\"\\r\\n                                                  aria-expanded=\\\"false\\\">\\r\\n                                              <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span>\\r\\n                                          </button>\\r\\n                                          <ul class=\\\"dropdown-menu\\\">\\r\\n                                              <li *ngIf=\\\"canEdit\\\">\\r\\n                                                  <a (click)=\\\"editAccountType(record)\\\">\\r\\n                                                      <i class=\\\"icon-note icons\\\"></i>\\r\\n                                                      {{l('Edit')}}\\r\\n                                                  </a>\\r\\n                                              </li>\\r\\n                                              <li *ngIf=\\\"record.isActive && canDisable\\\">\\r\\n                                                  <a (click)=\\\"disableAccountType(record)\\\">\\r\\n                                                      <i class=\\\"icon-ban icons\\\"></i>\\r\\n                                                      {{l('Disable')}}\\r\\n                                                  </a>\\r\\n                                              </li>\\r\\n                                              <li *ngIf=\\\"!record.isActive && canEnable\\\">\\r\\n                                                  <a (click)=\\\"enableAccountType(record)\\\">\\r\\n                                                      <i class=\\\"icon-check icons\\\"></i>\\r\\n                                                      {{l('Enable')}}\\r\\n                                                  </a>\\r\\n                                              </li>\\r\\n                                              <li *ngIf=\\\"canDelete\\\">\\r\\n                                                  <a (click)=\\\"removeAccountType(record)\\\">\\r\\n                                                      <i class=\\\"icon-trash icons\\\"></i>\\r\\n                                                      {{l('Delete')}}\\r\\n                                                  </a>\\r\\n                                              </li>\\r\\n                                          </ul>\\r\\n                                      </div>\\r\\n                                  </ng-template>\\r\\n                              </p-column>\\r\\n                          </p-dataTable>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <!-- END PORTLET-->\\r\\n      </div>\\r\\n      <createAccountTypeModal #createAccountTypeModal (modalSave)=\\\"getLists()\\\"></createAccountTypeModal>\\r\\n      <editAccountTypeModal #editAccountTypeModal (modalSave)=\\\"getLists()\\\"></editAccountTypeModal>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/account-types/account-types.component.html\n// module id = ../../../../../src/app/admin/account-types/account-types.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { CreateAccountTypeModalComponent } from './create-account-type-modal.component';\r\nimport { EditAccountTypeModalComponent } from './edit-account-type-modal.component';\r\nimport { PermissionName } from '@app/shared/common/auth/permission-name.component';\r\n\r\nimport { AccountTypeServiceProxy, ChartAccountDetailOutput, EntityDtoOfInt64 } from '@shared/service-proxies/service-proxies';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\n\r\n\r\n@Component({\r\n    selector: 'app-account-types',\r\n    templateUrl: './account-types.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class AccountTypesComponent extends AppComponentBase{\r\n    // account type component popup\r\n    @ViewChild('createAccountTypeModal') createAccountTypeModal: CreateAccountTypeModalComponent;\r\n    @ViewChild('editAccountTypeModal') editAccountTypeModal: EditAccountTypeModalComponent;\r\n    // primeng lib\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n    filterText: string = \"\";\r\n    canCreate: boolean = this.permission.isGranted(PermissionName.host.client.accountType.create);\r\n    canEdit: boolean = this.permission.isGranted(PermissionName.host.client.accountType.update);\r\n    canDelete: boolean = this.permission.isGranted(PermissionName.host.client.accountType.delete);\r\n    canDisable: boolean = this.permission.isGranted(PermissionName.host.client.accountType.disable);\r\n    canEnable: boolean = this.permission.isGranted(PermissionName.host.client.accountType.enable);\r\n    constructor(\r\n        injector: Injector,\r\n        private _accountTypeService: AccountTypeServiceProxy\r\n    ) {\r\n        super(injector);\r\n        this.getLists();\r\n    }\r\n\r\n    // get list of account type\r\n    getLists(event?: LazyLoadEvent): void {\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n        this._accountTypeService.getList(\r\n            this.filterText,      \r\n        ).subscribe((result) => {\r\n            this.primengDatatableHelper.records = result.items;\r\n            //this.primengDatatableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengDatatableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    // create new popup\r\n    createNewAccountType(): void {\r\n        this.createAccountTypeModal.show();\r\n    }\r\n\r\n    editAccountType(params: any): void {\r\n        let copyParams = Object.assign({}, params);\r\n        this.editAccountTypeModal.show(copyParams);\r\n    }\r\n\r\n    enableAccountType(params: any): void {\r\n        this.message.confirm(\r\n            this.l('EnableWarningMessage', params.accountTypeName),\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    let data = new EntityDtoOfInt64({ id: params.id });\r\n                    this._accountTypeService.enable(data).subscribe((result) => {\r\n                        this.getLists();\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    disableAccountType(params: any): void {\r\n        this.message.confirm(\r\n            this.l('DisableWarningMessage', params.accountTypeName),\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    let data = new EntityDtoOfInt64({ id: params.id });\r\n                    this._accountTypeService.disable(data).subscribe((result) => {\r\n                        this.getLists();\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    removeAccountType(params: any): void {\r\n        this.message.confirm(\r\n            this.l('DeleteWarningMessage', params.accountTypeName),\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._accountTypeService.delete(params.id).subscribe((result) => {\r\n                        this.getLists();\r\n                    });\r\n                }\r\n            }\r\n        );\r\n        \r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/account-types/account-types.component.ts","module.exports = \"<div bsModal #createModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form #accountTypeForm=\\\"ngForm\\\"\\r\\n                  [formGroup]=\\\"form\\\"\\r\\n                  autocomplete=\\\"off\\\"\\r\\n                  novalidate\\r\\n                  class=\\\"form form-validation\\\">\\r\\n                <header-modal [title]=\\\"'CreateNewAccountType'\\\"></header-modal>\\r\\n                <div class=\\\"modal-body modal-body-overflow\\\">\\r\\n                    <div *ngIf=\\\"isSubmitted\\\">\\r\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"isFieldValid('name')\\\">\\r\\n                            <h4 class=\\\"block\\\">\\r\\n                                <strong>\\r\\n                                    {{l(\\\"CreateNewAccountType\\\")}}\\r\\n                                    {{l(\\\"Error\\\")}}\\r\\n                                </strong>\\r\\n                            </h4>\\r\\n                            <ul>\\r\\n                                <li *ngIf=\\\"isFieldValid('name')\\\">\\r\\n                                    {{l(\\\"NameIsRequired\\\")}}\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"displayFieldCss('name')\\\">\\r\\n                        <label class=\\\"control-label\\\">\\r\\n                            {{l(\\\"Name\\\")}}<i class=\\\"required\\\">*</i>\\r\\n                        </label>\\r\\n                        <input #nameInput class=\\\"form-control\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               name=\\\"name\\\"\\r\\n                               formControlName=\\\"name\\\"\\r\\n                               [(ngModel)]=\\\"accountType.accountTypeName\\\"\\r\\n                               [placeholder]=\\\"l('EnterAccountTypeName')\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"control-label\\\">\\r\\n                            {{l(\\\"Description\\\")}}\\r\\n                        </label>\\r\\n                        <textarea name=\\\"description\\\"\\r\\n                                  class=\\\"form-control\\\"\\r\\n                                  [(ngModel)]=\\\"accountType.description\\\"\\r\\n                                  [placeholder]=\\\"l('EnterDescription')\\\"\\r\\n                                  formControlName=\\\"description\\\"\\r\\n                                  rows=\\\"3\\\"></textarea>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <footer-modal (saveNew)=\\\"onSubmit(true)\\\"\\r\\n                              [saving]=\\\"saving\\\"\\r\\n                              [isCreate]=\\\"true\\\"\\r\\n                              (saveClose)=\\\"onSubmit(false)\\\"\\r\\n                              (cancel)=\\\"close()\\\"></footer-modal>\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/account-types/create-account-type-modal.component.html\n// module id = ../../../../../src/app/admin/account-types/create-account-type-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { AccountTypeServiceProxy, CreateAccountTypeInput } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport {\r\n    FormGroup,\r\n    FormBuilder,\r\n    Validators,\r\n    FormControl\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'createAccountTypeModal',\r\n    templateUrl: './create-account-type-modal.component.html'\r\n})\r\nexport class CreateAccountTypeModalComponent extends AppComponentBase implements OnInit{\r\n\r\n    @ViewChild('nameInput') nameInput: ElementRef;\r\n    @ViewChild('createModal') modal: ModalDirective;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active: boolean = false;\r\n    saving: boolean = false;\r\n    accountType: CreateAccountTypeInput;\r\n    isSubmitted: boolean = false;\r\n    form: FormGroup;\r\n    constructor(\r\n        injector: Injector,\r\n        private _accountTypeService: AccountTypeServiceProxy,\r\n        private formBuilder: FormBuilder\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show() {\r\n        this.active = true;\r\n        this.accountType = new CreateAccountTypeInput();\r\n        this.modal.show();\r\n    }\r\n\r\n    onShown(): void {\r\n        $(this.nameInput.nativeElement).focus();\r\n    }\r\n\r\n    save(bool: boolean): void {\r\n        this.saving = true;\r\n        this._accountTypeService.create(this.accountType)\r\n            .finally(() => this.saving = false)\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.modalSave.emit(null);\r\n                if (bool) {\r\n                    this.reset();\r\n                } else {\r\n                    this.close();\r\n                }              \r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n        this.reset();\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.accountType = new CreateAccountTypeInput();\r\n        this.form = this.formBuilder.group({\r\n            name: [null, Validators.required],\r\n            description: null\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Functionality to check for single field property of\r\n     * form builder that come from fromControlName\r\n     * @param field: string \r\n     */\r\n    isFieldValid(field: string) {\r\n        return !this.form.get(field).valid && this.form.get(field).touched;\r\n    }\r\n\r\n    /**\r\n     * Functionality check with display with multiply css class\r\n     * @param field: string\r\n     */\r\n    displayFieldCss(field: string) {\r\n        if (!this.isSubmitted) return;\r\n        return {\r\n            'has-error': this.isFieldValid(field)\r\n        };\r\n    }\r\n\r\n    onSubmit(bool: boolean) {\r\n        console.log(this.form);\r\n        this.isSubmitted = true;\r\n        if (this.form.valid) {\r\n            this.save(bool);\r\n        } else {\r\n            this.validateAllFormFields(this.form);\r\n        }\r\n    }\r\n    /**\r\n     * Form Validation Functionality check\r\n     * when sumit form\r\n     * @param formGroup\r\n     */\r\n    validateAllFormFields(formGroup: FormGroup) {\r\n        Object.keys(formGroup.controls).forEach(field => {\r\n            const control = formGroup.get(field);\r\n            if (control instanceof FormControl) {\r\n                control.markAsTouched({ onlySelf: true });\r\n            } else if (control instanceof FormGroup) {\r\n                this.validateAllFormFields(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    reset() {\r\n        this.form.reset();\r\n        this.isSubmitted = false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/account-types/create-account-type-modal.component.ts","module.exports = \"<div bsModal #editModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <form #accountTypeForm=\\\"ngForm\\\"\\r\\n                  [formGroup]=\\\"form\\\"\\r\\n                  autocomplete=\\\"off\\\"\\r\\n                  novalidate\\r\\n                  class=\\\"form form-validation\\\"\\r\\n                  (submit)=\\\"onSubmit()\\\">\\r\\n                <header-modal [title]=\\\"'UpdateAccountType'\\\"></header-modal>\\r\\n                <div class=\\\"modal-body modal-body-overflow\\\">\\r\\n                    <div *ngIf=\\\"isSubmitted\\\">\\r\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"isFieldValid('name')\\\">\\r\\n                            <h4 class=\\\"block\\\">\\r\\n                                <strong>\\r\\n                                    {{l(\\\"CreateNewAccountType\\\")}}\\r\\n                                    {{l(\\\"Error\\\")}}\\r\\n                                </strong>\\r\\n                            </h4>\\r\\n                            <ul>\\r\\n                                <li *ngIf=\\\"isFieldValid('name')\\\">\\r\\n                                    {{l(\\\"NameIsRequired\\\")}}\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"displayFieldCss('name')\\\">\\r\\n                        <label class=\\\"control-label\\\">\\r\\n                            {{l(\\\"Name\\\")}}<i class=\\\"required\\\">*</i>\\r\\n                        </label>\\r\\n                        <input #nameInput class=\\\"form-control\\\"\\r\\n                               type=\\\"text\\\" name=\\\"name\\\"\\r\\n                               formControlName=\\\"name\\\"\\r\\n                               [(ngModel)]=\\\"accountType.accountTypeName\\\"\\r\\n                               [placeholder]=\\\"l('EnterAccountTypeName')\\\"\\r\\n                               required>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"control-label\\\">\\r\\n                            {{l(\\\"Description\\\")}}\\r\\n                        </label>\\r\\n                        <textarea class=\\\"form-control\\\"\\r\\n                                  [(ngModel)]=\\\"accountType.description\\\"\\r\\n                                  formControlName=\\\"description\\\"\\r\\n                                  [placeholder]=\\\"l('EnterDescription')\\\"\\r\\n                                  rows=\\\"3\\\"></textarea>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <footer-modal [saving]=\\\"saving\\\"\\r\\n                              [isUpdate]=\\\"true\\\"\\r\\n                              (saveClose)=\\\"onSubmit()\\\"\\r\\n                              (cancel)=\\\"close()\\\"></footer-modal>\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/account-types/edit-account-type-modal.component.html\n// module id = ../../../../../src/app/admin/account-types/edit-account-type-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { AccountTypeServiceProxy, UpateAccountTypeInput } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport {\r\n    FormGroup,\r\n    FormBuilder,\r\n    Validators,\r\n    FormControl\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'editAccountTypeModal',\r\n    templateUrl: './edit-account-type-modal.component.html'\r\n})\r\nexport class EditAccountTypeModalComponent extends AppComponentBase implements OnInit{\r\n\r\n    @ViewChild('nameInput') nameInput: ElementRef;\r\n    @ViewChild('editModal') modal: ModalDirective;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active: boolean = false;\r\n    saving: boolean = false;\r\n    accountType: UpateAccountTypeInput;\r\n    isSubmitted: boolean = false;\r\n    form: FormGroup;\r\n    constructor(\r\n        injector: Injector,\r\n        private _accountTypeService: AccountTypeServiceProxy,\r\n        private formBuilder: FormBuilder\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(params: any): void {\r\n        this.active = true;\r\n        this.accountType = params;\r\n        this.modal.show();\r\n    }\r\n\r\n    onShown(): void {\r\n        $(this.nameInput.nativeElement).focus();\r\n    }\r\n\r\n    save(): void {\r\n        this.saving = true;\r\n        this._accountTypeService.update(this.accountType)\r\n            .finally(() => this.saving = false)\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n        this.reset();\r\n    }\r\n    \r\n    ngOnInit() {\r\n        this.accountType = new UpateAccountTypeInput();\r\n        this.form = this.formBuilder.group({\r\n            name: [null, Validators.required],\r\n            description: null\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Functionality to check for single field property of\r\n     * form builder that come from fromControlName\r\n     * @param field: string \r\n     */\r\n    isFieldValid(field: string) {\r\n        return !this.form.get(field).valid && this.form.get(field).touched;\r\n    }\r\n\r\n    /**\r\n     * Functionality check with display with multiply css class\r\n     * @param field: string\r\n     */\r\n    displayFieldCss(field: string) {\r\n        if (!this.isSubmitted) return;\r\n        return {\r\n            'has-error': this.isFieldValid(field)\r\n        };\r\n    }\r\n\r\n    onSubmit() {\r\n        console.log(this.form);\r\n        this.isSubmitted = true;\r\n        if (this.form.valid) {\r\n            this.save();\r\n        } else {\r\n            this.validateAllFormFields(this.form);\r\n        }\r\n    }\r\n    /**\r\n     * Form Validation Functionality check\r\n     * when sumit form\r\n     * @param formGroup\r\n     */\r\n    validateAllFormFields(formGroup: FormGroup) {\r\n        Object.keys(formGroup.controls).forEach(field => {\r\n            const control = formGroup.get(field);\r\n            if (control instanceof FormControl) {\r\n                control.markAsTouched({ onlySelf: true });\r\n            } else if (control instanceof FormGroup) {\r\n                this.validateAllFormFields(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    reset() {\r\n        this.form.reset();\r\n        this.isSubmitted = false;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/account-types/edit-account-type-modal.component.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { AuditLogsComponent } from './audit-logs/audit-logs.component';\r\nimport { HostSettingsComponent } from './settings/host-settings.component';\r\nimport { TenantSettingsComponent } from './settings/tenant-settings.component';\r\nimport { MaintenanceComponent } from './maintenance/maintenance.component';\r\nimport { EditionsComponent } from './editions/editions.component';\r\nimport { LanguagesComponent } from './languages/languages.component';\r\nimport { LanguageTextsComponent } from './languages/language-texts.component';\r\nimport { TenantsComponent } from './tenants/tenants.component';\r\nimport { OrganizationUnitsComponent } from './organization-units/organization-units.component';\r\nimport { HostDashboardComponent } from './dashboard/host-dashboard.component';\r\nimport { SubscriptionManagementComponent } from './subscription-management/subscription-management.component';\r\nimport { DemoUiComponentsComponent } from './demo-ui-components/demo-ui-components.component';\r\nimport { AccountTypesComponent } from './account-types/account-types.component';\r\nimport { PermissionName } from '@app/shared/common/auth/permission-name.component';\r\n\r\nimport { CurrenciesComponent } from './currencies/currencies.component';\r\nimport { ItemTypesComponent } from './item-types/item-types.component';\r\nimport { FormatSettingsComponent } from './format-settings/format-settings.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild([\r\n            {\r\n                path: '',\r\n                children: [\r\n                    { path: 'users', component: UsersComponent, data: { permission: 'Pages.Administration.Users' } },\r\n                    { path: 'roles', component: RolesComponent, data: { permission: 'Pages.Administration.Roles' } },\r\n                    { path: 'auditLogs', component: AuditLogsComponent, data: { permission: 'Pages.Administration.AuditLogs' } },\r\n                    { path: 'maintenance', component: MaintenanceComponent, data: { permission: 'Pages.Administration.Host.Maintenance' } },\r\n                    { path: 'hostSettings', component: HostSettingsComponent, data: { permission: 'Pages.Administration.Host.Settings' } },\r\n                    { path: 'editions', component: EditionsComponent, data: { permission: 'Pages.Editions' } },\r\n                    { path: 'languages', component: LanguagesComponent, data: { permission: 'Pages.Administration.Languages' } },\r\n                    { path: 'languages/:name/texts', component: LanguageTextsComponent, data: { permission: 'Pages.Administration.Languages.ChangeTexts' } },\r\n                    { path: 'tenants', component: TenantsComponent, data: { permission: 'Pages.Tenants' } },\r\n                    { path: 'organization-units', component: OrganizationUnitsComponent, data: { permission: 'Pages.Administration.OrganizationUnits' } },\r\n                    { path: 'subscription-management', component: SubscriptionManagementComponent, data: { permission: 'Pages.Administration.Tenant.SubscriptionManagement' } },\r\n                    { path: 'tenantSettings', component: TenantSettingsComponent, data: { permission: 'Pages.Administration.Tenant.Settings' } },\r\n                    { path: 'hostDashboard', component: HostDashboardComponent, data: { permission: 'Pages.Administration.Host.Dashboard' } },\r\n                    {\r\n                        path: 'demo-ui-components', component: DemoUiComponentsComponent,\r\n                        data: { permission: 'Pages.DemoUiComponents' }\r\n                    },\r\n                    {\r\n                        path: 'account-types', component: AccountTypesComponent,\r\n                        data: {\r\n                            permission: PermissionName.host.client.accountType.get\r\n                        }\r\n                    },\r\n                    {\r\n                        path: 'currencies', component: CurrenciesComponent,\r\n                        data: {\r\n                            permission: PermissionName.host.client.currency.get\r\n                        }\r\n                    },\r\n                    {\r\n                        path: 'item-types', component: ItemTypesComponent,\r\n                        data: {\r\n                            permission: PermissionName.host.client.currency.get\r\n                        }\r\n                    },\r\n                    {\r\n                        path: 'format-setting', component: FormatSettingsComponent,\r\n                        data: {\r\n                            permission: PermissionName.host.client.format.get\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ])\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AdminRoutingModule {\r\n\r\n    constructor(private router: Router) {\r\n        router.events.subscribe(() => {\r\n            this.hideOpenDataTableDropdownMenus();\r\n        });\r\n    }\r\n\r\n    hideOpenDataTableDropdownMenus(): void {\r\n        var $dropdownMenus = $('.dropdown-menu.tether-element');\r\n        $dropdownMenus.css({\r\n            'display': 'none'\r\n        });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/admin-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ModalModule, TabsModule, TooltipModule, PopoverModule } from 'ngx-bootstrap';\r\nimport { FileUploadModule } from '@node_modules/ng2-file-upload';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module'\r\nimport { UtilsModule } from '@shared/utils/utils.module'\r\nimport { AppCommonModule } from '@app/shared/common/app-common.module'\r\n\r\nimport { UsersComponent } from './users/users.component'\r\nimport { PermissionComboComponent } from './shared/permission-combo.component';\r\nimport { RoleComboComponent } from './shared/role-combo.component';\r\nimport { CreateOrEditUserModalComponent } from './users/create-or-edit-user-modal.component'\r\nimport { EditUserPermissionsModalComponent } from './users/edit-user-permissions-modal.component';\r\nimport { PermissionTreeComponent } from './shared/permission-tree.component';\r\nimport { FeatureTreeComponent } from './shared/feature-tree.component';\r\nimport { OrganizationUnitsTreeComponent } from './shared/organization-unit-tree.component';\r\n\r\nimport { RolesComponent } from './roles/roles.component'\r\nimport { CreateOrEditRoleModalComponent } from './roles/create-or-edit-role-modal.component'\r\n\r\nimport { AuditLogsComponent } from './audit-logs/audit-logs.component'\r\nimport { AuditLogDetailModalComponent } from './audit-logs/audit-log-detail-modal.component'\r\n\r\nimport { HostSettingsComponent } from './settings/host-settings.component'\r\nimport { MaintenanceComponent } from './maintenance/maintenance.component'\r\nimport { EditionsComponent } from './editions/editions.component'\r\nimport { CreateOrEditEditionModalComponent } from './editions/create-or-edit-edition-modal.component'\r\nimport { ImpersonationService } from './users/impersonation.service';\r\nimport { LanguagesComponent } from './languages/languages.component';\r\nimport { LanguageTextsComponent } from './languages/language-texts.component';\r\nimport { CreateOrEditLanguageModalComponent } from './languages/create-or-edit-language-modal.component';\r\nimport { TenantsComponent } from './tenants/tenants.component'\r\nimport { CreateTenantModalComponent } from './tenants/create-tenant-modal.component'\r\nimport { EditTenantModalComponent } from './tenants/edit-tenant-modal.component'\r\nimport { TenantFeaturesModalComponent } from './tenants/tenant-features-modal.component'\r\nimport { EditTextModalComponent } from './languages/edit-text-modal.component';\r\nimport { OrganizationUnitsComponent } from './organization-units/organization-units.component';\r\nimport { OrganizationTreeComponent } from './organization-units/organization-tree.component';\r\nimport { OrganizationUnitMembersComponent } from './organization-units/organization-unit-members.component';\r\nimport { CreateOrEditUnitModalComponent } from './organization-units/create-or-edit-unit-modal.component';\r\nimport { TenantSettingsComponent } from './settings/tenant-settings.component'\r\nimport { HostDashboardComponent } from './dashboard/host-dashboard.component'\r\nimport { EditionComboComponent } from './shared/edition-combo.component';\r\nimport { SubscriptionManagementComponent } from './subscription-management/subscription-management.component';\r\nimport { DemoUiComponentsComponent } from './demo-ui-components/demo-ui-components.component';\r\nimport { DataTableModule } from 'primeng/primeng';\r\nimport { PaginatorModule } from 'primeng/primeng';\r\nimport { EditorModule } from 'primeng/primeng';\r\nimport { AddMemberModalComponent } from \"app/admin/organization-units/add-member-modal.component\";\r\nimport { FileUploadModule as PrimeNgFileUploadModule } from 'primeng/primeng';\r\nimport { AutoCompleteModule } from 'primeng/primeng';\r\nimport { DemoUiDateTimeComponent } from './demo-ui-components/demo-ui-date-time.component'\r\nimport { DemoUiSelectionComponent } from './demo-ui-components/demo-ui-selection.component'\r\nimport { DemoUiFileUploadComponent } from './demo-ui-components/demo-ui-file-upload.component'\r\nimport { DemoUiInputMaskComponent } from './demo-ui-components/demo-ui-input-mask.component'\r\nimport { DemoUiEditorComponent } from './demo-ui-components/demo-ui-editor.component'\r\nimport { InputMaskModule } from 'primeng/primeng';\r\n\r\nimport { AccountTypesComponent } from './account-types/account-types.component';\r\nimport { CreateAccountTypeModalComponent } from './account-types/create-account-type-modal.component';\r\nimport { EditAccountTypeModalComponent } from './account-types/edit-account-type-modal.component';\r\nimport { CurrenciesComponent } from './currencies/currencies.component';\r\nimport { ItemTypesComponent } from './item-types/item-types.component';\r\nimport { FormatSettingsComponent } from './format-settings/format-settings.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        FileUploadModule,\r\n        ModalModule.forRoot(),\r\n        TabsModule.forRoot(),\r\n        TooltipModule.forRoot(),\r\n        PopoverModule.forRoot(),\r\n        AdminRoutingModule,\r\n        UtilsModule,\r\n        AppCommonModule,\r\n        DataTableModule,\r\n        PaginatorModule,\r\n        PrimeNgFileUploadModule,\r\n        AutoCompleteModule,\r\n        EditorModule,\r\n        InputMaskModule\r\n    ],\r\n    declarations: [\r\n        UsersComponent,\r\n        PermissionComboComponent,\r\n        RoleComboComponent,\r\n        CreateOrEditUserModalComponent,\r\n        EditUserPermissionsModalComponent,\r\n        PermissionTreeComponent,\r\n        FeatureTreeComponent,\r\n        OrganizationUnitsTreeComponent,\r\n        RolesComponent,\r\n        CreateOrEditRoleModalComponent,\r\n        AuditLogsComponent,\r\n        AuditLogDetailModalComponent,\r\n        HostSettingsComponent,\r\n        MaintenanceComponent,\r\n        EditionsComponent,\r\n        CreateOrEditEditionModalComponent,\r\n        LanguagesComponent,\r\n        LanguageTextsComponent,\r\n        CreateOrEditLanguageModalComponent,\r\n        TenantsComponent,\r\n        CreateTenantModalComponent,\r\n        EditTenantModalComponent,\r\n        TenantFeaturesModalComponent,\r\n        CreateOrEditLanguageModalComponent,\r\n        EditTextModalComponent,\r\n        OrganizationUnitsComponent,\r\n        OrganizationTreeComponent,\r\n        OrganizationUnitMembersComponent,\r\n        CreateOrEditUnitModalComponent,\r\n        TenantSettingsComponent,\r\n        HostDashboardComponent,\r\n        EditionComboComponent,\r\n        SubscriptionManagementComponent,\r\n        AddMemberModalComponent,\r\n        DemoUiComponentsComponent,\r\n        DemoUiDateTimeComponent,\r\n        DemoUiSelectionComponent,\r\n        DemoUiFileUploadComponent,\r\n        DemoUiInputMaskComponent,\r\n        DemoUiEditorComponent,\r\n        AccountTypesComponent,\r\n        CreateAccountTypeModalComponent,\r\n        EditAccountTypeModalComponent,\r\n        CurrenciesComponent,\r\n        ItemTypesComponent,\r\n        FormatSettingsComponent\r\n    ],\r\n    exports: [\r\n        AddMemberModalComponent\r\n    ],\r\n    providers: [\r\n        ImpersonationService\r\n    ]\r\n})\r\nexport class AdminModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/admin.module.ts","module.exports = \"<div bsModal #auditLogDetailModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"auditLogDetailModal\\\"\\r\\n    aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <form *ngIf=\\\"active\\\" #roleForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n                \\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"auditLog.userId\\\">{{l(\\\"AuditLogDetail\\\")}}</span>\\r\\n                    </h4>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"modal-body\\\">\\r\\n\\r\\n                    <h3 class=\\\"form-section\\\">{{l(\\\"UserInformations\\\")}}</h3>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"control-label col-sm-3\\\">{{l(\\\"UserName\\\")}}:</label>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <p class=\\\"form-control-static\\\">\\r\\n                                        <span>{{auditLog.userName}}</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"control-label col-sm-3\\\">{{l(\\\"IpAddress\\\")}}:</label>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <p class=\\\"form-control-static\\\">\\r\\n                                        <span>{{auditLog.ipAddress}}</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"control-label col-sm-3\\\">{{l(\\\"Client\\\")}}:</label>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <p class=\\\"form-control-static\\\">\\r\\n                                        <span>{{auditLog.clientName}}</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"control-label col-sm-3\\\">{{l(\\\"Browser\\\")}}:</label>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <p class=\\\"form-control-static\\\">\\r\\n                                        <span>{{auditLog.browserInfo}}</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"auditLog.impersonatorUserId\\\">\\r\\n                                <label class=\\\"control-label col-sm-3\\\"></label>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <p class=\\\"form-control-static text-warning\\\">\\r\\n                                        {{l(\\\"AuditLogImpersonatedOperationInfo\\\")}}\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <h3 class=\\\"form-section\\\">{{l(\\\"ActionInformations\\\")}}</h3>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"control-label col-sm-3\\\">{{l(\\\"Service\\\")}}:</label>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <p class=\\\"form-control-static\\\">\\r\\n                                        <span>{{auditLog.serviceName}}</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"control-label col-sm-3\\\">{{l(\\\"Action\\\")}}:</label>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <p class=\\\"form-control-static\\\">\\r\\n                                        <span>{{auditLog.methodName}}</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"control-label col-sm-3\\\">{{l(\\\"Time\\\")}}:</label>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <p class=\\\"form-control-static\\\">\\r\\n                                        <span>{{getExecutionTime()}}</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"control-label col-sm-3\\\">{{l(\\\"Duration\\\")}}:</label>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <p class=\\\"form-control-static\\\">\\r\\n                                        <span>{{getDurationAsMs()}}</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"control-label col-sm-3\\\">{{l(\\\"Parameters\\\")}}:</label>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <pre lang=\\\"js\\\">{{getFormattedParameters()}}</pre>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <h3 class=\\\"form-section\\\">{{l(\\\"CustomData\\\")}}</h3>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <p class=\\\"form-control-static\\\">\\r\\n                                        {{l(\\\"None\\\")}}\\r\\n                                    </p>\\r\\n                                    <pre *ngIf=\\\"auditLog.customData\\\">{{auditLog.customData}}</pre>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <h3 class=\\\"form-section\\\">{{l(\\\"ErrorState\\\")}}</h3>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <p class=\\\"form-control-static\\\">\\r\\n                                        <i class=\\\"fa fa-check-circle font-green\\\"></i> {{l(\\\"Success\\\")}}\\r\\n                                    </p>\\r\\n                                    <pre *ngIf=\\\"auditLog.exception\\\">{{auditLog.exception}}</pre>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/audit-logs/audit-log-detail-modal.component.html\n// module id = ../../../../../src/app/admin/audit-logs/audit-log-detail-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { AuditLogListDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { AppConsts } from '@shared/AppConsts';\r\n\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'auditLogDetailModal',\r\n    templateUrl: './audit-log-detail-modal.component.html'\r\n})\r\nexport class AuditLogDetailModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('auditLogDetailModal') modal: ModalDirective;\r\n\r\n    active: boolean = false;\r\n    auditLog: AuditLogListDto;\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getExecutionTime(): string {\r\n        let self = this;\r\n        return moment(self.auditLog.executionTime).fromNow() + ' (' + moment(self.auditLog.executionTime).format('YYYY-MM-DD HH:mm:ss') + ')';\r\n    };\r\n\r\n    getDurationAsMs(): string {\r\n        let self = this;\r\n        return self.l('Xms', self.auditLog.executionDuration);\r\n    };\r\n\r\n    getFormattedParameters(): string {\r\n        let self = this;\r\n        try {\r\n            var json = JSON.parse(self.auditLog.parameters);\r\n            return JSON.stringify(json, null, 4);\r\n        } catch (e) {\r\n            return self.auditLog.parameters;\r\n        }\r\n    }\r\n\r\n    show(record: AuditLogListDto): void {\r\n        let self = this;\r\n        self.active = true;\r\n        self.auditLog = record;\r\n\r\n        self.modal.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/audit-logs/audit-log-detail-modal.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{l(\\\"AuditLogs\\\")}}</span>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 text-right\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet light margin-bottom-0\\\">\\r\\n        <div class=\\\"portlet-title portlet-title-filter\\\">\\r\\n            <div class=\\\"inputs inputs-full-width\\\">\\r\\n                <div class=\\\"portlet-input\\\">\\r\\n                    <form class=\\\"horizontal-form\\\" #auditFilterForm=\\\"ngForm\\\" (ngSubmit)=\\\"getAuditLogs()\\\">\\r\\n                        <div class=\\\"form-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{l(\\\"DateRange\\\")}}</label>\\r\\n                                        <date-range-picker [(startDate)]=\\\"startDate\\\" [(endDate)]=\\\"endDate\\\"></date-range-picker>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{l(\\\"UserName\\\")}}</label>\\r\\n                                        <input type=\\\"text\\\" name=\\\"UserName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"advancedFiltersAreShown\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{l(\\\"Service\\\")}}</label>\\r\\n                                            <input name=\\\"ServiceName\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"serviceName\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <label class=\\\"control-label\\\" style=\\\"display: block\\\">{{l(\\\"Duration\\\")}}</label>\\r\\n                                        <div class=\\\"input-group\\\" style=\\\"width: 250px !important;\\\">\\r\\n                                            <input type=\\\"number\\\" name=\\\"MinExecutionDuration\\\" only-number=\\\"\\\" class=\\\"form-control\\\" min=\\\"0\\\" max=\\\"86400000\\\" ng-minlength=\\\"0\\\" ng-maxlength=\\\"8\\\" [(ngModel)]=\\\"minExecutionDuration\\\">\\r\\n                                            <span class=\\\"input-group-addon\\\">\\r\\n                                                ---\\r\\n                                            </span>\\r\\n                                            <input type=\\\"number\\\" name=\\\"MaxExecutionDuration\\\" only-number=\\\"\\\" class=\\\"form-control\\\" min=\\\"0\\\" max=\\\"86400000\\\" ng-minlength=\\\"0\\\" ng-maxlength=\\\"8\\\" [(ngModel)]=\\\"maxExecutionDuration\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{l(\\\"Action\\\")}}</label>\\r\\n                                            <input type=\\\"text\\\" name=\\\"MethodName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"methodName\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{l(\\\"ErrorState\\\")}}</label>\\r\\n                                            <select name=\\\"HasException\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"hasException\\\">\\r\\n                                                <option value=\\\"\\\">{{l(\\\"All\\\")}}</option>\\r\\n                                                <option value=\\\"false\\\">{{l(\\\"Success\\\")}}</option>\\r\\n                                                <option value=\\\"true\\\">{{l(\\\"HasError\\\")}}</option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{l(\\\"Browser\\\")}}</label>\\r\\n                                            <input type=\\\"text\\\" name=\\\"BrowserInfo\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"browserInfo\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-sm-6\\\">\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-6 text-right\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"exportToExcel()\\\"><i class=\\\"fa fa-file-excel-o\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn blue\\\"><i class=\\\"fa fa-refresh\\\"></i> {{l(\\\"Refresh\\\")}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"portlet-body\\\">\\r\\n            <!--<Primeng-Datatable-Start>-->\\r\\n            <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengDatatableHelper.isLoading\\\">\\r\\n                <p-dataTable #dataTable\\r\\n                             (onLazyLoad)=\\\"getAuditLogs($event)\\\"\\r\\n                             [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                             rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                             [paginator]=\\\"false\\\"\\r\\n                             [lazy]=\\\"true\\\"\\r\\n                             emptyMessage=\\\"{{l('NoData')}}\\\"\\r\\n                             scrollable=\\\"true\\\"\\r\\n                             ScrollWidth=\\\"100%\\\"\\r\\n                             responsive=\\\"primengDatatableHelper.isResponsive\\\"\\r\\n                             resizableColumns=\\\"primengDatatableHelper.resizableColumns\\\">\\r\\n\\r\\n                    <p-column field=\\\"\\\" [sortable]=\\\"false\\\" [style]=\\\"{'width':'75px'}\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button class=\\\"btn btn-default btn-xs\\\" (click)=\\\"showDetails(record)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n\\r\\n                    <p-column field=\\\"exception\\\" header=\\\"\\\" [sortable]=\\\"false\\\" [style]=\\\"{'width':'75px'}\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <i *ngIf=\\\"record.exception\\\" class=\\\"fa fa-warning font-yellow-gold\\\"></i>\\r\\n                                <i *ngIf=\\\"!record.exception\\\" class=\\\"fa fa-check-circle font-green\\\"></i>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n\\r\\n                    <p-column field=\\\"executionTime\\\" header=\\\"{{l('Time')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'150px'}\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            {{ record.executionTime | momentFormat:'YYYY-MM-DD HH:mm:ss'}}\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n\\r\\n                    <p-column field=\\\"userName\\\" header=\\\"{{l('UserName')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n                    <p-column field=\\\"serviceName\\\" header=\\\"{{l('Service')}}\\\" [sortable]=\\\"false\\\" [style]=\\\"{'width':'250px'}\\\"></p-column>\\r\\n                    <p-column field=\\\"methodName\\\" header=\\\"{{l('Action')}}\\\" [sortable]=\\\"false\\\" [style]=\\\"{'width':'250px'}\\\"></p-column>\\r\\n                    <p-column field=\\\"executionDuration\\\" header=\\\"{{l('Duration')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'100px'}\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            {{l('Xms', record.executionDuration)}}\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"clientIpAddress\\\" header=\\\"{{l('IpAddress')}}\\\" [sortable]=\\\"false\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n                    <p-column field=\\\"clientName\\\" header=\\\"{{l('Client')}}\\\" [sortable]=\\\"false\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n\\r\\n                    <p-column field=\\\"browserInfo\\\" header=\\\"{{l('Browser')}}\\\" [sortable]=\\\"false\\\" [style]=\\\"{'width':'150px'}\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <span title=\\\"{{record.browserInfo}}\\\">{{truncateStringWithPostfix(record.browserInfo, 20)}}</span>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                </p-dataTable>\\r\\n                <div class=\\\"primeng-paging-container\\\">\\r\\n                    <p-paginator rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                 #paginator\\r\\n                                 (onPageChange)=\\\"getAuditLogs($event)\\\"\\r\\n                                 [totalRecords]=\\\"primengDatatableHelper.totalRecordsCount\\\"\\r\\n                                 [rowsPerPageOptions]=\\\"primengDatatableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                    </p-paginator>\\r\\n                    <span class=\\\"total-records-count\\\">\\r\\n                        {{l('TotalRecordsCount', primengDatatableHelper.totalRecordsCount)}}\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--<Primeng-Datatable-End>-->\\r\\n        </div>\\r\\n    </div>\\r\\n    <auditLogDetailModal #auditLogDetailModal></auditLogDetailModal>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/audit-logs/audit-logs.component.html\n// module id = ../../../../../src/app/admin/audit-logs/audit-logs.component.html\n// module chunks = admin.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".audit-log-detail-view h3.form-section {\\n  margin-top: 5px;\\n}\\n.audit-log-detail-view .form-group {\\n  margin-bottom: 0;\\n}\\n.audit-log-detail-view .form-group p.form-control-static {\\n  margin: 0;\\n}\\n.audit-log-detail-view .form-group .control-label {\\n  font-weight: bold;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/audit-logs/audit-logs.component.less\n// module id = ../../../../../src/app/admin/audit-logs/audit-logs.component.less\n// module chunks = admin.module","import { Component, AfterViewInit, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { AuditLogServiceProxy, AuditLogListDto } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport { AuditLogDetailModalComponent } from '@app/admin/audit-logs/audit-log-detail-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\n\r\nimport * as moment from \"moment\";\r\n\r\n@Component({\r\n    templateUrl: \"./audit-logs.component.html\",\r\n    styleUrls: [\"./audit-logs.component.less\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class AuditLogsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('auditLogDetailModal') auditLogDetailModal: AuditLogDetailModalComponent;\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    //Filters\r\n    public startDate: moment.Moment = moment().startOf(\"day\");\r\n    public endDate: moment.Moment = moment().endOf(\"day\");\r\n    public username: string;\r\n    public serviceName: string;\r\n    public methodName: string;\r\n    public browserInfo: string;\r\n    public hasException: boolean = undefined;\r\n    public minExecutionDuration: number;\r\n    public maxExecutionDuration: number;\r\n\r\n    private _$auditLogsTable: JQuery;\r\n    advancedFiltersAreShown: boolean = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _auditLogService: AuditLogServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    showDetails(record: AuditLogListDto): void {\r\n        this.auditLogDetailModal.show(record);\r\n    }\r\n\r\n    getAuditLogs(event?: LazyLoadEvent) {\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n\r\n        this._auditLogService.getAuditLogs(\r\n            this.startDate,\r\n            this.endDate,\r\n            this.username,\r\n            this.serviceName,\r\n            this.methodName,\r\n            this.browserInfo,\r\n            this.hasException,\r\n            this.minExecutionDuration,\r\n            this.maxExecutionDuration,\r\n            this.primengDatatableHelper.getSorting(this.dataTable),\r\n            this.primengDatatableHelper.getMaxResultCount(this.paginator, event),\r\n            this.primengDatatableHelper.getSkipCount(this.paginator, event)\r\n        ).subscribe((result) => {\r\n            this.primengDatatableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengDatatableHelper.records = result.items;\r\n            this.primengDatatableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    exportToExcel(): void {\r\n        let self = this;\r\n        self._auditLogService.getAuditLogsToExcel(\r\n            self.startDate,\r\n            self.endDate,\r\n            self.username,\r\n            self.serviceName,\r\n            self.methodName,\r\n            self.browserInfo,\r\n            self.hasException,\r\n            self.minExecutionDuration,\r\n            self.maxExecutionDuration,\r\n            undefined,\r\n            undefined,\r\n            undefined)\r\n            .subscribe(result => {\r\n                self._fileDownloadService.downloadTempFile(result);\r\n            });\r\n    }\r\n\r\n    truncateStringWithPostfix(text: string, length: number): string {\r\n        return abp.utils.truncateStringWithPostfix(text, length);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/audit-logs/audit-logs.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/currencies/currencies.component.css\n// module id = ../../../../../src/app/admin/currencies/currencies.component.css\n// module chunks = admin.module","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        {{l('Currencies')}}\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-sm-6 text-right\\\">\\r\\n            <div class=\\\"btn-group\\\">\\r\\n                <a class=\\\"btn blue btn-outline btn-sm\\\" href=\\\"javascript:;\\\"\\r\\n                   data-toggle=\\\"dropdown\\\"\\r\\n                   data-hover=\\\"dropdown\\\"\\r\\n                   data-close-others=\\\"true\\\"\\r\\n                   aria-expanded=\\\"true\\\">\\r\\n                    {{l('Currency')}}\\r\\n                    <i class=\\\"fa fa-angle-down\\\"></i>\\r\\n                </a><div class=\\\"dropdown-backdrop\\\"></div>\\r\\n                <ul class=\\\"dropdown-menu pull-right\\\" *ngIf=\\\"canSync\\\">\\r\\n                    <li>\\r\\n                        <a (click)=\\\"sync()\\\">\\r\\n                            <i class=\\\"icon-refresh\\\"></i>\\r\\n                            {{l('Sync')}}\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12 col-xs-12 col-sm-12\\\">\\r\\n            <!-- BEGIN PORTLET-->\\r\\n            <div class=\\\"portlet light\\\">\\r\\n                <div class=\\\"portlet-title\\\">\\r\\n                    <div class=\\\"caption col-md-4 form-group search-header\\\">\\r\\n                        <form autocomplete=\\\"off\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-control\\\">\\r\\n                                    <input class=\\\"form-control\\\" name=\\\"filter\\\" [(ngModel)]=\\\"filterText.filter\\\"\\r\\n                                           placeholder=\\\"{{l('Search')}}\\\" #gb type=\\\"text\\\" pInputText/>\\r\\n                                </div>\\r\\n                                <span class=\\\"input-group-btn btn-right\\\">\\r\\n                                    <button class=\\\"btn blue\\\" type=\\\"submit\\\">\\r\\n                                        {{l('Search')}}\\r\\n                                    </button>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"portlet-body\\\">\\r\\n                    <div class=\\\"primeng-datatable-container\\\">\\r\\n                        <p-dataTable [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                                     [rows]=\\\"primengDatatableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                     [paginator]=\\\"true\\\"\\r\\n                                     [loading]=\\\"primengDatatableHelper.isLoading\\\"\\r\\n                                     [rowsPerPageOptions]=\\\"primengDatatableHelper.predefinedRecordsCountPerPage\\\"\\r\\n                                     [globalFilter]=\\\"gb\\\"\\r\\n                                     scrollable=\\\"true\\\" \\r\\n                                     ScrollWidth=\\\"100%\\\" \\r\\n                                     resizableColumns=\\\"primengDatatableHelper.resizableColumns\\\"\\r\\n                                     #dt>\\r\\n                            <p-column header=\\\"{{l('No')}}\\\" [style]=\\\"{'width':'30px'}\\\" [sortable]=\\\"false\\\">\\r\\n                                <ng-template let-i=\\\"rowIndex\\\" pTemplate=\\\"rowexpansion\\\">\\r\\n                                    {{i + 1}}\\r\\n                                </ng-template>\\r\\n                            </p-column>\\r\\n                            <p-column field=\\\"code\\\" header=\\\"{{l('Code')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n                            <p-column field=\\\"name\\\" header=\\\"{{l('Name')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n                            <p-column field=\\\"symbol\\\" header=\\\"{{l('Symbol')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n                            <p-column field=\\\"pluralName\\\" header=\\\"{{l('PluralName')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n\\r\\n                        </p-dataTable>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- END PORTLET-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/currencies/currencies.component.html\n// module id = ../../../../../src/app/admin/currencies/currencies.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { CurrencyServiceProxy, GetCurrencyListInput } from '@shared/service-proxies/service-proxies';\r\nimport { PermissionName } from '@app/shared/common/auth/permission-name.component';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\n\r\n@Component({\r\n    selector: 'app-currencies',\r\n    templateUrl: './currencies.component.html',\r\n    styleUrls: ['./currencies.component.css'],\r\n    animations: [appModuleAnimation()],\r\n    encapsulation: ViewEncapsulation.None  // Enable dynamic HTML styles\r\n})\r\nexport class CurrenciesComponent extends AppComponentBase implements OnInit {\r\n\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n    filterText: GetCurrencyListInput;\r\n    canSync: boolean = this.permission.isGranted(PermissionName.host.client.currency.sync);\r\n    constructor(injector: Injector, private _currencyService: CurrencyServiceProxy) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.filterText = new GetCurrencyListInput();\r\n        this.getLists();\r\n    }\r\n\r\n    // get list of account type\r\n    private getLists(): void {\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n        this._currencyService.getList(\r\n            this.filterText.filter,\r\n        ).subscribe((result) => {\r\n            this.primengDatatableHelper.records = result.items;\r\n            this.primengDatatableHelper.totalRecordsCount = result.items.length;\r\n \r\n        });\r\n    }\r\n\r\n    private sync(): void {\r\n        this._currencyService.sync().subscribe((result) => {\r\n            this.getLists();\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/currencies/currencies.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div id=\\\"HostDashboard\\\" [busyIf]=\\\"loading\\\">\\r\\n        <div class=\\\"row margin-bottom-5\\\">\\r\\n            <div class=\\\"col-xs-6\\\">\\r\\n                <div class=\\\"page-head\\\">\\r\\n                    <div class=\\\"page-title\\\">\\r\\n                        <h1>\\r\\n                            <span>{{l(\\\"Dashboard\\\")}}</span> <small>{{l(\\\"HostDashboardHeaderInfo\\\")}}</small>\\r\\n                        </h1>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-xs-6 text-right\\\">\\r\\n                <button name=\\\"RefreshButton\\\" class=\\\"btn blue\\\" (click)=\\\"getDashboardStatisticsData()\\\"><i class=\\\"fa fa-refresh\\\"></i> {{l(\\\"Refresh\\\")}}</button>\\r\\n                <div #DashboardDateRangePicker class=\\\"dashboard-report-range pull-right tooltips btn btn-fit-height green-sharp\\\"\\r\\n                     data-placement=\\\"top\\\">\\r\\n                    <span class=\\\"selected-date-text uppercase hidden-xs\\\">\\r\\n                        {{selectedDateRange.startDate.format('LL')}} - {{selectedDateRange.endDate.format('LL')}}\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                <div class=\\\"dashboard-stat2 new-subscription-statistics\\\">\\r\\n                    <div class=\\\"display\\\">\\r\\n                        <div class=\\\"number\\\">\\r\\n                            <h3 class=\\\"new-subscription-amount counterup font-purple-soft\\\">\\r\\n                                {{hostDashboardData != null ? hostDashboardData.newSubscriptionAmount : \\\"...\\\"}}\\r\\n                                <small class=\\\"font-purple-soft\\\">$</small>\\r\\n                            </h3>\\r\\n                            <small>{{l(\\\"NewSubscriptionAmount\\\")}}</small>\\r\\n                        </div>\\r\\n                        <div class=\\\"icon\\\">\\r\\n                            <i class=\\\"fa fa-money\\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"progress-info\\\">\\r\\n                        <div class=\\\"progress\\\">\\r\\n                            <span style=\\\"width: 100%;\\\" class=\\\"progress-bar progress-bar-success purple-soft\\\">\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"status\\\">\\r\\n                            <div class=\\\"status-title\\\">\\r\\n                                {{selectedDateRange.startDate.format('L')}} - {{selectedDateRange.endDate.format('L')}}\\r\\n                            </div>\\r\\n                            <div class=\\\"status-number\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                <div class=\\\"dashboard-stat2 new-tenants-statistics\\\">\\r\\n                    <div class=\\\"display\\\">\\r\\n                        <div class=\\\"number\\\">\\r\\n                            <h3 class=\\\"new-tenants-count counterup font-red-haze\\\">\\r\\n                                {{hostDashboardData != null ? hostDashboardData.newTenantsCount : \\\"...\\\"}}\\r\\n                            </h3>\\r\\n                            <small>{{l(\\\"NewTenants\\\")}}</small>\\r\\n                        </div>\\r\\n                        <div class=\\\"icon\\\">\\r\\n                            <i class=\\\"icon-user-following\\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"progress-info\\\">\\r\\n                        <div class=\\\"progress\\\">\\r\\n                            <span style=\\\"width: 100%;\\\" class=\\\"progress-bar progress-bar-success red-haze\\\">\\r\\n                                <span class=\\\"sr-only\\\"></span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"status\\\">\\r\\n                            <div class=\\\"status-title\\\">\\r\\n                                {{selectedDateRange.startDate.format('L')}} - {{selectedDateRange.endDate.format('L')}}\\r\\n                            </div>\\r\\n                            <div class=\\\"status-number\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                <div class=\\\"dashboard-stat2 dashboard-statistics1\\\">\\r\\n                    <div class=\\\"display\\\">\\r\\n                        <div class=\\\"number\\\">\\r\\n                            <h3 class=\\\"dashboard-placeholder1 counterup font-blue-sharp\\\">\\r\\n                                {{hostDashboardData != null ? hostDashboardData.dashboardPlaceholder1 : \\\"...\\\"}}\\r\\n                            </h3>\\r\\n                            <small>{{l(\\\"DashboardSampleStatistics\\\")}} 1</small>\\r\\n                        </div>\\r\\n                        <div class=\\\"icon\\\">\\r\\n                            <i class=\\\"icon-pie-chart\\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"progress-info\\\">\\r\\n                        <div class=\\\"progress\\\">\\r\\n                            <span style=\\\"width: 45%;\\\" class=\\\"progress-bar progress-bar-success blue-sharp\\\">\\r\\n                                <span class=\\\"sr-only\\\">45% {{l(\\\"DashboardSampleStatisticsHelpText\\\")}}</span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"status\\\">\\r\\n                            <div class=\\\"status-title\\\"> {{l(\\\"DashboardSampleStatisticsHelpText\\\")}} </div>\\r\\n                            <div class=\\\"status-number\\\"> 45% </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-xs-12\\\">\\r\\n                <div class=\\\"dashboard-stat2 dashboard-statistics2\\\">\\r\\n                    <div class=\\\"display\\\">\\r\\n                        <div class=\\\"number\\\">\\r\\n                            <h3 class=\\\"dashboard-placeholder2 counterup font-green-sharp\\\">\\r\\n                                {{hostDashboardData != null ? hostDashboardData.dashboardPlaceholder2 : \\\"...\\\"}}\\r\\n                            </h3>\\r\\n                            <small>{{l(\\\"DashboardSampleStatistics\\\")}} 2</small>\\r\\n                        </div>\\r\\n                        <div class=\\\"icon\\\">\\r\\n                            <i class=\\\"icon-like\\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"progress-info\\\">\\r\\n                        <div class=\\\"progress\\\">\\r\\n                            <span style=\\\"width: 65%;\\\" class=\\\"progress-bar progress-bar-success green-sharp\\\">\\r\\n                                <span class=\\\"sr-only\\\">65% {{l(\\\"DashboardSampleStatisticsHelpText\\\")}}</span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"status\\\">\\r\\n                            <div class=\\\"status-title\\\"> {{l(\\\"DashboardSampleStatisticsHelpText\\\")}} </div>\\r\\n                            <div class=\\\"status-number\\\"> 65% </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-sm-12\\\">\\r\\n                <div class=\\\"portlet light portlet-fit bordered income-statistics\\\">\\r\\n                    <div class=\\\"portlet-title\\\">\\r\\n                        <div class=\\\"caption\\\">\\r\\n                            <i class=\\\"icon-graph font-blue\\\"></i>\\r\\n                            <span class=\\\"caption-subject font-blue bold uppercase\\\">{{l(\\\"IncomeStatistics\\\")}}</span>\\r\\n                            <span class=\\\"caption-helper\\\">{{selectedDateRange.startDate.format('L')}} - {{selectedDateRange.endDate.format('L')}}</span>\\r\\n                        </div>\\r\\n                        <div class=\\\"actions\\\">\\r\\n                            <div class=\\\"btn-group btn-group-devided\\\">\\r\\n                                <label class=\\\"btn blue btn-outline btn-circle btn-sm\\\" [ngClass]=\\\"{'active': selectedIncomeStatisticsDateInterval==appIncomeStatisticsDateInterval.Daily}\\\">\\r\\n                                    <input type=\\\"radio\\\"\\r\\n                                           name=\\\"IncomeStatisticsDatePeriod\\\"\\r\\n                                           (change)=\\\"incomeStatisticsDateIntervalChange($event)\\\"\\r\\n                                           [(ngModel)]=\\\"selectedIncomeStatisticsDateInterval\\\"\\r\\n                                           [value]=\\\"appIncomeStatisticsDateInterval.Daily\\\">\\r\\n                                    {{l(\\\"Daily\\\")}}\\r\\n                                </label>\\r\\n                                <label class=\\\"btn blue btn-outline btn-circle btn-sm\\\" [ngClass]=\\\"{'active': selectedIncomeStatisticsDateInterval==appIncomeStatisticsDateInterval.Weekly}\\\">\\r\\n                                    <input type=\\\"radio\\\"\\r\\n                                           name=\\\"IncomeStatisticsDatePeriod\\\"\\r\\n                                           (change)=\\\"incomeStatisticsDateIntervalChange($event)\\\"\\r\\n                                           [(ngModel)]=\\\"selectedIncomeStatisticsDateInterval\\\"\\r\\n                                           [value]=\\\"appIncomeStatisticsDateInterval.Weekly\\\">\\r\\n                                    {{l(\\\"Weekly\\\")}}\\r\\n                                </label>\\r\\n                                <label class=\\\"btn blue btn-outline btn-circle btn-sm\\\" [ngClass]=\\\"{'active': selectedIncomeStatisticsDateInterval==appIncomeStatisticsDateInterval.Monthly}\\\">\\r\\n                                    <input type=\\\"radio\\\"\\r\\n                                           name=\\\"IncomeStatisticsDatePeriod\\\"\\r\\n                                           (change)=\\\"incomeStatisticsDateIntervalChange($event)\\\"\\r\\n                                           [(ngModel)]=\\\"selectedIncomeStatisticsDateInterval\\\"\\r\\n                                           [value]=\\\"appIncomeStatisticsDateInterval.Monthly\\\">\\r\\n                                    {{l(\\\"Monthly\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"portlet-body\\\">\\r\\n                        <div #IncomeStatisticsChart \\r\\n                             class=\\\"chart income-statistics-chart\\\"\\r\\n                             [busyIf]=\\\"loadingIncomeStatistics\\\" \\r\\n                             [hidden]=\\\"!incomeStatisticsHasData\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"note note-info text-center chart\\\" \\r\\n                             [hidden]=\\\"incomeStatisticsHasData\\\">\\r\\n                            <small class=\\\"text-muted\\\">{{l(\\\"NoData\\\")}}</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 col-sm-12\\\">\\r\\n                <div class=\\\"portlet light portlet-fit bordered edition-statistics\\\">\\r\\n                    <div class=\\\"portlet-title\\\">\\r\\n                        <div class=\\\"caption\\\">\\r\\n                            <i class=\\\"icon-pie-chart font-green-seagreen\\\"></i>\\r\\n                            <span class=\\\"caption-subject font-green-seagreen bold uppercase\\\">{{l(\\\"EditionStatistics\\\")}}</span>\\r\\n                            <span class=\\\"caption-helper\\\">{{selectedDateRange.startDate.format('L')}} - {{selectedDateRange.endDate.format('L')}}</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"portlet-body\\\">\\r\\n                        <div #EditionStatisticsChart\\r\\n                             class=\\\"edition-statistics-chart chart\\\" \\r\\n                             [hidden]=\\\"!editionStatisticsHasData\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"note note-info text-center text-muted \\\" \\r\\n                             [hidden]=\\\"editionStatisticsHasData\\\">\\r\\n                            <small class=\\\"text-muted\\\">{{l(\\\"NoData\\\")}}</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n                <div class=\\\"portlet light portlet-fit bordered expiring-tenants\\\">\\r\\n                    <div class=\\\"portlet-title\\\">\\r\\n                        <div class=\\\"caption\\\">\\r\\n                            <i class=\\\"icon-graduation font-red-pink\\\"></i>\\r\\n                            <span class=\\\"caption-subject font-red-pink bold uppercase\\\">{{l(\\\"SubscriptionExpiringTenants\\\")}}</span>\\r\\n                            <div class=\\\"caption-helper\\\" *ngIf=\\\"hostDashboardData\\\">\\r\\n                                {{l(\\\"ExpiringTenantsHelpText\\\", hostDashboardData.subscriptionEndAlertDayCount, hostDashboardData.maxExpiringTenantsShownCount)}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"portlet-body\\\">\\r\\n                        <div class=\\\"scroller chart\\\" data-always-visible=\\\"1\\\" data-rail-visible=\\\"0\\\">\\r\\n                            <div class=\\\"primeng-datatable-container expiring-tenants-table\\\" [busyIf]=\\\"primengDatatableHelper.isLoading\\\">\\r\\n                                <p-dataTable #ExpiringTenantsTable\\r\\n                                             [value]=\\\"expiringTenantsData\\\"\\r\\n                                             rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                             [paginator]=\\\"false\\\"\\r\\n                                             [lazy]=\\\"false\\\"\\r\\n                                             emptyMessage=\\\"{{l('NoData')}}\\\"\\r\\n                                             [responsive]=\\\"primengDatatableHelper.isResponsive\\\">\\r\\n\\r\\n                                    <p-column field=\\\"tenantName\\\" header=\\\"{{l('TenantName')}}\\\"></p-column>\\r\\n                                    <p-column field=\\\"remainingDayCount\\\" header=\\\"{{l('RemainingDay')}}\\\"></p-column>\\r\\n                                </p-dataTable>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"scroller-footer\\\">\\r\\n                            <div class=\\\"btn-arrow-link pull-right\\\">\\r\\n                                <a href=\\\"javascript:;\\\" class=\\\"see-all-expiring-tenants\\\" (click)=\\\"gotoAllExpiringTenants()\\\">{{l(\\\"SeeAllRecords\\\")}}</a>\\r\\n                                <i class=\\\"icon-arrow-right\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n                <div class=\\\"portlet light portlet-fit bordered recent-tenants\\\">\\r\\n                    <div class=\\\"portlet-title\\\">\\r\\n                        <div class=\\\"caption\\\">\\r\\n                            <i class=\\\"icon-user-follow font-purple-soft\\\"></i>\\r\\n                            <span class=\\\"caption-subject font-purple-soft bold uppercase\\\">{{l(\\\"RecentTenants\\\")}}</span>\\r\\n                            <div class=\\\"caption-helper\\\" *ngIf=\\\"hostDashboardData\\\">\\r\\n                                {{l(\\\"RecentTenantsHelpText\\\", hostDashboardData.recentTenantsDayCount, hostDashboardData.maxRecentTenantsShownCount)}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"portlet-body\\\">\\r\\n                        <div class=\\\"scroller chart\\\" data-always-visible=\\\"1\\\" data-rail-visible=\\\"0\\\">\\r\\n                            <div class=\\\"primeng-datatable-container recent-tenants-table\\\" [busyIf]=\\\"primengDatatableHelper.isLoading\\\">\\r\\n                                <p-dataTable #RecentTenantsTable\\r\\n                                             [value]=\\\"recentTenantsData\\\"\\r\\n                                             rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                             [paginator]=\\\"false\\\"\\r\\n                                             [lazy]=\\\"false\\\"\\r\\n                                             emptyMessage=\\\"{{l('NoData')}}\\\"\\r\\n                                             [responsive]=\\\"primengDatatableHelper.isResponsive\\\">\\r\\n\\r\\n                                    <p-column field=\\\"name\\\" header=\\\"{{l('TenantName')}}\\\"></p-column>\\r\\n                                    <p-column field=\\\"creationTime\\\" header=\\\"{{l('CreationTime')}}\\\">\\r\\n                                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            {{ record.creationTime | momentFormat:'L LT'}}\\r\\n                                        </ng-template>\\r\\n                                    </p-column>\\r\\n                                </p-dataTable>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"scroller-footer\\\">\\r\\n                            <div class=\\\"btn-arrow-link pull-right\\\">\\r\\n                                <a href=\\\"javascript:;\\\" class=\\\"see-all-recent-tenants\\\" (click)=\\\"gotoAllRecentTenants()\\\">{{l(\\\"SeeAllRecords\\\")}}</a>\\r\\n                                <i class=\\\"icon-arrow-right\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/dashboard/host-dashboard.component.html\n// module id = ../../../../../src/app/admin/dashboard/host-dashboard.component.html\n// module chunks = admin.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#HostDashboard div.chart {\\n  height: 260px;\\n}\\n#HostDashboard .expiring-tenants-table thead th {\\n  background-color: #E08283 !important;\\n  color: white;\\n}\\n#HostDashboard .recent-tenants-table thead th {\\n  background-color: #8877a9 !important;\\n  color: white;\\n}\\n#HostDashboard .expiring-tenants-table {\\n  color: green;\\n}\\n#HostDashboard div.pie-chart-label {\\n  border: 1px solid grey;\\n  font-size: 8pt;\\n  text-align: center;\\n  padding: 5px;\\n  color: white;\\n}\\n#HostDashboard div.portlet div.portlet-title div.caption div.caption-helper {\\n  margin-top: 5px;\\n}\\n#HostDashboard div.portlet div.portlet-title div.actions {\\n  padding: 0;\\n}\\n#HostDashboard div.portlet div.portlet-body {\\n  min-height: 330px;\\n}\\n#HostDashboard div.flot-x-axis > div {\\n  white-space: nowrap;\\n  -webkit-transform: translate(0px, 0) rotate(-25deg);\\n          transform: translate(0px, 0) rotate(-25deg);\\n  text-indent: -6%;\\n  -webkit-transform-origin: bottom;\\n          transform-origin: bottom;\\n}\\n#HostDashboard input[type=\\\"radio\\\"] {\\n  display: none;\\n}\\n#HostDashboard .portlet > .portlet-title > .caption > .caption-helper {\\n  font-size: 11px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/dashboard/host-dashboard.component.less\n// module id = ../../../../../src/app/admin/dashboard/host-dashboard.component.less\n// module chunks = admin.module","import { Component, AfterViewInit, Injector, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport {\r\n    HostDashboardServiceProxy,\r\n    HostDashboardData,\r\n} from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport * as moment from \"moment\";\r\nimport { DateTimeService } from '@app/shared/common/timing/date-time.service';\r\nimport { AppIncomeStatisticsDateInterval } from '@shared/AppEnums';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\n\r\n@Component({\r\n    templateUrl: \"./host-dashboard.component.html\",\r\n    styleUrls: [\"./host-dashboard.component.less\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class HostDashboardComponent extends AppComponentBase implements AfterViewInit {\r\n    @ViewChild('DashboardDateRangePicker') dateRangePickerElement: ElementRef;\r\n    @ViewChild('EditionStatisticsChart') editionStatisticsChart: ElementRef;\r\n    @ViewChild('IncomeStatisticsChart') incomeStatisticsChart: ElementRef;\r\n\r\n    @ViewChild('RecentTenantsTable') recentTenantsTable: DataTable;\r\n    @ViewChild('ExpiringTenantsTable') expiringTenantsTable: DataTable;\r\n\r\n    loading: boolean = false;\r\n    loadingIncomeStatistics: boolean = false;\r\n    isInitialized: boolean;\r\n    hostDashboardData: HostDashboardData;\r\n    initialStartDate: moment.Moment = moment().add(-7, 'days').startOf(\"day\");\r\n    initialEndDate: moment.Moment = moment().endOf(\"day\");\r\n    currency = \"$\";\r\n    appIncomeStatisticsDateInterval = AppIncomeStatisticsDateInterval;\r\n    selectedIncomeStatisticsDateInterval: any;\r\n    editionStatisticsHasData: boolean;\r\n    incomeStatisticsHasData: boolean;\r\n    selectedDateRange = {\r\n        startDate: this.initialStartDate,\r\n        endDate: this.initialEndDate\r\n    };\r\n\r\n    private _$editionsTable: JQuery;\r\n    expiringTenantsData = [];\r\n    recentTenantsData = [];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _dateTimeService: DateTimeService,\r\n        private _hostDashboardService: HostDashboardServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    init(): void {\r\n        this.selectedIncomeStatisticsDateInterval = AppIncomeStatisticsDateInterval.Daily;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.init();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => {\r\n            this.createDateRangePicker();\r\n            this.getDashboardStatisticsData();\r\n            this.bindToolTipForIncomeStatisticsChart($(this.incomeStatisticsChart.nativeElement));\r\n        });\r\n    }\r\n\r\n    createDateRangePicker(): void {\r\n        $(this.dateRangePickerElement.nativeElement)\r\n            .daterangepicker(\r\n            $.extend(true, this._dateTimeService.createDateRangePickerOptions(), this.selectedDateRange),\r\n            (start, end, label) => {\r\n                this.selectedDateRange.startDate = start;\r\n                this.selectedDateRange.endDate = end;\r\n                this.getDashboardStatisticsData();\r\n            });\r\n    }\r\n\r\n    getDashboardStatisticsData(): void {\r\n        this.loading = true;\r\n        this._hostDashboardService\r\n            .getDashboardStatisticsData(\r\n            this.selectedIncomeStatisticsDateInterval,\r\n            this.selectedDateRange.startDate,\r\n            this.selectedDateRange.endDate\r\n            )\r\n            .subscribe(result => {\r\n                this.hostDashboardData = result;\r\n                this.drawEditionStatisticsData(result.editionStatistics);\r\n                this.drawIncomeStatisticsChart(result.incomeStatistics);\r\n                this.loadRecentTenantsTable(result.recentTenants);\r\n                this.loadExpiringTenantsTable(result.expiringTenants);\r\n                this.loading = false;\r\n            });\r\n    }\r\n\r\n    /*\r\n    * Edition statistics pie chart\r\n    */\r\n\r\n    normalizeEditionStatisticsData(data): Array<any> {\r\n        const colorPalette = [\"#81A17E\", \"#BA9B7C\", \"#569BC6\", \"#e08283\", \"#888888\"];\r\n        let chartData = new Array(data.length);\r\n        let pie: any;\r\n        for (let i = 0; i < data.length; i++) {\r\n            pie = {\r\n                label: data[i].label,\r\n                data: data[i].value\r\n            };\r\n\r\n            if (colorPalette[i]) {\r\n                pie.color = colorPalette[i];\r\n            }\r\n\r\n            chartData[i] = pie;\r\n        }\r\n\r\n        return chartData;\r\n    }\r\n\r\n    drawEditionStatisticsData(data): void {\r\n        this.editionStatisticsHasData = (data && data.length > 0);\r\n        if (!this.editionStatisticsHasData) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        const normalizedData = this.normalizeEditionStatisticsData(data);\r\n        ($ as any).plot($(self.editionStatisticsChart.nativeElement), normalizedData, {\r\n            series: {\r\n                pie: {\r\n                    show: true,\r\n                    innerRadius: 0.3,\r\n                    radius: 1,\r\n                    label: {\r\n                        show: true,\r\n                        radius: 1,\r\n                        formatter(label, series) {\r\n                            return \"<div class='pie-chart-label'>\" + label + \" : \" + Math.round(series.percent) + \"%</div>\";\r\n                        },\r\n                        background: {\r\n                            opacity: 0.8\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            grid: {\r\n                hoverable: true,\r\n                clickable: true\r\n            }\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Income statistics line chart\r\n     */\r\n\r\n\r\n    normalizeIncomeStatisticsData(data): Array<any> {\r\n        var chartData = [];\r\n        for (var i = 0; i < data.length; i++) {\r\n            var point = new Array(2);\r\n            point[0] = moment(data[i].date).utc().valueOf();\r\n            point[1] = data[i].amount;\r\n            chartData.push(point);\r\n        }\r\n\r\n        return chartData;\r\n    }\r\n\r\n    drawIncomeStatisticsChart(data): void {\r\n        this.incomeStatisticsHasData = (data && data.length > 0);\r\n        if (!this.incomeStatisticsHasData) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        const normalizedData = this.normalizeIncomeStatisticsData(data);\r\n        ($ as any).plot($(self.incomeStatisticsChart.nativeElement),\r\n            [{\r\n                data: normalizedData,\r\n                lines: {\r\n                    fill: 0.2,\r\n                    lineWidth: 1\r\n                },\r\n                color: [\"#BAD9F5\"]\r\n            }, {\r\n                data: normalizedData,\r\n                points: {\r\n                    show: true,\r\n                    fill: true,\r\n                    radius: 4,\r\n                    fillColor: \"#9ACAE6\",\r\n                    lineWidth: 2\r\n                },\r\n                color: \"#9ACAE6\",\r\n                shadowSize: 1\r\n            }, {\r\n                data: normalizedData,\r\n                lines: {\r\n                    show: true,\r\n                    fill: false,\r\n                    lineWidth: 3\r\n                },\r\n                color: \"#9ACAE6\",\r\n                shadowSize: 0\r\n            }],\r\n            {\r\n                xaxis: {\r\n                    mode: \"time\",\r\n                    timeformat: this.l(\"ChartDateFormat\"),\r\n                    minTickSize: [1, \"day\"],\r\n                    font: {\r\n                        lineHeight: 20,\r\n                        style: \"normal\",\r\n                        variant: \"small-caps\",\r\n                        color: \"#6F7B8A\",\r\n                        size: 10\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    ticks: 5,\r\n                    tickDecimals: 0,\r\n                    tickColor: \"#eee\",\r\n                    font: {\r\n                        lineHeight: 14,\r\n                        style: \"normal\",\r\n                        variant: \"small-caps\",\r\n                        color: \"#6F7B8A\"\r\n                    }\r\n                },\r\n                grid: {\r\n                    hoverable: true,\r\n                    clickable: false,\r\n                    tickColor: \"#eee\",\r\n                    borderColor: \"#eee\",\r\n                    borderWidth: 1,\r\n                    margin: {\r\n                        bottom: 20\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    incomeStatisticsDateIntervalChange(event) {\r\n        this.refreshIncomeStatisticsData();\r\n    }\r\n\r\n    refreshIncomeStatisticsData(): void {\r\n        this.loadingIncomeStatistics = true;\r\n        this._hostDashboardService.getIncomeStatistics(\r\n            this.selectedIncomeStatisticsDateInterval,\r\n            this.selectedDateRange.startDate,\r\n            this.selectedDateRange.endDate)\r\n            .subscribe(result => {\r\n                this.drawIncomeStatisticsChart(result.incomeStatistics);\r\n                this.loadingIncomeStatistics = false;\r\n            });\r\n    }\r\n\r\n    bindToolTipForIncomeStatisticsChart(incomeStatisticsChartContainer: any): void {\r\n        var incomeStatisticsChartLastTooltipIndex = null;\r\n\r\n        var removeChartTooltipIfExists = () => {\r\n            var $chartTooltip = $(\"#chartTooltip\");\r\n            if ($chartTooltip.length === 0) {\r\n                return;\r\n            }\r\n\r\n            $chartTooltip.remove();\r\n        };\r\n\r\n        var showChartTooltip = (x, y, label, value) => {\r\n            removeChartTooltipIfExists();\r\n            $(\"<div id='chartTooltip' class='chart-tooltip'>\" + label + \"<br/>\" + value + \"</div >\")\r\n                .css({\r\n                    position: \"absolute\",\r\n                    display: \"none\",\r\n                    top: y - 60,\r\n                    left: x - 40,\r\n                    border: \"0\",\r\n                    padding: \"2px 6px\",\r\n                    opacity: \"0.9\"\r\n                })\r\n                .appendTo(\"body\")\r\n                .fadeIn(200);\r\n        };\r\n\r\n        incomeStatisticsChartContainer.bind(\"plothover\", (event, pos, item) => {\r\n            if (!item) {\r\n                return;\r\n            }\r\n\r\n            if (incomeStatisticsChartLastTooltipIndex !== item.dataIndex) {\r\n                var label = \"\";\r\n                var isSingleDaySelected = this.selectedDateRange.startDate.format(\"L\") === this.selectedDateRange.endDate.format(\"L\");\r\n                if (this.selectedIncomeStatisticsDateInterval === AppIncomeStatisticsDateInterval.Daily ||\r\n                    isSingleDaySelected) {\r\n                    label = moment(item.datapoint[0]).format(\"dddd, DD MMMM YYYY\");\r\n                }\r\n                else {\r\n                    var isLastItem = item.dataIndex === item.series.data.length - 1;\r\n                    label += moment(item.datapoint[0]).format(\"LL\");\r\n                    if (isLastItem) {\r\n                        label += \" - \" + this.selectedDateRange.endDate.format(\"LL\");\r\n                    } else {\r\n                        var nextItem = item.series.data[item.dataIndex + 1];\r\n                        label += \" - \" + moment(nextItem[0]).format(\"LL\");\r\n                    }\r\n                }\r\n\r\n                incomeStatisticsChartLastTooltipIndex = item.dataIndex;\r\n                var value = this.l(\"IncomeWithAmount\", \"<strong>\" + item.datapoint[1] + this.currency + \"</strong>\");\r\n                showChartTooltip(item.pageX, item.pageY, label, value);\r\n            }\r\n        });\r\n\r\n        incomeStatisticsChartContainer.bind(\"mouseleave\", () => {\r\n            incomeStatisticsChartLastTooltipIndex = null;\r\n            removeChartTooltipIfExists();\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Recent tenants\r\n     */\r\n    \r\n    loadRecentTenantsTable(recentTenants): void {\r\n        this.recentTenantsData = recentTenants;\r\n    }\r\n\r\n    gotoAllRecentTenants(): void {\r\n        window.open(abp.appPath + \"app/admin/tenants?\" +\r\n            \"creationDateStart=\" + encodeURIComponent(this.hostDashboardData.tenantCreationStartDate.format()));\r\n    }\r\n\r\n    /*\r\n     * Expiring tenants\r\n     */\r\n\r\n    loadExpiringTenantsTable(expiringTenants): void {\r\n        this.expiringTenantsData = expiringTenants;\r\n    }\r\n\r\n    gotoAllExpiringTenants(): void {\r\n        const url = abp.appPath +\r\n            \"app/admin/tenants?\" +\r\n            \"subscriptionEndDateStart=\" +\r\n            encodeURIComponent(this.hostDashboardData.subscriptionEndDateStart.format()) +\r\n            \"&\" +\r\n            \"subscriptionEndDateEnd=\" +\r\n            encodeURIComponent(this.hostDashboardData.subscriptionEndDateEnd.format());\r\n\r\n        window.open(url);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/dashboard/host-dashboard.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-12\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{l(\\\"DemoUiComponents\\\")}}</span>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"alert alert-success alert-dismissable\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-hidden=\\\"true\\\"></button>\\r\\n        {{l(\\\"DemoUiComponents_Info\\\")}}<br />\\r\\n        <a href=\\\"http://keenthemes.com/preview/metronic/theme/admin_4_material_design/index.html\\\" class=\\\"alert-link\\\" target=\\\"_blank\\\">{{l(\\\"DemoUiComponents_Info_Metronic_Link_Text\\\")}}</a>\\r\\n    </div>\\r\\n    \\r\\n    <demo-ui-date-time #demoUiDateTime></demo-ui-date-time>\\r\\n    \\r\\n    <demo-ui-file-upload #demoUiFileUpload></demo-ui-file-upload>\\r\\n    \\r\\n    <demo-ui-selection #demoUiSelection></demo-ui-selection>\\r\\n    \\r\\n    <demo-ui-input-mask #demoUiInputMask></demo-ui-input-mask>\\r\\n    \\r\\n    <demo-ui-editor #demoUiEditor></demo-ui-editor>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-components.component.html\n// module id = ../../../../../src/app/admin/demo-ui-components/demo-ui-components.component.html\n// module chunks = admin.module","import { Component, Injector } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\n\r\n@Component({\r\n    templateUrl: './demo-ui-components.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class DemoUiComponentsComponent extends AppComponentBase {\r\n    \r\n   \r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-components.component.ts","module.exports = \"<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n            <span class=\\\"caption-subject\\\"> {{l(\\\"DateAndTimePickers\\\")}}</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n            <div class=\\\"form-group form-md-line-input form-md-floating-label row\\\">\\r\\n                <label class=\\\"col-md-2 control-label\\\">Default date picker</label>\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <div class=\\\"input-group-control\\\">\\r\\n                            <input type=\\\"datetime\\\" #SampleDatePicker name=\\\"SampleDatePicker\\\" class=\\\"form-control\\\">\\r\\n                            <label>{{l(\\\"SelectDate\\\")}}</label>\\r\\n                        </div>\\r\\n                        <span class=\\\"input-group-btn btn-right\\\">\\r\\n                            <button class=\\\"btn green-haze\\\" type=\\\"button\\\" (click)=\\\"submitDate()\\\">{{l(\\\"Submit\\\")}}</button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group form-md-line-input form-md-floating-label row\\\">\\r\\n                <label class=\\\"col-md-2 control-label\\\">Default datetime picker</label>\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <div class=\\\"input-group-control\\\">\\r\\n                            <input type=\\\"datetime\\\" #SampleDateTimePicker name=\\\"SampleDateTimePicker\\\" class=\\\"form-control\\\">\\r\\n                            <label>{{l(\\\"SelectDate\\\")}}</label>\\r\\n                        </div>\\r\\n                        <span class=\\\"input-group-btn btn-right\\\">\\r\\n                            <button class=\\\"btn green-haze\\\" (click)=\\\"submitDateTime()\\\" type=\\\"button\\\">{{l(\\\"Submit\\\")}}</button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group form-md-line-input form-md-floating-label edited row\\\">\\r\\n                <label class=\\\"col-md-2 control-label\\\">Default daterange picker</label>\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <div class=\\\"input-group-control\\\">\\r\\n\\r\\n                            <date-range-picker name=\\\"SampleDateRangePicker\\\"\\r\\n                                               [(startDate)]=\\\"dateRangePickerStartDate\\\"\\r\\n                                               [(endDate)]=\\\"dateRangePickerEndDate\\\"\\r\\n                                               [allowFutureDate]=\\\"true\\\">\\r\\n                            </date-range-picker>\\r\\n\\r\\n                        </div>\\r\\n                        <span class=\\\"input-group-btn btn-right\\\">\\r\\n                            <button class=\\\"btn green-haze\\\" (click)=\\\"submitDateRange()\\\" type=\\\"button\\\">{{l(\\\"Submit\\\")}}</button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-date-time.component.html\n// module id = ../../../../../src/app/admin/demo-ui-components/demo-ui-date-time.component.html\n// module chunks = admin.module","import { Component, Injector, ViewChild, ElementRef } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { DemoUiComponentsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\nimport * as moment from \"moment\";\r\n\r\n@Component({\r\n    selector: 'demo-ui-date-time',\r\n    templateUrl: './demo-ui-date-time.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class DemoUiDateTimeComponent extends AppComponentBase {\r\n\r\n    @ViewChild('SampleDatePicker') sampleDatePicker: ElementRef;\r\n    @ViewChild('SampleDateTimePicker') sampleDateTimePicker: ElementRef;\r\n\r\n    dateRangePickerStartDate: moment.Moment;\r\n    dateRangePickerEndDate: moment.Moment;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\r\n    ) {\r\n        super(injector);\r\n        this.dateRangePickerStartDate = moment().add(-7, 'days').endOf('day');\r\n        this.dateRangePickerEndDate = moment().startOf('day');\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n\r\n        // default date picker\r\n        $(this.sampleDatePicker.nativeElement).datetimepicker({\r\n            locale: abp.localization.currentLanguage.name,\r\n            format: 'L'\r\n        });\r\n\r\n        // default date time picker\r\n        $(this.sampleDateTimePicker.nativeElement).datetimepicker({\r\n            locale: abp.localization.currentLanguage.name,\r\n            format: 'L LT'\r\n        });\r\n    };\r\n\r\n    // default date picker - post\r\n    submitDate(): void {\r\n        var dateInput = moment($(this.sampleDatePicker.nativeElement).data(\"DateTimePicker\").date().format(\"YYYY-MM-DDTHH:mm:ssZ\"));\r\n\r\n        this.demoUiComponentsService.sendAndGetDate(dateInput)\r\n            .subscribe(data => {\r\n                this.message.info(data.dateString, this.l('PostedValue'));\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n            });\r\n    }\r\n\r\n    // default date time picker - post\r\n    submitDateTime(): void {\r\n        var dateInput = moment($(this.sampleDateTimePicker.nativeElement).data(\"DateTimePicker\").date().format(\"YYYY-MM-DDTHH:mm:ssZ\"));\r\n\r\n        this.demoUiComponentsService.sendAndGetDateTime(dateInput)\r\n            .subscribe(data => {\r\n                this.message.info(data.dateString, this.l('PostedValue'));\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n            });\r\n    }\r\n\r\n    // default date range picker - post\r\n    submitDateRange(): void {\r\n        this.demoUiComponentsService.sendAndGetDateRange(this.dateRangePickerStartDate, this.dateRangePickerEndDate)\r\n            .subscribe(data => {\r\n                this.message.info(data.dateString, this.l('PostedValue'));\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n            });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-date-time.component.ts","module.exports = \"<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n            <span class=\\\"caption-subject\\\">Editor</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n\\r\\n            <div class=\\\"form-group form-md-line-input form-md-floating-label row\\\">\\r\\n                <label class=\\\"col-md-2 control-label\\\">Html editor</label>\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <p-editor [(ngModel)]=\\\"htmlEditorInput\\\" name=\\\"HtmlEditorInput\\\" [style]=\\\"{'height':'300px'}\\\"></p-editor>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"form-group form-md-line-input row\\\">\\r\\n                <div class=\\\"col-md-offset-2 col-md-10\\\">\\r\\n                    <button class=\\\"btn green-haze\\\" (click)=\\\"submitValue()\\\" type=\\\"button\\\">{{l(\\\"Submit\\\")}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-editor.component.html\n// module id = ../../../../../src/app/admin/demo-ui-components/demo-ui-editor.component.html\n// module chunks = admin.module","import { Component, Injector } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { DemoUiComponentsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    selector: 'demo-ui-editor',\r\n    templateUrl: './demo-ui-editor.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class DemoUiEditorComponent extends AppComponentBase {\r\n\r\n    htmlEditorInput :string;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    // input mask - post\r\n    submitValue(): void {\r\n\r\n        this.demoUiComponentsService.sendAndGetValue(this.htmlEditorInput)\r\n            .subscribe(data => {\r\n                (abp as any).libs.sweetAlert.config.info.html = true;\r\n                this.message.info(data.output, this.l('PostedValue'));\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n            });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-editor.component.ts","module.exports = \"<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n            <span class=\\\"caption-subject\\\"> {{l(\\\"FileUpload\\\")}}</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n\\r\\n        <form role=\\\"form\\\">\\r\\n\\r\\n            <div class=\\\"form-group form-md-line-input row\\\">\\r\\n                <label class=\\\"col-md-2 control-label\\\">Default file uploader</label>\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n\\r\\n                    <p-fileUpload multiple=\\\"multiple\\\"\\r\\n                                  name=\\\"DefaultFileUploadFileInput[]\\\"\\r\\n                                  [url]=\\\"uploadUrl\\\"\\r\\n                                  accept=\\\"image/*\\\"\\r\\n                                  maxFileSize=\\\"1000000\\\"\\r\\n                                  (onUpload)=\\\"onUpload($event)\\\">\\r\\n\\r\\n                        <ng-template pTemplate=\\\"content\\\">\\r\\n                            <ul *ngIf=\\\"uploadedFiles.length\\\">\\r\\n                                <li *ngFor=\\\"let file of uploadedFiles\\\">{{file.name}} - {{file.size}} bytes</li>\\r\\n                            </ul>\\r\\n                        </ng-template>\\r\\n                    </p-fileUpload>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-file-upload.component.html\n// module id = ../../../../../src/app/admin/demo-ui-components/demo-ui-file-upload.component.html\n// module chunks = admin.module","import { Component, Injector } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { DemoUiComponentsServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { AppConsts } from '@shared/AppConsts';\r\n\r\n@Component({\r\n    selector: 'demo-ui-file-upload',\r\n    templateUrl: './demo-ui-file-upload.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class DemoUiFileUploadComponent extends AppComponentBase {\r\n\r\n    uploadUrl: string;\r\n    uploadedFiles: any[] = [];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\r\n    ) {\r\n        super(injector);\r\n        this.uploadUrl = AppConsts.remoteServiceBaseUrl + '/DemoUiComponents/UploadFiles';\r\n    }\r\n\r\n    // upload completed event\r\n    onUpload(event): void {\r\n        for (let file of event.files) {\r\n            this.uploadedFiles.push(file);\r\n        }\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-file-upload.component.ts","module.exports = \"<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n            <span class=\\\"caption-subject\\\"> Input Mask</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n            \\r\\n            <div class=\\\"form-group form-md-line-input form-md-floating-label row\\\">\\r\\n                <label class=\\\"col-md-2 control-label\\\">Date</label>\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <div class=\\\"input-group-control\\\">\\r\\n                            <p-inputMask [(ngModel)]=\\\"dateValue\\\" name=\\\"dateValue\\\" mask=\\\"99/99/9999\\\" placeholder=\\\"mm/dd/yyyy\\\" slotChar=\\\"mm/dd/yyyy\\\" styleClass=\\\"form-control\\\"></p-inputMask>\\r\\n                        </div>\\r\\n                        <span class=\\\"input-group-btn btn-right\\\">\\r\\n                            <button class=\\\"btn green-haze\\\" type=\\\"button\\\" (click)=\\\"submitDateValue()\\\">{{l(\\\"Submit\\\")}}</button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"form-group form-md-line-input form-md-floating-label row\\\">\\r\\n                <label class=\\\"col-md-2 control-label\\\">Phone</label>\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <div class=\\\"input-group-control\\\">\\r\\n                            <p-inputMask [(ngModel)]=\\\"phoneValue\\\" name=\\\"phoneValue\\\" mask=\\\"(999) 999-9999\\\" placeholder=\\\"(999) 999-9999\\\" styleClass=\\\"form-control\\\"></p-inputMask>\\r\\n                        </div>\\r\\n                        <span class=\\\"input-group-btn btn-right\\\">\\r\\n                            <button class=\\\"btn green-haze\\\" type=\\\"button\\\" (click)=\\\"submiPhoneValue()\\\">{{l(\\\"Submit\\\")}}</button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"form-group form-md-line-input form-md-floating-label row\\\">\\r\\n                <label class=\\\"col-md-2 control-label\\\">Phone Ext</label>\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <div class=\\\"input-group-control\\\">\\r\\n                            <p-inputMask mask=\\\"(999) 999-9999? x99999\\\" name=\\\"phoneExtValue\\\" [(ngModel)]=\\\"phoneExtValue\\\" placeholder=\\\"(999) 999-9999? x99999\\\" styleClass=\\\"form-control\\\"></p-inputMask>\\r\\n                        </div>\\r\\n                        <span class=\\\"input-group-btn btn-right\\\">\\r\\n                            <button class=\\\"btn green-haze\\\" type=\\\"button\\\" (click)=\\\"submitPhoneExtValue()\\\">{{l(\\\"Submit\\\")}}</button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group form-md-line-input form-md-floating-label row\\\">\\r\\n                <label class=\\\"col-md-2 control-label\\\">Serial</label>\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <div class=\\\"input-group-control\\\">\\r\\n                            <p-inputMask [(ngModel)]=\\\"serialValue\\\" name=\\\"serialValue\\\" mask=\\\"a*-999-a999\\\" placeholder=\\\"a*-999-a999\\\" styleClass=\\\"form-control\\\"></p-inputMask>\\r\\n                        </div>\\r\\n                        <span class=\\\"input-group-btn btn-right\\\">\\r\\n                            <button class=\\\"btn green-haze\\\" type=\\\"button\\\" (click)=\\\"submitSerialValue()\\\">{{l(\\\"Submit\\\")}}</button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-input-mask.component.html\n// module id = ../../../../../src/app/admin/demo-ui-components/demo-ui-input-mask.component.html\n// module chunks = admin.module","import { Component, Injector } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { DemoUiComponentsServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    selector: 'demo-ui-input-mask',\r\n    templateUrl: './demo-ui-input-mask.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class DemoUiInputMaskComponent extends AppComponentBase {\r\n\r\n    dateValue: string = '';\r\n    phoneValue: string = '';\r\n    serialValue: string = '';\r\n    phoneExtValue: string = '';\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    submitDateValue(): void {\r\n        this.submitValue(this.dateValue);\r\n    }\r\n\r\n    submiPhoneValue(): void {\r\n        this.submitValue(this.phoneValue);\r\n    }\r\n\r\n    submitSerialValue(): void {\r\n        this.submitValue(this.serialValue);\r\n    }\r\n\r\n    submitPhoneExtValue(): void {\r\n        this.submitValue(this.phoneExtValue);\r\n    }\r\n\r\n    // input mask - post\r\n    submitValue(value: any): void {\r\n\r\n        this.demoUiComponentsService.sendAndGetValue(value)\r\n            .subscribe(data => {\r\n                this.message.info(data.output, this.l('PostedValue'));\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n            });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-input-mask.component.ts","module.exports = \"<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n            <span class=\\\"caption-subject\\\">Prime NG Autocomplete</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n\\r\\n        <form role=\\\"form\\\">\\r\\n\\r\\n            <div class=\\\"form-group form-md-line-input form-md-floating-label edited row\\\">\\r\\n                <label class=\\\"col-md-2 control-label\\\">Single select</label>\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <div class=\\\"input-group-control ui-fluid\\\">\\r\\n\\r\\n                            <p-autoComplete [(ngModel)]=\\\"country\\\"\\r\\n                                            [suggestions]=\\\"filteredCountries\\\"\\r\\n                                            (completeMethod)=\\\"filterCountries($event)\\\"\\r\\n                                            field=\\\"name\\\"\\r\\n                                            placeholder=\\\"Country\\\"\\r\\n                                            [minLength]=\\\"1\\\"\\r\\n                                            name=\\\"SingleSelectInput\\\"\\r\\n                                            inputStyleClass=\\\"form-control\\\">\\r\\n                            </p-autoComplete>\\r\\n                        </div>\\r\\n                        <span class=\\\"input-group-btn btn-right\\\">\\r\\n                            <button class=\\\"btn green-haze\\\" (click)=\\\"submitSelectedCountry()\\\" type=\\\"button\\\">{{l(\\\"Submit\\\")}}</button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n                \\r\\n            <div class=\\\"form-group form-md-line-input form-md-floating-label edited row\\\">\\r\\n                <label class=\\\"col-md-2 control-label\\\">Multi select</label>\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <div class=\\\"input-group-control ui-fluid\\\">\\r\\n\\r\\n                            <p-autoComplete [(ngModel)]=\\\"countries\\\"\\r\\n                                            [suggestions]=\\\"filteredCountries\\\"\\r\\n                                            (completeMethod)=\\\"filterCountries($event)\\\"\\r\\n                                            field=\\\"name\\\"\\r\\n                                            placeholder=\\\"Countries\\\"\\r\\n                                            [minLength]=\\\"1\\\"\\r\\n                                            name=\\\"MultiSelectInput\\\"\\r\\n                                            [multiple]=\\\"true\\\">\\r\\n                            </p-autoComplete>\\r\\n                        </div>\\r\\n                        <span class=\\\"input-group-btn btn-right\\\">\\r\\n                            <button class=\\\"btn green-haze\\\" (click)=\\\"submitSelectedCountries()\\\" type=\\\"button\\\">{{l(\\\"Submit\\\")}}</button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-selection.component.html\n// module id = ../../../../../src/app/admin/demo-ui-components/demo-ui-selection.component.html\n// module chunks = admin.module","import { Component, Injector } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { DemoUiComponentsServiceProxy, NameValueOfString } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    selector: 'demo-ui-selection',\r\n    templateUrl: './demo-ui-selection.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class DemoUiSelectionComponent extends AppComponentBase {\r\n\r\n    filteredCountries: NameValueOfString[];\r\n    country: any;\r\n    countries: NameValueOfString[] = new Array<NameValueOfString>();\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    // get countries\r\n    filterCountries(event): void {\r\n        this.demoUiComponentsService.getCountries(event.query).subscribe(countries => {\r\n            this.filteredCountries = countries;\r\n        });\r\n    };\r\n\r\n    // single select - post\r\n    submitSelectedCountry(): void {\r\n        var selectedCountries = new Array<NameValueOfString>();\r\n\r\n        selectedCountries.push(this.country);\r\n\r\n        this.demoUiComponentsService.sendAndGetSelectedCountries(selectedCountries)\r\n            .subscribe((countries: NameValueOfString[]) => {\r\n                var message = \"\";\r\n\r\n                $.each(countries, (index, item) => {\r\n                    message += `<div><strong>id</strong>: ${item.value} - <strong>name</strong>: ${item.name}</div>`;\r\n                });\r\n\r\n                (abp as any).libs.sweetAlert.config.info.html = true;\r\n                this.message.info(message, this.l('PostedValue'));\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n            });\r\n    };\r\n\r\n    // multi select - post\r\n    submitSelectedCountries(): void {\r\n        this.demoUiComponentsService.sendAndGetSelectedCountries(this.countries)\r\n            .subscribe((countries: NameValueOfString[]) => {\r\n                var message = \"\";\r\n\r\n                $.each(countries, (index, item) => {\r\n                    message += `<div><strong>id</strong>: ${item.value} - <strong>name</strong>: ${item.name}</div>`;\r\n                });\r\n\r\n                (abp as any).libs.sweetAlert.config.info.html = true;\r\n                this.message.info(message, this.l('PostedValue'));\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n            });\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/demo-ui-components/demo-ui-selection.component.ts","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <form *ngIf=\\\"active\\\" #roleForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"edition.id\\\">{{l(\\\"EditEdition\\\")}}: {{edition.displayName}}</span>\\r\\n                        <span *ngIf=\\\"!edition.id\\\">{{l(\\\"CreateNewEdition\\\")}}</span>\\r\\n                    </h4>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n                        <tab heading=\\\"{{l('EditionProperties')}}\\\">\\r\\n                            <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                                <input #editionNameInput class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"EditionDisplayName\\\" [ngClass]=\\\"{'edited':edition.displayName}\\\" [(ngModel)]=\\\"edition.displayName\\\" required maxlength=\\\"64\\\">\\r\\n                                <label>{{l(\\\"EditionName\\\")}}</label>\\r\\n                            </div>\\r\\n\\r\\n                            <label>{{l(\\\"SubscriptionPrice\\\")}}</label>\\r\\n                            <div class=\\\"md-radio-inline\\\">\\r\\n                                <div class=\\\"md-radio\\\">\\r\\n                                    <input id=\\\"EditEdition_IsFree\\\" name=\\\"SubscriptionPrice\\\" class=\\\"md-radiobtn\\\" [(ngModel)]=\\\"isFree\\\" (ngModelChange)=\\\"resetPrices($event)\\\" [value]=\\\"true\\\" type=\\\"radio\\\">\\r\\n                                    <label for=\\\"EditEdition_IsFree\\\">\\r\\n                                        <span class=\\\"inc\\\"></span>\\r\\n                                        <span class=\\\"check\\\"></span>\\r\\n                                        <span class=\\\"box\\\"></span>\\r\\n                                        {{l(\\\"Free\\\")}}\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <div class=\\\"md-radio\\\">\\r\\n                                    <input id=\\\"EditEdition_IsPaid\\\" name=\\\"SubscriptionPrice\\\" class=\\\"md-radiobtn\\\" [(ngModel)]=\\\"isFree\\\" [value]=\\\"false\\\" type=\\\"radio\\\">\\r\\n                                    <label for=\\\"EditEdition_IsPaid\\\">\\r\\n                                        <span class=\\\"inc\\\"></span>\\r\\n                                        <span class=\\\"check\\\"></span>\\r\\n                                        <span class=\\\"box\\\"></span>\\r\\n                                        {{l(\\\"Paid\\\")}}\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\" *ngIf=\\\"!isFree\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group form-md-line-input form-md-floating-label\\\">\\r\\n                                        <input type=\\\"text\\\"\\r\\n                                               name=\\\"MonthlyPrice\\\"\\r\\n                                               currencyInput\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               autocomplete=\\\"off\\\"\\r\\n                                               [ngClass]=\\\"{'edited':edition.monthlyPrice}\\\"\\r\\n                                               [required]=\\\"!isFree\\\"\\r\\n                                               [(ngModel)]=\\\"edition.monthlyPrice\\\" />\\r\\n\\r\\n                                        <label>{{l(\\\"MonthlyPrice\\\")}}</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group form-md-line-input form-md-floating-label\\\">\\r\\n                                        <input type=\\\"text\\\"\\r\\n                                               name=\\\"AnnualPrice\\\"\\r\\n                                               currencyInput\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               autocomplete=\\\"off\\\"\\r\\n                                               [ngClass]=\\\"{'edited':edition.annualPrice}\\\"\\r\\n                                               [required]=\\\"!isFree\\\"\\r\\n                                               [(ngModel)]=\\\"edition.annualPrice\\\" /> \\r\\n                                         \\r\\n                                        <label>{{l(\\\"AnnualPrice\\\")}}</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div [hidden]=\\\"isFree\\\" class=\\\"paid-features\\\">\\r\\n\\r\\n                                <div class=\\\"md-checkbox-list\\\">\\r\\n                                    <div class=\\\"md-checkbox\\\">\\r\\n                                        <input id=\\\"EditEdition_IsTrialActive\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"isTrialActive\\\" [(ngModel)]=\\\"isTrialActive\\\" />\\r\\n                                        <label for=\\\"EditEdition_IsTrialActive\\\">\\r\\n                                            <span class=\\\"inc\\\"></span>\\r\\n                                            <span class=\\\"check\\\"></span>\\r\\n                                            <span class=\\\"box\\\"></span>\\r\\n                                            {{l(\\\"IsTrialActive\\\")}}\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group form-md-line-input form-md-floating-label\\\" *ngIf=\\\"isTrialActive\\\">\\r\\n                                    <input class=\\\"form-control\\\"\\r\\n                                           type=\\\"number\\\" name=\\\"TrialDayCount\\\"\\r\\n                                           [required]=\\\"isTrialActive\\\"\\r\\n                                           [(ngModel)]=\\\"edition.trialDayCount\\\"\\r\\n                                           [ngClass]=\\\"{'edited':edition.trialDayCount}\\\">\\r\\n                                    <label>{{l(\\\"TrialDayCount\\\")}}</label>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"md-checkbox-list\\\">\\r\\n                                    <div class=\\\"md-checkbox\\\">\\r\\n                                        <input id=\\\"EditEdition_IsWaitingDayActive\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsWaitingDayActive\\\" [(ngModel)]=\\\"isWaitingDayActive\\\" />\\r\\n                                        <label for=\\\"EditEdition_IsWaitingDayActive\\\">\\r\\n                                            <span class=\\\"inc\\\"></span>\\r\\n                                            <span class=\\\"check\\\"></span>\\r\\n                                            <span class=\\\"box\\\"></span>\\r\\n                                            {{l(\\\"WaitAfterSubscriptionExpireDate\\\")}}\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group form-md-line-input form-md-floating-label\\\" *ngIf=\\\"isWaitingDayActive\\\">\\r\\n                                    <input class=\\\"form-control\\\"\\r\\n                                           type=\\\"number\\\" name=\\\"WaitingDayAfterExpire\\\"\\r\\n                                           [required]=\\\"isWaitingDayActive\\\"\\r\\n                                           [(ngModel)]=\\\"edition.waitingDayAfterExpire\\\"\\r\\n                                           [ngClass]=\\\"{'edited':edition.waitingDayAfterExpire}\\\">\\r\\n                                    <label>{{l(\\\"WaitingDayAfterExpire\\\")}}</label>\\r\\n                                </div>\\r\\n\\r\\n                                <label>{{l(\\\"WhatWillDoneAfterSubscriptionExpiry\\\")}}</label>\\r\\n                                <div class=\\\"md-radio-inline\\\">\\r\\n                                    <div class=\\\"md-radio\\\">\\r\\n                                        <input id=\\\"EditEdition_ExpireAction_DeactiveUser\\\" name=\\\"ExpireAction\\\" class=\\\"md-radiobtn\\\" [(ngModel)]=\\\"expireAction\\\" [value]=\\\"expireActionEnum.DeactiveTenant\\\" (ngModelChange)=\\\"removeExpiringEdition($event)\\\" type=\\\"radio\\\">\\r\\n                                        <label for=\\\"EditEdition_ExpireAction_DeactiveUser\\\">\\r\\n                                            <span class=\\\"inc\\\"></span>\\r\\n                                            <span class=\\\"check\\\"></span>\\r\\n                                            <span class=\\\"box\\\"></span>\\r\\n                                            {{l(\\\"DeactiveTenant\\\")}}\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"md-radio\\\">\\r\\n                                        <input id=\\\"EditEdition_ExpireAction_AssignEdition\\\" name=\\\"ExpireAction\\\" class=\\\"md-radiobtn\\\" [(ngModel)]=\\\"expireAction\\\" [value]=\\\"expireActionEnum.AssignToAnotherEdition\\\" type=\\\"radio\\\">\\r\\n                                        <label for=\\\"EditEdition_ExpireAction_AssignEdition\\\">\\r\\n                                            <span class=\\\"inc\\\"></span>\\r\\n                                            <span class=\\\"check\\\"></span>\\r\\n                                            <span class=\\\"box\\\"></span>\\r\\n                                            {{l(\\\"AssignToAnotherEdition\\\")}}\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group form-md-line-input form-md-floating-label edition-list\\\" *ngIf=\\\"expireAction == expireActionEnum.AssignToAnotherEdition\\\">\\r\\n                                    <select name=\\\"expiringEdition\\\" class=\\\"form-control edited\\\" [(ngModel)]=\\\"edition.expiringEditionId\\\" [minValue]=\\\"expireAction == expireActionEnum.AssignToAnotherEdition ? 1:0\\\" [ngClass]=\\\"{'edited':edition.expiringEditionId}\\\">\\r\\n                                        <option *ngFor=\\\"let expiringEdition of expiringEditions\\\" [value]=\\\"expiringEdition.value\\\">{{expiringEdition.displayText}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </tab>\\r\\n                        <tab heading=\\\"{{l('Features')}}\\\">\\r\\n                            <feature-tree #featureTree></feature-tree>\\r\\n                        </tab>\\r\\n                    </tabset>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!roleForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/editions/create-or-edit-edition-modal.component.html\n// module id = ../../../../../src/app/admin/editions/create-or-edit-edition-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { EditionServiceProxy, CommonLookupServiceProxy, EditionEditDto, CreateOrUpdateEditionDto, ComboboxItemDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { FeatureTreeComponent } from '../shared/feature-tree.component';\r\nimport { AppEditionExpireAction } from '@shared/AppEnums';\r\n\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'createOrEditEditionModal',\r\n    templateUrl: './create-or-edit-edition-modal.component.html'\r\n})\r\nexport class CreateOrEditEditionModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('editionNameInput') editionNameInput: ElementRef;\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('featureTree') featureTree: FeatureTreeComponent;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active: boolean = false;\r\n    saving: boolean = false;\r\n\r\n    edition: EditionEditDto = new EditionEditDto();\r\n    expiringEditions: ComboboxItemDto[] = [];\r\n\r\n    expireAction: AppEditionExpireAction = AppEditionExpireAction.DeactiveTenant;\r\n    expireActionEnum: typeof AppEditionExpireAction = AppEditionExpireAction;\r\n    isFree: boolean = false;\r\n    isTrialActive: boolean = false;\r\n    isWaitingDayActive: boolean = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _editionService: EditionServiceProxy,\r\n        private _commonLookupService: CommonLookupServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(editionId?: number): void {\r\n        this.active = true;\r\n\r\n        this._commonLookupService.getEditionsForCombobox(true).subscribe(result => {\r\n            this.expiringEditions = result.items;\r\n            this.expiringEditions.unshift(new ComboboxItemDto({ value: null, displayText: this.l('NotAssigned'), isSelected: true }));\r\n\r\n            this._editionService.getEditionForEdit(editionId).subscribe(result => {\r\n                this.edition = result.edition;\r\n                this.featureTree.editData = result;\r\n\r\n                this.expireAction = this.edition.expiringEditionId > 0 ? AppEditionExpireAction.AssignToAnotherEdition : AppEditionExpireAction.DeactiveTenant;\r\n\r\n                this.isFree = !result.edition.monthlyPrice && !result.edition.annualPrice;\r\n                this.isTrialActive = result.edition.trialDayCount > 0;\r\n                this.isWaitingDayActive = result.edition.waitingDayAfterExpire > 0;\r\n\r\n                this.modal.show();\r\n            });\r\n        });\r\n    }\r\n\r\n    onShown(): void {\r\n        $(this.editionNameInput.nativeElement).focus();\r\n    }\r\n\r\n    updateAnnualPrice(value): void {\r\n        this.edition.annualPrice = value;\r\n    }\r\n\r\n    updateMonthlyPrice(value): void {\r\n        this.edition.monthlyPrice = value;\r\n    }\r\n\r\n    resetPrices(isFree) {\r\n        this.edition.annualPrice = undefined;\r\n        this.edition.monthlyPrice = undefined;\r\n    }\r\n\r\n    removeExpiringEdition(isDeactivateTenant) {\r\n        this.edition.expiringEditionId = null;\r\n    }\r\n\r\n    save(): void {\r\n        const input = new CreateOrUpdateEditionDto();\r\n        input.edition = this.edition;\r\n        input.featureValues = this.featureTree.getGrantedFeatures();\r\n\r\n        this.saving = true;\r\n        this._editionService.createOrUpdateEdition(input)\r\n            .finally(() => this.saving = false)\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/editions/create-or-edit-edition-modal.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{(\\\"Editions\\\")}}</span> <small>{{l(\\\"EditionsHeaderInfo\\\")}}</small>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 text-right\\\">\\r\\n            <button *ngIf=\\\"permission.isGranted('Pages.Editions.Create')\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"createEdition()\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewEdition\\\")}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"portlet light margin-bottom-0\\\">\\r\\n        <div class=\\\"portlet-body\\\">\\r\\n            <!--<Primeng-Datatable-Start>-->\\r\\n            <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengDatatableHelper.isLoading\\\">\\r\\n                <p-dataTable #dataTable\\r\\n                             (onLazyLoad)=\\\"getEditions()\\\"\\r\\n                             [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                             rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                             [paginator]=\\\"false\\\"\\r\\n                             [lazy]=\\\"true\\\"\\r\\n                             emptyMessage=\\\"{{l('NoData')}}\\\"\\r\\n                             [responsive]=\\\"primengDatatableHelper.isResponsive\\\">\\r\\n                    <p-footer>\\r\\n                        {{l('TotalRecordsCount', primengDatatableHelper.totalRecordsCount)}}\\r\\n                    </p-footer>\\r\\n\\r\\n                    <p-column field=\\\"\\\" \\r\\n                              [sortable]=\\\"false\\\"\\r\\n                              header=\\\"{{l('Actions')}}\\\"\\r\\n                              [style]=\\\"{'width':'10%','text-align':'center'}\\\"\\r\\n                              [hidden]=\\\"!isGrantedAny('Pages.Editions.Edit', 'Pages.Editions.Delete')\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <div class=\\\"btn-group dropdown\\\">\\r\\n                                <button class=\\\"dropdown-toggle btn btn-xs btn-primary blue\\\"\\r\\n                                        data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\"\\r\\n                                        aria-expanded=\\\"false\\\">\\r\\n                                    <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span>\\r\\n                                </button>\\r\\n                                <ul class=\\\"dropdown-menu\\\">\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Editions.Edit')\\\"\\r\\n                                           (click)=\\\"createOrEditEditionModal.show(record.id)\\\">{{l('Edit')}}</a>\\r\\n                                    </li>\\r\\n                                  \\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Editions.Delete')\\\"\\r\\n                                           (click)=\\\"deleteEdition(record)\\\">{{l('Delete')}}</a>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"displayName\\\" header=\\\"{{l('EditionName')}}\\\" [sortable]=\\\"false\\\"></p-column>\\r\\n                    <p-column field=\\\"creationTime\\\" header=\\\"{{l('CreationTime')}}\\\" [sortable]=\\\"false\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            {{record.creationTime | momentFormat:'L'}}\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    \\r\\n                </p-dataTable>\\r\\n                \\r\\n            </div>\\r\\n            <!--<Primeng-Datatable-End>-->\\r\\n        </div>\\r\\n    </div>\\r\\n    <createOrEditEditionModal #createOrEditEditionModal (modalSave)=\\\"getEditions()\\\"></createOrEditEditionModal>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/editions/editions.component.html\n// module id = ../../../../../src/app/admin/editions/editions.component.html\n// module chunks = admin.module","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { EditionServiceProxy, EditionListDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { CreateOrEditEditionModalComponent } from './create-or-edit-edition-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\n\r\n@Component({\r\n    templateUrl: \"./editions.component.html\",\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class EditionsComponent extends AppComponentBase  {\r\n\r\n    @ViewChild('createOrEditEditionModal') createOrEditEditionModal: CreateOrEditEditionModalComponent;\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _editionService: EditionServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getEditions(): void {\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n        this._editionService.getEditions().subscribe(result => {\r\n            this.primengDatatableHelper.totalRecordsCount = result.items.length;\r\n            this.primengDatatableHelper.records = result.items;\r\n            this.primengDatatableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    createEdition(): void {\r\n        this.createOrEditEditionModal.show();\r\n    };\r\n\r\n    deleteEdition(edition: EditionListDto): void {\r\n        this.message.confirm(\r\n            this.l('EditionDeleteWarningMessage', edition.displayName),\r\n            isConfirmed => {\r\n                if (isConfirmed) {\r\n                    this._editionService.deleteEdition(edition.id).subscribe(() => {\r\n                        this.getEditions();\r\n                        this.notify.success(this.l('SuccessfullyDeleted'));\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/editions/editions.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/format-settings/format-settings.component.css\n// module id = ../../../../../src/app/admin/format-settings/format-settings.component.css\n// module chunks = admin.module","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        {{l('FormatSettings')}}\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-sm-6 text-right\\\">\\r\\n            <div class=\\\"btn-group\\\">\\r\\n                <a class=\\\"btn blue btn-outline btn-sm\\\" href=\\\"javascript:;\\\"\\r\\n                   data-toggle=\\\"dropdown\\\"\\r\\n                   data-hover=\\\"dropdown\\\"\\r\\n                   data-close-others=\\\"true\\\"\\r\\n                   aria-expanded=\\\"true\\\">\\r\\n                    {{l('FormatSetting')}}\\r\\n                    <i class=\\\"fa fa-angle-down\\\"></i>\\r\\n                </a><div class=\\\"dropdown-backdrop\\\"></div>\\r\\n                <ul class=\\\"dropdown-menu pull-right\\\" *ngIf=\\\"canSync\\\">\\r\\n                    <li>\\r\\n                        <a (click)=\\\"sync()\\\">\\r\\n                            <i class=\\\"icon-refresh\\\"></i>\\r\\n                            {{l('Sync')}}\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12 col-xs-12 col-sm-12\\\">\\r\\n            <!-- BEGIN PORTLET-->\\r\\n            <div class=\\\"portlet light\\\">\\r\\n                <div class=\\\"portlet-title\\\">\\r\\n                    <div class=\\\"caption col-md-4 form-group search-header\\\">\\r\\n                        <form autocomplete=\\\"off\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-control\\\">\\r\\n                                    <input class=\\\"form-control\\\"\\r\\n                                           name=\\\"filter\\\"\\r\\n                                           [(ngModel)]=\\\"filterText.filter\\\"\\r\\n                                           placeholder=\\\"{{l('Search')}}\\\" #gb type=\\\"text\\\" pInputText>\\r\\n                                </div>\\r\\n                                <span class=\\\"input-group-btn btn-right\\\">\\r\\n                                    <button class=\\\"btn blue\\\" type=\\\"submit\\\">\\r\\n                                        {{l('Search')}}\\r\\n                                    </button>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"portlet-body\\\">\\r\\n                    <div class=\\\"primeng-datatable-container\\\">\\r\\n                        <p-dataTable [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                                     [rows]=\\\"primengDatatableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                     [paginator]=\\\"true\\\"\\r\\n                                     [loading]=\\\"primengDatatableHelper.isLoading\\\"\\r\\n                                     [rowsPerPageOptions]=\\\"primengDatatableHelper.predefinedRecordsCountPerPage\\\"\\r\\n                                     [globalFilter]=\\\"gb\\\"\\r\\n                                     scrollable=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     resizableColumns=\\\"primengDatatableHelper.resizableColumns\\\"\\r\\n                                     #dt>\\r\\n                            <p-column header=\\\"{{l('No')}}\\\" [style]=\\\"{'width':'70px'}\\\" [sortable]=\\\"false\\\">\\r\\n                                <ng-template let-i=\\\"rowIndex\\\" pTemplate=\\\"rowexpansion\\\">\\r\\n                                    {{i + 1}}\\r\\n                                </ng-template>\\r\\n                            </p-column>\\r\\n                            <p-column field=\\\"name\\\" header=\\\"{{l('Name')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'200px'}\\\"></p-column>\\r\\n                            <p-column field=\\\"web\\\" header=\\\"{{l('Web')}}\\\" [sortable]=\\\"false\\\" [style]=\\\"{'width':'200px'}\\\"></p-column>\\r\\n                        </p-dataTable>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- END PORTLET-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/format-settings/format-settings.component.html\n// module id = ../../../../../src/app/admin/format-settings/format-settings.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { FormatServiceProxy, FormatDetailOutput, GetFormatListInput } from '@shared/service-proxies/service-proxies';\r\n\r\nimport { PermissionName } from '@app/shared/common/auth/permission-name.component';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\n@Component({\r\n  selector: 'app-format-settings',\r\n  templateUrl: './format-settings.component.html',\r\n  styleUrls: ['./format-settings.component.css'],\r\n  animations: [appModuleAnimation()]\r\n})\r\nexport class FormatSettingsComponent extends AppComponentBase implements OnInit {\r\n\r\n \r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n    filterText: GetFormatListInput;\r\n    canSync: boolean = this.permission.isGranted(PermissionName.host.client.format.sync);\r\n\r\n    constructor(injector: Injector, private _formatService: FormatServiceProxy) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.filterText = new GetFormatListInput();\r\n        this.getLists();\r\n    }\r\n\r\n    private getLists(): void {\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n        this._formatService.getList(\r\n            this.filterText.filter,\r\n        ).subscribe((result) => {\r\n            this.primengDatatableHelper.records = result.items;\r\n            this.primengDatatableHelper.totalRecordsCount = result.items.length;\r\n        });\r\n    }\r\n\r\n    private sync(): void {\r\n        this._formatService.sync().subscribe((result) => {\r\n            this.getLists();\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/format-settings/format-settings.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/item-types/item-types.component.css\n// module id = ../../../../../src/app/admin/item-types/item-types.component.css\n// module chunks = admin.module","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-6\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        {{l('ItemTypes')}}\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-sm-6 text-right\\\">\\r\\n            <div class=\\\"btn-group\\\">\\r\\n                <a class=\\\"btn blue btn-outline btn-sm\\\" href=\\\"javascript:;\\\"\\r\\n                   data-toggle=\\\"dropdown\\\"\\r\\n                   data-hover=\\\"dropdown\\\"\\r\\n                   data-close-others=\\\"true\\\"\\r\\n                   aria-expanded=\\\"true\\\">\\r\\n                    {{l('ItemType')}}\\r\\n                    <i class=\\\"fa fa-angle-down\\\"></i>\\r\\n                </a><div class=\\\"dropdown-backdrop\\\"></div>\\r\\n                <ul class=\\\"dropdown-menu pull-right\\\" *ngIf=\\\"canSync\\\">\\r\\n                    <li>\\r\\n                        <a (click)=\\\"sync()\\\">\\r\\n                            <i class=\\\"icon-refresh\\\"></i>\\r\\n                            {{l('Sync')}}\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12 col-xs-12 col-sm-12\\\">\\r\\n            <!-- BEGIN PORTLET-->\\r\\n            <div class=\\\"portlet light\\\">\\r\\n                <div class=\\\"portlet-title\\\">\\r\\n                    <div class=\\\"caption col-md-4 form-group search-header\\\">\\r\\n                        <form autocomplete=\\\"off\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-control\\\">\\r\\n                                    <input class=\\\"form-control\\\"\\r\\n                                           name=\\\"filter\\\"\\r\\n                                           [(ngModel)]=\\\"filterText.filter\\\"\\r\\n                                           placeholder=\\\"{{l('Search')}}\\\" #gb type=\\\"text\\\" pInputText>\\r\\n                                </div>\\r\\n                                <span class=\\\"input-group-btn btn-right\\\">\\r\\n                                    <button class=\\\"btn blue\\\" type=\\\"submit\\\">\\r\\n                                        {{l('Search')}}\\r\\n                                    </button>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"portlet-body\\\">\\r\\n                    <div class=\\\"primeng-datatable-container\\\">\\r\\n                        <p-dataTable [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                                     [rows]=\\\"primengDatatableHelper.defaultRecordsCountPerPage\\\"\\r\\n                                     [paginator]=\\\"true\\\"\\r\\n                                     [loading]=\\\"primengDatatableHelper.isLoading\\\"\\r\\n                                     [rowsPerPageOptions]=\\\"primengDatatableHelper.predefinedRecordsCountPerPage\\\"\\r\\n                                     [globalFilter]=\\\"gb\\\"\\r\\n                                     scrollable=\\\"true\\\"\\r\\n                                     ScrollWidth=\\\"100%\\\"\\r\\n                                     resizableColumns=\\\"primengDatatableHelper.resizableColumns\\\"\\r\\n                                     #dt>\\r\\n                            <p-column header=\\\"{{l('No')}}\\\" [style]=\\\"{'width':'70px'}\\\" [sortable]=\\\"false\\\">\\r\\n                                <ng-template let-i=\\\"rowIndex\\\" pTemplate=\\\"rowexpansion\\\">\\r\\n                                    {{i + 1}}\\r\\n                                </ng-template>\\r\\n                            </p-column>\\r\\n                            <p-column field=\\\"name\\\" header=\\\"{{l('Name')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'200px'}\\\"></p-column>\\r\\n                            <p-column field=\\\"\\\" header=\\\"{{l('ItemType')}}\\\" [sortable]=\\\"false\\\">\\r\\n                                <ng-template let-item=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                    <span class=\\\"label label-primary margin-right-10\\\" *ngIf=\\\"item.displayInventoryAccount\\\">\\r\\n                                        {{l('DisplayInventoryAccount')}}\\r\\n                                    </span>\\r\\n                                    <span class=\\\"label label-primary margin-right-10\\\" *ngIf=\\\"item.displayPurchase\\\">\\r\\n                                        {{l('DisplayPurchase')}}\\r\\n                                    </span>\\r\\n                                    <span class=\\\"label label-primary margin-right-10\\\" *ngIf=\\\"item.displayReorderPoint\\\">\\r\\n                                        {{l('DisplayReorderPoint')}}\\r\\n                                    </span>\\r\\n                                    <span class=\\\"label label-primary margin-right-10\\\" *ngIf=\\\"item.displaySale\\\">\\r\\n                                        {{l('DisplaySale')}}\\r\\n                                    </span>\\r\\n                                    <span class=\\\"label label-primary margin-right-10\\\" *ngIf=\\\"item.displaySubItem\\\">\\r\\n                                        {{l('DisplaySubItem')}}\\r\\n                                    </span>\\r\\n                                    <span class=\\\"label label-primary\\\" *ngIf=\\\"item.displayTrackSerialNumber\\\">\\r\\n                                        {{l('DisplayTrackSerialNumber')}}\\r\\n                                    </span>\\r\\n                                </ng-template>\\r\\n                            </p-column>\\r\\n                        </p-dataTable>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- END PORTLET-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/item-types/item-types.component.html\n// module id = ../../../../../src/app/admin/item-types/item-types.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { ItemTypeServiceProxy, GetItemTypeListInput } from '@shared/service-proxies/service-proxies';\r\n\r\nimport { PermissionName } from '@app/shared/common/auth/permission-name.component';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\n\r\n@Component({\r\n      selector: 'app-item-types',\r\n      templateUrl: './item-types.component.html',\r\n      styleUrls: ['./item-types.component.css'],\r\n      animations: [appModuleAnimation()],\r\n      encapsulation: ViewEncapsulation.None  // Enable dynamic HTML styles\r\n})\r\nexport class ItemTypesComponent extends AppComponentBase implements OnInit {\r\n\r\n\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n    filterText: GetItemTypeListInput;\r\n    canSync: boolean = this.permission.isGranted(PermissionName.host.client.itemType.sync);\r\n\r\n    constructor(injector: Injector, private _itemTypeService: ItemTypeServiceProxy) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.filterText = new GetItemTypeListInput();\r\n        this.getLists();\r\n    }\r\n\r\n    private getLists(): void {\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n        this._itemTypeService.getList(\r\n            this.filterText.filter,\r\n        ).subscribe((result) => {\r\n            this.primengDatatableHelper.records = result.items;\r\n            this.primengDatatableHelper.totalRecordsCount = result.items.length;\r\n        });\r\n    }\r\n\r\n    private sync(): void {\r\n        this._itemTypeService.sync().subscribe((result) => {\r\n            this.getLists();\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/item-types/item-types.component.ts","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <form *ngIf=\\\"active\\\" #editForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"language.id\\\">{{l(\\\"EditLanguage\\\")}}: {{language.name}}</span>\\r\\n                        <span *ngIf=\\\"!language.id\\\">{{l(\\\"CreateNewLanguage\\\")}}</span>\\r\\n                    </h4>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <select #languageCombobox\\r\\n                                name=\\\"languageName\\\"\\r\\n                                class=\\\"form-control\\\"\\r\\n                                [(ngModel)]=\\\"language.name\\\"\\r\\n                                [attr.data-live-search]=\\\"true\\\"\\r\\n                                jq-plugin=\\\"selectpicker\\\"\\r\\n                                required>\\r\\n                            <option value=\\\"\\\">{{emptyText}}</option>\\r\\n                            <option *ngFor=\\\"let languageName of languageNames\\\" [value]=\\\"languageName.value\\\">{{languageName.displayText}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <select #iconCombobox\\r\\n                                name=\\\"languageIcon\\\"\\r\\n                                class=\\\"form-control\\\"\\r\\n                                [(ngModel)]=\\\"language.icon\\\"\\r\\n                                jq-plugin=\\\"selectpicker\\\"\\r\\n                                [attr.data-live-search]=\\\"true\\\">\\r\\n                            <option value=\\\"\\\">{{emptyText}}</option>\\r\\n                            <option *ngFor=\\\"let flag of flags\\\" [value]=\\\"flag.value\\\" [attr.data-icon]=\\\"flag.value\\\">{{flag.displayText}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div class=\\\"md-checkbox-list\\\">\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"EditLanguage_IsEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"languageIsEnabled\\\"\\r\\n                                   [(ngModel)]=\\\"language.isEnabled\\\">\\r\\n                            <label for=\\\"EditLanguage_IsEnabled\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"IsEnabled\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!editForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/create-or-edit-language-modal.component.html\n// module id = ../../../../../src/app/admin/languages/create-or-edit-language-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { LanguageServiceProxy, ApplicationLanguageEditDto, CreateOrUpdateLanguageInput, ComboboxItemDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'createOrEditLanguageModal',\r\n    templateUrl: './create-or-edit-language-modal.component.html'\r\n})\r\nexport class CreateOrEditLanguageModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('languageCombobox') languageCombobox: ElementRef;\r\n    @ViewChild('iconCombobox') iconCombobox: ElementRef;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active: boolean = false;\r\n    saving: boolean = false;\r\n\r\n    language: ApplicationLanguageEditDto = new ApplicationLanguageEditDto();\r\n\r\n    languageNames: ComboboxItemDto[] = [];\r\n    flags: ComboboxItemDto[] = [];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _languageService: LanguageServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(languageId?: number): void {\r\n        this.active = true;\r\n\r\n        this._languageService.getLanguageForEdit(languageId).subscribe(result => {\r\n            this.language = result.language;\r\n            this.languageNames = result.languageNames;\r\n            this.flags = result.flags;\r\n            this.modal.show();\r\n            setTimeout(() => {\r\n                    $(this.languageCombobox.nativeElement).selectpicker('refresh');\r\n                    $(this.iconCombobox.nativeElement).selectpicker('refresh');\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n    save(): void {\r\n        var input = new CreateOrUpdateLanguageInput();\r\n        input.language = this.language;\r\n\r\n        this.saving = true;\r\n        this._languageService.createOrUpdateLanguage(input)\r\n            .finally(() => this.saving = false)\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/create-or-edit-language-modal.component.ts","module.exports = \"<div bsModal #modal=\\\"bs-modal\\\" class=\\\"modal fade\\\" (onShown)=\\\"onShown()\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <form *ngIf=\\\"active\\\" #editForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span>{{l(\\\"EditText\\\")}}</span>\\r\\n                    </h4>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>{{l(\\\"Key\\\")}}</label>\\r\\n                        <div><strong>{{model.key}}</strong></div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <textarea readonly class=\\\"form-control edited\\\" rows=\\\"4\\\" [ngModel]=\\\"baseText\\\" name=\\\"baseText\\\"></textarea>\\r\\n                        <label><i class=\\\"{{baseLanguage.icon}}\\\"></i> {{baseLanguage.displayName}} </label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <textarea #targetValueInput class=\\\"form-control\\\" [ngClass]=\\\"{'edited':model.value}\\\" rows=\\\"4\\\" [(ngModel)]=\\\"model.value\\\" name=\\\"value\\\"></textarea>\\r\\n                        <label><i class=\\\"{{targetLanguage.icon}}\\\"></i> {{targetLanguage.displayName}} </label>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!editForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/edit-text-modal.component.html\n// module id = ../../../../../src/app/admin/languages/edit-text-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { LanguageServiceProxy, ApplicationLanguageEditDto, UpdateLanguageTextInput, ComboboxItemDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'editTextModal',\r\n    templateUrl: './edit-text-modal.component.html'\r\n})\r\nexport class EditTextModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('targetValueInput') targetValueInput: ElementRef;\r\n    @ViewChild('modal') modal: ModalDirective;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    model: UpdateLanguageTextInput = new UpdateLanguageTextInput();\r\n\r\n    baseText: string;\r\n    baseLanguage: abp.localization.ILanguageInfo;\r\n    targetLanguage: abp.localization.ILanguageInfo;\r\n\r\n    active: boolean = false;\r\n    saving: boolean = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _languageService: LanguageServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(baseLanguageName: string, targetLanguageName: string, sourceName: string, key: string, baseText: string, targetText: string): void {\r\n        this.model.sourceName = sourceName;\r\n        this.model.key = key;\r\n        this.model.languageName = targetLanguageName;\r\n        this.model.value = targetText;\r\n\r\n        this.baseText = baseText;\r\n        this.baseLanguage = _.find(abp.localization.languages, l => l.name === baseLanguageName);\r\n        this.targetLanguage = _.find(abp.localization.languages, l => l.name === targetLanguageName);\r\n\r\n        this.active = true;\r\n\r\n        this.modal.show();\r\n    }\r\n\r\n    onShown(): void {\r\n        $(this.targetValueInput.nativeElement).focus();\r\n    }\r\n\r\n    save(): void {\r\n        this.saving = true;\r\n        this._languageService.updateLanguageText(this.model)\r\n            .finally(() => this.saving = false)\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n\r\n    private findLanguage(name: string): abp.localization.ILanguageInfo {\r\n        return _.find(abp.localization.languages, l => l.name === name);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/edit-text-modal.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{l(\\\"LanguageTexts\\\")}}</span> <small>{{l(\\\"LanguageTextsHeaderInfo\\\")}}</small>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 text-right\\\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"portlet light margin-bottom-0\\\">\\r\\n        <div class=\\\"portlet-title portlet-title-filter\\\">\\r\\n            <div class=\\\"inputs inputs-full-width\\\">\\r\\n                <div class=\\\"portlet-input\\\">\\r\\n                    <form autocomplete=\\\"off\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-6 col-md-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"TextBaseLanguageSelectionCombobox\\\">{{l(\\\"BaseLanguage\\\")}}</label>\\r\\n                                    <select #baseLanguageNameCombobox\\r\\n                                            name=\\\"baseLanguageName\\\"\\r\\n                                            class=\\\"form-control bs-select\\\"\\r\\n                                            [(ngModel)]=\\\"baseLanguageName\\\"\\r\\n                                            [attr.data-live-search]=\\\"true\\\"\\r\\n                                            jq-plugin=\\\"selectpicker\\\"\\r\\n                                            jq-options='{ \\\"iconBase\\\": \\\"famfamfam-flag\\\", \\\"tickIcon\\\": \\\"fa fa-check\\\" }'>\\r\\n                                        <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language.name\\\" [attr.data-icon]=\\\"language.icon\\\">{{language.displayName}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-6 col-md-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"TextTargetLanguageSelectionCombobox\\\">{{l(\\\"TargetLanguage\\\")}}</label>\\r\\n                                    <select #targetLanguageNameCombobox\\r\\n                                            name=\\\"targetLanguageName\\\"\\r\\n                                            class=\\\"form-control bs-select\\\"\\r\\n                                            [(ngModel)]=\\\"targetLanguageName\\\"\\r\\n                                            [attr.data-live-search]=\\\"true\\\"\\r\\n                                            jq-plugin=\\\"selectpicker\\\"\\r\\n                                            jq-options='{ \\\"iconBase\\\": \\\"famfamfam-flag\\\", \\\"tickIcon\\\": \\\"fa fa-check\\\" }'>\\r\\n                                        <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language.name\\\" [attr.data-icon]=\\\"language.icon\\\">{{language.displayName}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-6 col-md-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"TextSourceSelectionCombobox\\\">{{l(\\\"Source\\\")}}</label>\\r\\n                                    <select #sourceNameCombobox\\r\\n                                            name=\\\"sourceName\\\"\\r\\n                                            class=\\\"form-control bs-select\\\"\\r\\n                                            [(ngModel)]=\\\"sourceName\\\"\\r\\n                                            [attr.data-live-search]=\\\"true\\\"\\r\\n                                            jq-plugin=\\\"selectpicker\\\">\\r\\n                                        <option *ngFor=\\\"let sourceName of sourceNames\\\" [value]=\\\"sourceName\\\">{{sourceName}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-6 col-md-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"TargetValueFilterSelectionCombobox\\\">{{l(\\\"TargetValue\\\")}}</label>\\r\\n                                    <select #targetValueFilterCombobox\\r\\n                                            name=\\\"targetValueFilter\\\"\\r\\n                                            class=\\\"form-control bs-select\\\"\\r\\n                                            [(ngModel)]=\\\"targetValueFilter\\\"\\r\\n                                            jq-plugin=\\\"selectpicker\\\">\\r\\n                                        <option value=\\\"ALL\\\">{{l(\\\"All\\\")}}</option>\\r\\n                                        <option value=\\\"EMPTY\\\">{{l(\\\"EmptyOnes\\\")}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control\\\" placeholder=\\\"{{l('SearchWithThreeDot')}}\\\" type=\\\"text\\\">\\r\\n                            <span class=\\\"input-group-btn\\\">\\r\\n                                <button (click)=\\\"applyFilters()\\\" class=\\\"btn default\\\" type=\\\"submit\\\"><i class=\\\"icon-refresh\\\"></i> {{l(\\\"Refresh\\\")}}</button>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"portlet-body\\\">\\r\\n\\r\\n            <!--<Primeng-Datatable-Start>-->\\r\\n            <div class=\\\"primeng-datatable-container\\\"\\r\\n                 [busyIf]=\\\"primengDatatableHelper.isLoading\\\">\\r\\n                <p-dataTable #dataTable\\r\\n                             (onLazyLoad)=\\\"getLanguageTexts($event)\\\"\\r\\n                             [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                             rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                             [paginator]=\\\"false\\\"\\r\\n                             [lazy]=\\\"true\\\"\\r\\n                             emptyMessage=\\\"{{l('NoData')}}\\\"\\r\\n                             [responsive]=\\\"primengDatatableHelper.isResponsive\\\">\\r\\n\\r\\n\\r\\n                    <p-column field=\\\"key\\\" header=\\\"{{l('Key')}}\\\" [sortable]=\\\"true\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <span title=\\\"{{record.key}}\\\">{{truncateString(record.key)}}</span>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n\\r\\n                    <p-column field=\\\"baseValue\\\" header=\\\"{{l('BaseValue')}}\\\" [sortable]=\\\"true\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <span title=\\\"{{record.baseValue}}\\\">{{truncateString(record.baseValue)}}</span>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n\\r\\n                    <p-column field=\\\"targetValue\\\" header=\\\"{{l('TargetValue')}}\\\" [sortable]=\\\"true\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <span title=\\\"{{record.targetValue}}\\\">{{truncateString(record.targetValue) }}</span>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n\\r\\n                    <p-column field=\\\"\\\" header=\\\"{{l('Edit')}}\\\" [sortable]=\\\"false\\\" styleClass=\\\"width-percent-10\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <button class=\\\"btn btn-default btn-xs\\\"\\r\\n                                    (click)=\\\"editTextModal.show(baseLanguageName,targetLanguageName,sourceName,record.key,record.baseValue,record.targetValue)\\\"\\r\\n                                    title=\\\"{{l('Edit')}}\\\">\\r\\n                                <i class=\\\"fa fa-edit\\\"></i>\\r\\n                            </button>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n\\r\\n                </p-dataTable>\\r\\n                <div class=\\\"primeng-paging-container\\\">\\r\\n                    <p-paginator rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                 #paginator\\r\\n                                 (onPageChange)=\\\"getLanguageTexts($event)\\\"\\r\\n                                 [totalRecords]=\\\"primengDatatableHelper.totalRecordsCount\\\"\\r\\n                                 [rowsPerPageOptions]=\\\"primengDatatableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                    </p-paginator>\\r\\n                    <span class=\\\"total-records-count\\\">\\r\\n                        {{l('TotalRecordsCount', primengDatatableHelper.totalRecordsCount)}}\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--<Primeng-Datatable-End>-->\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <editTextModal #editTextModal (modalSave)=\\\"refreshTextValueFromModal()\\\"></editTextModal>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/language-texts.component.html\n// module id = ../../../../../src/app/admin/languages/language-texts.component.html\n// module chunks = admin.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/language-texts.component.less\n// module id = ../../../../../src/app/admin/languages/language-texts.component.less\n// module chunks = admin.module","import { Component, Injector, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { LanguageServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { EditTextModalComponent } from './edit-text-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\n\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    templateUrl: \"./language-texts.component.html\",\r\n    styleUrls: [\"./language-texts.component.less\"],\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class LanguageTextsComponent extends AppComponentBase implements AfterViewInit, OnInit {\r\n\r\n    @ViewChild('targetLanguageNameCombobox') targetLanguageNameCombobox: ElementRef;\r\n    @ViewChild('baseLanguageNameCombobox') baseLanguageNameCombobox: ElementRef;\r\n    @ViewChild('sourceNameCombobox') sourceNameCombobox: ElementRef;\r\n    @ViewChild('targetValueFilterCombobox') targetValueFilterCombobox: ElementRef;\r\n    @ViewChild('textsTable') textsTable: ElementRef;\r\n    @ViewChild('editTextModal') editTextModal: EditTextModalComponent;\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    sourceNames: string[] = [];\r\n    languages: abp.localization.ILanguageInfo[] = [];\r\n    targetLanguageName: string;\r\n    sourceName: string;\r\n    baseLanguageName: string;\r\n    targetValueFilter: string;\r\n    filterText: string;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _languageService: LanguageServiceProxy,\r\n        private _router: Router,\r\n        private _activatedRoute: ActivatedRoute\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.sourceNames = _.map(_.filter(abp.localization.sources, source => source.type === 'MultiTenantLocalizationSource'), value => value.name);\r\n        this.languages = abp.localization.languages;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => {\r\n            this.init();\r\n        });\r\n    }\r\n\r\n    getLanguageTexts(event?: LazyLoadEvent) {\r\n        if (!this.paginator || !this.dataTable || !this.sourceName) {\r\n            return;\r\n        }\r\n\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n\r\n        this._languageService.getLanguageTexts(\r\n            this.primengDatatableHelper.getMaxResultCount(this.paginator, event),\r\n            this.primengDatatableHelper.getSkipCount(this.paginator, event),\r\n            this.primengDatatableHelper.getSorting(this.dataTable),\r\n            this.sourceName,\r\n            this.baseLanguageName,\r\n            this.targetLanguageName,\r\n            this.targetValueFilter,\r\n            this.filterText\r\n        ).subscribe(result => {\r\n            this.primengDatatableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengDatatableHelper.records = result.items;\r\n            this.primengDatatableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    init(): void {\r\n        this._activatedRoute.params.subscribe((params: Params) => {\r\n            this.baseLanguageName = params['baseLanguageName'] || abp.localization.currentLanguage.name;\r\n            this.targetLanguageName = params['name'];\r\n            this.sourceName = params['sourceName'] || 'CorarlERP';\r\n            this.targetValueFilter = params['targetValueFilter'] || 'ALL';\r\n            this.filterText = params['filterText'] || '';\r\n\r\n            setTimeout(() => {\r\n                $(this.baseLanguageNameCombobox.nativeElement).selectpicker('refresh');\r\n                $(this.targetLanguageNameCombobox.nativeElement).selectpicker('refresh');\r\n                $(this.sourceNameCombobox.nativeElement).selectpicker('refresh');\r\n                $(this.targetValueFilterCombobox.nativeElement).selectpicker('refresh');\r\n            }, 0);\r\n\r\n            this.reloadPage();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    applyFilters(): void {\r\n        this._router.navigate(['app/admin/languages', this.targetLanguageName, 'texts', {\r\n            sourceName: this.sourceName,\r\n            baseLanguageName: this.baseLanguageName,\r\n            targetValueFilter: this.targetValueFilter,\r\n            filterText: this.filterText\r\n        }]);\r\n    }\r\n\r\n    truncateString(text): string {\r\n        return abp.utils.truncateStringWithPostfix(text, 32, \"...\");\r\n    }\r\n\r\n    refreshTextValueFromModal(): void {\r\n        for (var i = 0; i < this.primengDatatableHelper.records.length; i++) {\r\n            if (this.primengDatatableHelper.records[i].key === this.editTextModal.model.key) {\r\n                this.primengDatatableHelper.records[i].targetValue = this.editTextModal.model.value;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/language-texts.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{l(\\\"Languages\\\")}}</span> <small>{{l(\\\"LanguagesHeaderInfo\\\")}}</small>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 text-right\\\">\\r\\n            <button *ngIf=\\\"isGranted('Pages.Administration.Languages.Create')\\\" (click)=\\\"createOrEditLanguageModal.show()\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewLanguage\\\")}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"portlet light margin-bottom-0\\\">\\r\\n        <div class=\\\"portlet-body\\\">\\r\\n            <!--<Primeng-Datatable-Start>-->\\r\\n            <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengDatatableHelper.isLoading\\\">\\r\\n                <p-dataTable #dataTable\\r\\n                             (onLazyLoad)=\\\"getLanguages()\\\"\\r\\n                             [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                             rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                             [paginator]=\\\"false\\\"\\r\\n                             [lazy]=\\\"true\\\"\\r\\n                             emptyMessage=\\\"{{l('NoData')}}\\\"\\r\\n                             [responsive]=\\\"primengDatatableHelper.isResponsive\\\">\\r\\n                    <p-footer>\\r\\n                        {{l('TotalRecordsCount', primengDatatableHelper.totalRecordsCount)}}\\r\\n                    </p-footer>\\r\\n\\r\\n                    <p-column field=\\\"\\\"\\r\\n                              header=\\\"{{l('Actions')}}\\\"\\r\\n                              [sortable]=\\\"false\\\"\\r\\n                              styleClass=\\\"width-percent-10\\\"\\r\\n                              [hidden]=\\\"!isGrantedAny('Pages.Administration.Languages.Edit', 'Pages.Administration.Languages.ChangeTexts', 'Pages.Administration.Languages.Delete')\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <div class=\\\"btn-group dropdown\\\">\\r\\n                                <button class=\\\"dropdown-toggle btn btn-xs btn-primary blue\\\"\\r\\n                                        data-toggle=\\\"dropdown\\\"\\r\\n                                        tooltip=\\\"{{l('Actions')}}\\\"\\r\\n                                        aria-haspopup=\\\"true\\\"\\r\\n                                        aria-expanded=\\\"false\\\">\\r\\n                                    <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span>\\r\\n                                </button>\\r\\n                                <ul class=\\\"dropdown-menu\\\">\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Administration.Languages.Edit') && record.tenantId === appSession.tenantId\\\"\\r\\n                                           (click)=\\\"createOrEditLanguageModal.show(record.id)\\\">{{l('Edit')}}</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Administration.Languages.ChangeTexts')\\\"\\r\\n                                           (click)=\\\"changeTexts(record)\\\">{{l('ChangeTexts')}}</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Administration.Languages.Edit')\\\"\\r\\n                                           (click)=\\\"setAsDefaultLanguage(record)\\\">{{l('SetAsDefaultLanguage')}}</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Administration.Languages.Delete') && record.tenantId === appSession.tenantId\\\"\\r\\n                                           (click)=\\\"deleteLanguage(record)\\\">{{l('Delete')}}</a>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"displayName\\\" header=\\\"{{l('Name')}}\\\" [sortable]=\\\"false\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <span  [ngClass]=\\\"{'text-bold' : defaultLanguageName === record.name}\\\">\\r\\n                                <i [ngClass]=\\\"record.icon\\\" class=\\\"margin-right-5\\\"></i>\\r\\n                                {{record.displayName}} <span *ngIf=\\\"defaultLanguageName === record.name\\\">({{l('Default')}})</span>\\r\\n                            </span>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"name\\\" header=\\\"{{l('Code')}}\\\" [sortable]=\\\"false\\\"></p-column>\\r\\n                    <p-column field=\\\"tenantId\\\" header=\\\"{{l('Default')}} *\\\" [sortable]=\\\"false\\\" *ngIf=\\\"appSession.tenantId ? true : false\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <span class=\\\"label label-default\\\"\\r\\n                                  *ngIf=\\\"record.tenantId !== appSession.tenantId\\\">\\r\\n                                {{l('Yes')}}\\r\\n                            </span>\\r\\n                            <span class=\\\"label label-success\\\"\\r\\n                                  *ngIf=\\\"record.tenantId === appSession.tenantId\\\">\\r\\n                                {{l('No')}}\\r\\n                            </span>\\r\\n\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"creationTime\\\" header=\\\"{{l('CreationTime')}}\\\" [sortable]=\\\"false\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            {{record.creationTime | momentFormat:'L'}}\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"isEnabled\\\" header=\\\"{{l('IsEnabled')}}\\\" [sortable]=\\\"false\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <span class=\\\"label label-success\\\"\\r\\n                                  *ngIf=\\\"!record.isDisabled\\\">\\r\\n                                {{l('Yes')}}\\r\\n                            </span>\\r\\n                            <span class=\\\"label label-default\\\"\\r\\n                                  *ngIf=\\\"record.isDisabled\\\">\\r\\n                                {{l('No')}}\\r\\n                            </span>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                </p-dataTable>\\r\\n            </div>\\r\\n            <!--<Primeng-Datatable-End>-->\\r\\n\\r\\n\\r\\n            <p class=\\\"margin-top-20\\\" *ngIf=\\\"appSession.tenantId\\\">\\r\\n                * {{l(\\\"CanNotEditOrDeleteDefaultLanguages\\\")}}\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditLanguageModal #createOrEditLanguageModal (modalSave)=\\\"getLanguages()\\\"></createOrEditLanguageModal>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/languages.component.html\n// module id = ../../../../../src/app/admin/languages/languages.component.html\n// module chunks = admin.module","import { Component, Injector, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LanguageServiceProxy, ApplicationLanguageListDto, SetDefaultLanguageInput } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { CreateOrEditLanguageModalComponent } from './create-or-edit-language-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\n\r\n@Component({\r\n    templateUrl: \"./languages.component.html\",\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class LanguagesComponent extends AppComponentBase {\r\n\r\n    @ViewChild('languagesTable') languagesTable: ElementRef;\r\n    @ViewChild('createOrEditLanguageModal') createOrEditLanguageModal: CreateOrEditLanguageModalComponent;\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    defaultLanguageName: string;\r\n    private _$languagesTable: JQuery;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _languageService: LanguageServiceProxy,\r\n        private _router: Router\r\n    ) {\r\n        super(injector);\r\n    }\r\n  \r\n    getLanguages(): void {\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n\r\n        this._languageService.getLanguages().subscribe(result => {\r\n            this.defaultLanguageName = result.defaultLanguageName;\r\n            this.primengDatatableHelper.records = result.items;\r\n            this.primengDatatableHelper.totalRecordsCount = result.items.length;\r\n            this.primengDatatableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n     \r\n    changeTexts(language: ApplicationLanguageListDto): void {\r\n        this._router.navigate(['app/admin/languages', language.name, 'texts']);\r\n    }\r\n\r\n    setAsDefaultLanguage(language: ApplicationLanguageListDto): void {\r\n        const input = new SetDefaultLanguageInput();\r\n        input.name = language.name;\r\n        this._languageService.setDefaultLanguage(input).subscribe(() => {\r\n            this.getLanguages();\r\n            this.notify.success(this.l('SuccessfullySaved'));\r\n        });\r\n    }\r\n\r\n    deleteLanguage(language: ApplicationLanguageListDto): void {\r\n        this.message.confirm(\r\n            this.l('LanguageDeleteWarningMessage', language.displayName),\r\n            isConfirmed => {\r\n                if (isConfirmed) {\r\n                    this._languageService.deleteLanguage(language.id).subscribe(() => {\r\n                        this.getLanguages();\r\n                        this.notify.success(this.l('SuccessfullyDeleted'));\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/languages/languages.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-12\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{l(\\\"Maintenance\\\")}}</span>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet light margin-bottom-0\\\">\\r\\n        <div class=\\\"portlet-body\\\">\\r\\n            <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n\\r\\n                <tab heading=\\\"{{l('Caches')}}\\\">\\r\\n                    <div class=\\\"row margin-bottom-10\\\">\\r\\n                        <div class=\\\"col-xs-6\\\">\\r\\n                            <p>{{l(\\\"CachesHeaderInfo\\\")}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xs-6 text-right\\\">\\r\\n                            <button class=\\\"btn blue\\\" (click)=\\\"clearAllCaches()\\\"><i class=\\\"fa fa-refresh\\\"></i> {{l(\\\"ClearAll\\\")}}</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-xs-12\\\">\\r\\n                            <table class=\\\"table table-striped table-hover table-bordered\\\">\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let cache of caches\\\">\\r\\n                                        <td>\\r\\n                                            <span>{{cache.name}}</span>\\r\\n                                            <button class=\\\"btn btn-xs blue pull-right\\\" (click)=\\\"clearCache(cache.name);\\\">\\r\\n                                                {{l(\\\"Clear\\\")}}\\r\\n                                            </button>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </tab>\\r\\n\\r\\n                <tab heading=\\\"{{l('WebSiteLogs')}}\\\">\\r\\n                    <div class=\\\"row margin-bottom-10\\\">\\r\\n                        <div class=\\\"col-xs-6\\\">\\r\\n                            <p>{{l(\\\"WebSiteLogsHeaderInfo\\\")}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xs-6 text-right\\\">\\r\\n                            <button class=\\\"btn blue\\\" (click)=\\\"downloadWebLogs()\\\"><i class=\\\"fa fa-download\\\"></i> {{l(\\\"DownloadAll\\\")}}</button>\\r\\n                            <button class=\\\"btn blue\\\" (click)=\\\"getWebLogs()\\\"><i class=\\\"fa fa-refresh\\\"></i> {{l(\\\"Refresh\\\")}}</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-xs-12\\\">\\r\\n                            <div class=\\\"web-log-view full-height\\\">\\r\\n                                <span class=\\\"log-line\\\" *ngFor=\\\"let log of logs\\\">\\r\\n                                    <span [class]=\\\"getLogClass(log)\\\">{{getLogType(log)}}</span>\\r\\n                                    {{getRawLogContent(log)}}\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </tab>\\r\\n\\r\\n            </tabset>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/maintenance/maintenance.component.html\n// module id = ../../../../../src/app/admin/maintenance/maintenance.component.html\n// module chunks = admin.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".web-log-view {\\n  font-family: \\\"Courier New\\\";\\n  overflow-x: scroll;\\n  overflow-y: scroll;\\n  height: 100%;\\n  white-space: nowrap;\\n}\\n.web-log-view span.log-line {\\n  margin-bottom: 5px;\\n  display: block;\\n}\\n.web-log-view span.log-line span.label {\\n  width: 50px;\\n  display: inline-block;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/maintenance/maintenance.component.less\n// module id = ../../../../../src/app/admin/maintenance/maintenance.component.less\n// module chunks = admin.module","import { Component, Injector, OnInit, AfterViewInit } from '@angular/core';\r\nimport { CachingServiceProxy, EntityDtoOfString, WebLogServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport * as _ from \"lodash\";\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\n\r\n@Component({\r\n    templateUrl: \"./maintenance.component.html\",\r\n    styleUrls: [\"./maintenance.component.less\"],\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class MaintenanceComponent extends AppComponentBase implements OnInit, AfterViewInit {\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _cacheService: CachingServiceProxy,\r\n        private _webLogService: WebLogServiceProxy,\r\n        private _fileDownloadService: FileDownloadService) {\r\n        super(injector);\r\n    }\r\n\r\n    loading: boolean = false;\r\n    caches: any = null;\r\n    logs: any = '';\r\n\r\n    getCaches(): void {\r\n        let self = this;\r\n        self.loading = true;\r\n        self._cacheService.getAllCaches()\r\n            .finally(() => {\r\n                self.loading = false;\r\n            })\r\n            .subscribe((result) => {\r\n                self.caches = result.items;\r\n            });\r\n    };\r\n\r\n    clearCache(cacheName): void {\r\n        let self = this;\r\n        let input = new EntityDtoOfString();\r\n        input.id = cacheName;\r\n        \r\n        self._cacheService.clearCache(input).subscribe(() => {\r\n            self.notify.success(self.l('CacheSuccessfullyCleared'));\r\n        });\r\n    }\r\n\r\n    clearAllCaches(): void {\r\n        let self = this;\r\n        self._cacheService.clearAllCaches().subscribe(() => {\r\n            self.notify.success(self.l('AllCachesSuccessfullyCleared'));\r\n        });\r\n    };\r\n\r\n    getWebLogs(): void {\r\n        let self = this;\r\n        self._webLogService.getLatestWebLogs().subscribe((result) => {\r\n            self.logs = result.latestWebLogLines;\r\n            self.fixWebLogsPanelHeight();\r\n        });\r\n    };\r\n\r\n    downloadWebLogs = function () {\r\n        let self = this;\r\n        self._webLogService.downloadWebLogs().subscribe((result) => {\r\n            self._fileDownloadService.downloadTempFile(result);\r\n        });\r\n    };\r\n\r\n    getLogClass(log: string): string {\r\n\r\n        if (log.startsWith(\"DEBUG\")) {\r\n            return \"label label-default\";\r\n        }\r\n\r\n        if (log.startsWith(\"INFO\")) {\r\n            return \"label label-info\";\r\n        }\r\n\r\n        if (log.startsWith(\"WARN\")) {\r\n            return \"label label-warning\";\r\n        }\r\n\r\n        if (log.startsWith(\"ERROR\")) {\r\n            return \"label label-danger\";\r\n        }\r\n\r\n        if (log.startsWith(\"FATAL\")) {\r\n            return \"label label-danger\";\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n\r\n    getLogType(log: string): string {\r\n        if (log.startsWith(\"DEBUG\")) {\r\n            return \"DEBUG\";\r\n        }\r\n\r\n        if (log.startsWith(\"INFO\")) {\r\n            return \"INFO\";\r\n        }\r\n\r\n        if (log.startsWith(\"WARN\")) {\r\n            return \"WARN\";\r\n        }\r\n\r\n        if (log.startsWith(\"ERROR\")) {\r\n            return \"ERROR\";\r\n        }\r\n\r\n        if (log.startsWith(\"FATAL\")) {\r\n            return \"FATAL\";\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n\r\n    getRawLogContent(log: string): string {\r\n        return _.escape(log)\r\n            .replace('DEBUG', '')\r\n            .replace('INFO', '')\r\n            .replace('WARN', '')\r\n            .replace('ERROR', '')\r\n            .replace('FATAL', '');\r\n    }\r\n\r\n    fixWebLogsPanelHeight(): void {\r\n        var windowHeight = $(window).height();\r\n        var panelHeight = $('.full-height').height();\r\n        var difference = windowHeight - panelHeight;\r\n        var fixedHeight = panelHeight + difference;\r\n        $('.full-height').css('height', (fixedHeight - 350) + 'px');\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        $(window).bind('resize', () => {\r\n            this.fixWebLogsPanelHeight();\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        let self = this;\r\n        self.getCaches();\r\n        self.getWebLogs();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/maintenance/maintenance.component.ts","module.exports = \"<div bsModal #modal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal\\\"\\r\\n     (onShown)=\\\"shown()\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">\\r\\n                    {{l('SelectUsers')}}\\r\\n                </h4>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n                <form novalidate (ngSubmit)=\\\"refreshTable()\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"input-group margin-bottom-10\\\">\\r\\n                        <input autoFocus [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" class=\\\"form-control\\\" placeholder=\\\"{{l('SearchWithThreeDot')}}\\\" type=\\\"text\\\">\\r\\n                        <span class=\\\"input-group-btn\\\">\\r\\n                            <button class=\\\"btn default\\\" type=\\\"submit\\\"><i class=\\\"icon-magnifier\\\"></i></button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n\\r\\n                    <!--<Primeng-Datatable-Start>-->\\r\\n                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengDatatableHelper.isLoading\\\">\\r\\n                        <p-dataTable #dataTable\\r\\n                                     (onLazyLoad)=\\\"getRecordsIfNeeds($event)\\\"\\r\\n                                     [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     emptyMessage=\\\"{{l('NoData')}}\\\"\\r\\n                                     [responsive]=\\\"primengDatatableHelper.isResponsive\\\"\\r\\n                                     [(selection)]=\\\"selectedMembers\\\">\\r\\n                            <p-column selectionMode=\\\"multiple\\\" [style]=\\\"{'width':'38px'}\\\"></p-column>\\r\\n                            <p-column field=\\\"name\\\" header=\\\"{{l('Name')}}\\\" [sortable]=\\\"false\\\"></p-column>\\r\\n                        </p-dataTable>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getRecordsIfNeeds($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengDatatableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengDatatableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengDatatableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<Primeng-Datatable-End>-->\\r\\n                </form>\\r\\n\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                <button class=\\\"btn btn-primary blue\\\" (click)=\\\"addUsersToOrganizationUnit()\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/add-member-modal.component.html\n// module id = ../../../../../src/app/admin/organization-units/add-member-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport {\r\n    NameValueDto,\r\n    UsersToOrganizationUnitInput,\r\n    OrganizationUnitServiceProxy,\r\n    FindOrganizationUnitUsersInput\r\n\r\n} from '@shared/service-proxies/service-proxies';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { IUsersWithOrganizationUnit } from './users-with-organization-unit';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'addMemberModal',\r\n    templateUrl: './add-member-modal.component.html'\r\n})\r\nexport class AddMemberModalComponent extends AppComponentBase {\r\n\r\n    organizationUnitId: number;\r\n\r\n    @Output() membersAdded: EventEmitter<IUsersWithOrganizationUnit> = new EventEmitter<IUsersWithOrganizationUnit>();\r\n\r\n    @ViewChild('modal') modal: ModalDirective;\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    isShown: boolean = false;\r\n    filterText: string = '';\r\n    tenantId?: number;\r\n    saving: boolean = false;\r\n    selectedMembers: NameValueDto[];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _organizationUnitService: OrganizationUnitServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n\r\n    show(): void {\r\n        this.modal.show();\r\n    }\r\n\r\n    refreshTable(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    close(): void {\r\n        this.modal.hide();\r\n    }\r\n\r\n    shown(): void {\r\n        this.isShown = true;\r\n        this.getRecordsIfNeeds(null);\r\n    }\r\n\r\n    getRecordsIfNeeds(event: LazyLoadEvent): void {\r\n        if (!this.isShown) {\r\n            return;\r\n        }\r\n\r\n        this.getRecords(event);\r\n    }\r\n\r\n    getRecords(event?: LazyLoadEvent): void {\r\n        \r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n\r\n        var input = new FindOrganizationUnitUsersInput();\r\n        input.organizationUnitId = this.organizationUnitId;\r\n        input.filter = this.filterText;\r\n        input.skipCount = this.primengDatatableHelper.getSkipCount(this.paginator, event);\r\n        input.maxResultCount = this.primengDatatableHelper.getMaxResultCount(this.paginator, event);\r\n\r\n        this._organizationUnitService\r\n            .findUsers(input)\r\n            .subscribe(result => {\r\n                this.primengDatatableHelper.totalRecordsCount = result.totalCount;\r\n                this.primengDatatableHelper.records = result.items;\r\n                this.primengDatatableHelper.hideLoadingIndicator();\r\n            });\r\n    }\r\n\r\n    addUsersToOrganizationUnit(): void {\r\n        let input = new UsersToOrganizationUnitInput();\r\n        input.organizationUnitId = this.organizationUnitId;\r\n        input.userIds = _.map(this.selectedMembers, selectedMember => Number(selectedMember.value));\r\n        this.saving = true;\r\n        this._organizationUnitService\r\n            .addUsersToOrganizationUnit(input)\r\n            .subscribe(() => {\r\n                this.notify.success(this.l('SuccessfullyAdded'));\r\n                this.membersAdded.emit({\r\n                    userIds: input.userIds,\r\n                    ouId: input.organizationUnitId\r\n                });\r\n                this.saving = false;\r\n                this.close();\r\n                this.selectedMembers = [];\r\n            });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/add-member-modal.component.ts","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <form *ngIf=\\\"active\\\" #editForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span *ngIf=\\\"organizationUnit.id\\\">{{l(\\\"Edit\\\")}}: {{organizationUnit.displayName}}</span>\\r\\n                        <span *ngIf=\\\"!organizationUnit.id\\\">{{l(\\\"NewOrganizationUnit\\\")}}</span>\\r\\n                    </h4>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-body\\\">\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input #organizationUnitDisplayName class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"displayName\\\" [ngClass]=\\\"{'edited': organizationUnit.displayName}\\\" [(ngModel)]=\\\"organizationUnit.displayName\\\" required maxlength=\\\"128\\\">\\r\\n                        <label>{{l(\\\"Name\\\")}}</label>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!editForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/create-or-edit-unit-modal.component.html\n// module id = ../../../../../src/app/admin/organization-units/create-or-edit-unit-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, ElementRef, ChangeDetectorRef } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { OrganizationUnitServiceProxy, CreateOrganizationUnitInput, UpdateOrganizationUnitInput, OrganizationUnitDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\nimport * as _ from \"lodash\";\r\n\r\nexport interface IOrganizationUnitOnEdit {\r\n    id?: number;\r\n    parentId?: number;\r\n    displayName?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'createOrEditOrganizationUnitModal',\r\n    templateUrl: './create-or-edit-unit-modal.component.html'\r\n})\r\nexport class CreateOrEditUnitModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('organizationUnitDisplayName') organizationUnitDisplayNameInput: ElementRef;\r\n\r\n    @Output() unitCreated: EventEmitter<OrganizationUnitDto> = new EventEmitter<OrganizationUnitDto>();\r\n    @Output() unitUpdated: EventEmitter<OrganizationUnitDto> = new EventEmitter<OrganizationUnitDto>();\r\n\r\n    active: boolean = false;\r\n    saving: boolean = false;\r\n\r\n    organizationUnit: IOrganizationUnitOnEdit = {};\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _organizationUnitService: OrganizationUnitServiceProxy,\r\n        private _changeDetector: ChangeDetectorRef\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    onShown(): void {\r\n        $(this.organizationUnitDisplayNameInput.nativeElement).focus();\r\n    }\r\n    \r\n    show(organizationUnit: IOrganizationUnitOnEdit): void {\r\n        this.organizationUnit = organizationUnit;\r\n        this.active = true;\r\n        this.modal.show();\r\n        this._changeDetector.detectChanges();\r\n    }\r\n\r\n    save(): void {\r\n        if (!this.organizationUnit.id) {\r\n            this.createUnit();\r\n        } else {\r\n            this.updateUnit();\r\n        }\r\n    }\r\n\r\n    createUnit() {\r\n        let createInput = new CreateOrganizationUnitInput();\r\n        createInput.parentId = this.organizationUnit.parentId;\r\n        createInput.displayName = this.organizationUnit.displayName;\r\n\r\n        this.saving = true;\r\n        this._organizationUnitService\r\n            .createOrganizationUnit(createInput)\r\n            .finally(() => this.saving = false)\r\n            .subscribe((result: OrganizationUnitDto) => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.unitCreated.emit(result);\r\n            });\r\n    }\r\n\r\n    updateUnit() {\r\n        let updateInput = new UpdateOrganizationUnitInput();\r\n        updateInput.id = this.organizationUnit.id;\r\n        updateInput.displayName = this.organizationUnit.displayName;\r\n\r\n        this.saving = true;\r\n        this._organizationUnitService\r\n            .updateOrganizationUnit(updateInput)\r\n            .finally(() => this.saving = false)\r\n            .subscribe((result: OrganizationUnitDto) => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.unitUpdated.emit(result);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.modal.hide();\r\n        this.active = false;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/create-or-edit-unit-modal.component.ts","module.exports = \"<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n            <span class=\\\"caption-subject bold uppercase\\\">\\r\\n                {{l(\\\"OrganizationTree\\\")}}\\r\\n            </span>\\r\\n        </div>\\r\\n        <div class=\\\"actions\\\">\\r\\n            <a *ngIf=\\\"isGranted('Pages.Administration.OrganizationUnits.ManageOrganizationTree')\\\" (click)=\\\"addUnit(null)\\\" class=\\\"btn btn-circle btn-default\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i> {{l(\\\"AddRootUnit\\\")}}\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <div #tree></div>\\r\\n        <div *ngIf=\\\"!totalUnitCount\\\" class=\\\"text-muted\\\">\\r\\n            {{l(\\\"NoOrganizationUnitDefinedYet\\\")}}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<createOrEditOrganizationUnitModal #createOrEditOrganizationUnitModal (unitCreated)=\\\"unitCreated($event)\\\" (unitUpdated)=\\\"unitUpdated($event)\\\"></createOrEditOrganizationUnitModal>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-tree.component.html\n// module id = ../../../../../src/app/admin/organization-units/organization-tree.component.html\n// module chunks = admin.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ou-text {\\n  color: #999;\\n}\\n.ou-text.ou-text-has-members {\\n  color: #000;\\n}\\n.ou-text.ou-text-has-members .ou-text-member-count {\\n  font-weight: bold;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-tree.component.less\n// module id = ../../../../../src/app/admin/organization-units/organization-tree.component.less\n// module chunks = admin.module","import { Component, Injector, AfterViewInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { OrganizationUnitServiceProxy, ListResultDtoOfOrganizationUnitDto, OrganizationUnitDto, MoveOrganizationUnitInput } from '@shared/service-proxies/service-proxies';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { IBasicOrganizationUnitInfo } from './basic-organization-unit-info';\r\nimport { IUserWithOrganizationUnit } from './user-with-organization-unit';\r\nimport { IUsersWithOrganizationUnit } from './users-with-organization-unit';\r\n\r\nimport * as _ from \"lodash\";\r\nimport { CreateOrEditUnitModalComponent } from './create-or-edit-unit-modal.component';\r\n\r\nexport interface IOrganizationUnitOnTree extends IBasicOrganizationUnitInfo {\r\n    id: number;\r\n    parent: string | number;\r\n    code: string;\r\n    displayName: string;\r\n    memberCount: number,\r\n    text: string;\r\n    state: any;\r\n}\r\n\r\n@Component({\r\n    selector: 'organization-tree',\r\n    templateUrl: \"./organization-tree.component.html\",\r\n    styleUrls: [\"./organization-tree.component.less\"]\r\n})\r\nexport class OrganizationTreeComponent extends AppComponentBase implements AfterViewInit {\r\n\r\n    @Output() ouSelected = new EventEmitter<IBasicOrganizationUnitInfo>();\r\n\r\n    @ViewChild('tree') tree: ElementRef;\r\n    @ViewChild('createOrEditOrganizationUnitModal') createOrEditOrganizationUnitModal: CreateOrEditUnitModalComponent;\r\n\r\n    private _$tree: JQuery;\r\n    private _updatingNode: any;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _organizationUnitService: OrganizationUnitServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    totalUnitCount: number = 0;\r\n\r\n    set selectedOu(ou: IOrganizationUnitOnTree) {\r\n        this._selectedOu = ou;\r\n        this.ouSelected.emit(ou);\r\n    }\r\n\r\n    private _selectedOu: IOrganizationUnitOnTree;\r\n\r\n    ngAfterViewInit(): void {\r\n        var self = this;\r\n        this._$tree = $(this.tree.nativeElement);\r\n        this.getTreeDataFromServer(treeData => {\r\n            this.totalUnitCount = treeData.length;\r\n\r\n            var jsTreePlugins = [\r\n                'types',\r\n                'contextmenu',\r\n                'wholerow',\r\n                'sort'\r\n            ];\r\n\r\n            if (this.isGranted('Pages.Administration.OrganizationUnits.ManageOrganizationTree')) {\r\n                jsTreePlugins.push('dnd');\r\n            }\r\n\r\n            this._$tree\r\n                .on('changed.jstree', (e, data) => {\r\n                    if (data.selected.length !== 1) {\r\n                        this.selectedOu = null;\r\n                    } else {\r\n                        this.selectedOu = data.instance.get_node(data.selected[0]).original;\r\n                    }\r\n                })\r\n                .on('move_node.jstree', (e, data) => {\r\n\r\n                    if (!this.isGranted('Pages.Administration.OrganizationUnits.ManageOrganizationTree')) {\r\n                        this._$tree.jstree('refresh'); //rollback\r\n                        return;\r\n                    }\r\n\r\n                    var parentNodeName = (!data.parent || data.parent === '#')\r\n                        ? this.l('Root')\r\n                        : this._$tree.jstree('get_node', data.parent).original.displayName;\r\n\r\n                    this.message.confirm(\r\n                        this.l('OrganizationUnitMoveConfirmMessage', data.node.original.displayName, parentNodeName),\r\n                        isConfirmed => {\r\n                            if (isConfirmed) {\r\n                                let input = new MoveOrganizationUnitInput();\r\n                                input.id = data.node.id;\r\n                                input.newParentId = (!data.parent || data.parent === '#') ? undefined : data.parent;\r\n                                this._organizationUnitService.moveOrganizationUnit(input)\r\n                                    .catch(error => {\r\n                                        this._$tree.jstree('refresh'); //rollback\r\n                                        return Observable.throw(error);\r\n                                    })\r\n                                    .subscribe(() => {\r\n                                        this.notify.success(this.l('SuccessfullyMoved'));\r\n                                        this.reload();\r\n                                    });\r\n                            } else {\r\n                                this._$tree.jstree('refresh'); //rollback\r\n                            }\r\n                        }\r\n                    );\r\n                })\r\n                .jstree({\r\n                    'core': {\r\n                        data: treeData,\r\n                        multiple: false,\r\n                        check_callback: () => true\r\n                    },\r\n                    types: {\r\n                        \"default\": {\r\n                            \"icon\": \"fa fa-folder tree-item-icon-color icon-lg\"\r\n                        },\r\n                        \"file\": {\r\n                            \"icon\": \"fa fa-file tree-item-icon-color icon-lg\"\r\n                        }\r\n                    },\r\n                    contextmenu: {\r\n                        items: function (node) { return self.contextMenu(node, self); }\r\n                    },\r\n                    sort: function (node1, node2) {\r\n                        if (this.get_node(node2).original.displayName < this.get_node(node1).original.displayName) {\r\n                            return 1;\r\n                        }\r\n\r\n                        return -1;\r\n                    },\r\n                    plugins: jsTreePlugins\r\n                });\r\n\r\n            this._$tree.on('click', '.ou-text .fa-caret-down', function (e) {\r\n                e.preventDefault();\r\n\r\n                var ouId = $(this).closest('.ou-text').attr('data-ou-id');\r\n                setTimeout(() => {\r\n                    self._$tree.jstree('show_contextmenu', ouId);\r\n                }, 100);\r\n            });\r\n        });\r\n    }\r\n\r\n    reload(): void {\r\n        this.getTreeDataFromServer(treeData => {\r\n            this.totalUnitCount = treeData.length;\r\n            (<any>this._$tree.jstree(true)).settings.core.data = treeData;\r\n            this._$tree.jstree('refresh');\r\n        });\r\n    }\r\n\r\n    private getTreeDataFromServer(callback: (ous: IOrganizationUnitOnTree[]) => void): void {\r\n        this._organizationUnitService.getOrganizationUnits().subscribe((result: ListResultDtoOfOrganizationUnitDto) => {\r\n            var treeData = _.map(result.items, item => (<IOrganizationUnitOnTree>{\r\n                id: item.id,\r\n                parent: item.parentId ? item.parentId : '#',\r\n                code: item.code,\r\n                displayName: item.displayName,\r\n                memberCount: item.memberCount,\r\n                text: this.generateTextOnTree(item),\r\n                dto: item,\r\n                state: {\r\n                    opened: true\r\n                }\r\n            }));\r\n\r\n            callback(treeData);\r\n        });\r\n    }\r\n\r\n    private generateTextOnTree(ou: IOrganizationUnitOnTree | OrganizationUnitDto) {\r\n        var itemClass = ou.memberCount > 0 ? ' ou-text-has-members' : ' ou-text-no-members';\r\n        return '<span title=\"' + ou.code + '\" class=\"ou-text' + itemClass + '\" data-ou-id=\"' + ou.id + '\">' + ou.displayName + ' (<span class=\"ou-text-member-count\">' + ou.memberCount + '</span>) <i class=\"fa fa-caret-down text-muted\"></i></span>';\r\n    }\r\n\r\n    private contextMenu(node: any, self: OrganizationTreeComponent) {\r\n        let canManageOrganizationTree = self.isGranted('Pages.Administration.OrganizationUnits.ManageOrganizationTree');\r\n\r\n        var items = {\r\n            editUnit: {\r\n                label: self.l('Edit'),\r\n                _disabled: !canManageOrganizationTree,\r\n                action: () => {\r\n                    self._updatingNode = node;\r\n                    self.createOrEditOrganizationUnitModal.show({\r\n                        id: node.id,\r\n                        displayName: node.original.displayName\r\n                    });\r\n                }\r\n            },\r\n\r\n            addSubUnit: {\r\n                label: self.l('AddSubUnit'),\r\n                _disabled: !canManageOrganizationTree,\r\n                action: () => {\r\n                    self.addUnit(node.id);\r\n                }\r\n            },\r\n\r\n            'delete': {\r\n                label: self.l(\"Delete\"),\r\n                _disabled: !canManageOrganizationTree,\r\n                action: data => {\r\n                    var instance = $.jstree.reference(data.reference);\r\n\r\n                    this.message.confirm(\r\n                        this.l('OrganizationUnitDeleteWarningMessage', node.original.displayName),\r\n                        isConfirmed => {\r\n                            if (isConfirmed) {\r\n                                this._organizationUnitService.deleteOrganizationUnit(node.id).subscribe(() => {\r\n                                    this.selectedOu = null;\r\n                                    this.notify.success(this.l('SuccessfullyDeleted'));\r\n                                    instance.delete_node(node);\r\n                                });\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    addUnit(parentId?: number): void {\r\n        this.createOrEditOrganizationUnitModal.show({\r\n            parentId: parentId\r\n        });\r\n    }\r\n\r\n    unitCreated(ou: OrganizationUnitDto): void {\r\n        const instance = $.jstree.reference(this._$tree);\r\n        instance.create_node(\r\n            ou.parentId ? instance.get_node(ou.parentId) : '#',\r\n            {\r\n                id: ou.id,\r\n                parent: ou.parentId ? ou.parentId : '#',\r\n                code: ou.code,\r\n                displayName: ou.displayName,\r\n                memberCount: 0,\r\n                text: this.generateTextOnTree(ou),\r\n                state: {\r\n                    opened: true\r\n                }\r\n            });\r\n\r\n        this.totalUnitCount += 1;\r\n    }\r\n\r\n    unitUpdated(ou: OrganizationUnitDto): void {\r\n        const instance = $.jstree.reference(this._$tree);\r\n        this._updatingNode.original.displayName = ou.displayName;\r\n        instance.rename_node(this._updatingNode, this.generateTextOnTree(ou));\r\n    }\r\n\r\n    membersAdded(data: IUsersWithOrganizationUnit): void {\r\n        this.incrementMemberCount(data.ouId, data.userIds.length);\r\n    }\r\n\r\n    memberRemoved(data: IUserWithOrganizationUnit): void {\r\n        this.incrementMemberCount(data.ouId, -1);\r\n    }\r\n\r\n    incrementMemberCount(ouId: number, incrementAmount: number): void {\r\n        var treeNode = this._$tree.jstree('get_node', ouId);\r\n        treeNode.original.memberCount = treeNode.original.memberCount + incrementAmount;\r\n        this._$tree.jstree('rename_node', treeNode, this.generateTextOnTree(treeNode.original));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-tree.component.ts","module.exports = \"<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n            <span class=\\\"caption-subject bold uppercase\\\">\\r\\n                <span *ngIf=\\\"organizationUnit\\\">{{organizationUnit.displayName}}</span>\\r\\n                <span *ngIf=\\\"!organizationUnit\\\">{{l(\\\"Members\\\")}}</span>\\r\\n            </span>\\r\\n        </div>\\r\\n        <div class=\\\"actions\\\" *ngIf=\\\"organizationUnit\\\">\\r\\n            <a *ngIf=\\\"isGranted('Pages.Administration.OrganizationUnits.ManageMembers')\\\" (click)=\\\"openAddModal()\\\" class=\\\"btn btn-circle btn-default\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i> {{l(\\\"AddMember\\\")}}\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        \\r\\n        <!--<Primeng-Datatable-Start>-->\\r\\n        <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengDatatableHelper.isLoading\\\" [hidden]=\\\"!organizationUnit\\\">\\r\\n            <p-dataTable #dataTable\\r\\n                         (onLazyLoad)=\\\"getOrganizationUnitUsers($event)\\\"\\r\\n                         [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                         rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                         [paginator]=\\\"false\\\"\\r\\n                         [lazy]=\\\"true\\\"\\r\\n                         emptyMessage=\\\"{{l('NoData')}}\\\"\\r\\n                         [responsive]=\\\"primengDatatableHelper.isResponsive\\\">\\r\\n                <p-column field=\\\"\\\"  \\r\\n                          header=\\\"{{l('Delete')}}\\\"\\r\\n                          [sortable]=\\\"false\\\"  \\r\\n                          [style]=\\\"{'width':'15%','text-align':'center'}\\\"\\r\\n                          [hidden]=\\\"!permission.isGranted('Pages.Administration.OrganizationUnits.ManageMembers')\\\">\\r\\n                    <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                        <button class=\\\"btn btn-default btn-xs\\\"\\r\\n                                (click)=\\\"removeMember(record)\\\"\\r\\n                                title=\\\"{{l('Delete')}}\\\">\\r\\n                            <i class=\\\"fa fa-times\\\"></i>\\r\\n                        </button>\\r\\n                    </ng-template>\\r\\n                </p-column>\\r\\n                <p-column field=\\\"userName\\\" header=\\\"{{l('UserName')}}\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"addedTime\\\" header=\\\"{{l('AddedTime')}}\\\" [sortable]=\\\"true\\\">\\r\\n                    <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                        {{record.addedTime | momentFormat:'L'}}\\r\\n                    </ng-template>\\r\\n                </p-column>\\r\\n            </p-dataTable>\\r\\n            <div class=\\\"primeng-paging-container\\\">\\r\\n                <p-paginator rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                             #paginator\\r\\n                             (onPageChange)=\\\"getOrganizationUnitUsers($event)\\\"\\r\\n                             [totalRecords]=\\\"primengDatatableHelper.totalRecordsCount\\\"\\r\\n                             [rowsPerPageOptions]=\\\"primengDatatableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                </p-paginator>\\r\\n                <span class=\\\"total-records-count\\\">\\r\\n                    {{l('TotalRecordsCount', primengDatatableHelper.totalRecordsCount)}}\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--<Primeng-Datatable-End>-->\\r\\n\\r\\n        <div *ngIf=\\\"!organizationUnit\\\" class=\\\"text-muted\\\">\\r\\n            {{l(\\\"SelectAnOrganizationUnitToSeeMembers\\\")}}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<addMemberModal #addMemberModal (membersAdded)=\\\"addMembers($event)\\\"></addMemberModal>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-unit-members.component.html\n// module id = ../../../../../src/app/admin/organization-units/organization-unit-members.component.html\n// module chunks = admin.module","import { Component, Injector, ViewChild, OnInit, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { IBasicOrganizationUnitInfo } from './basic-organization-unit-info';\r\nimport { OrganizationUnitServiceProxy, OrganizationUnitUserListDto } from '@shared/service-proxies/service-proxies';\r\nimport { AddMemberModalComponent } from '@app/admin/organization-units/add-member-modal.component';\r\nimport { IUserWithOrganizationUnit } from './user-with-organization-unit';\r\nimport { IUsersWithOrganizationUnit } from './users-with-organization-unit';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\n\r\n@Component({\r\n    selector: 'organization-unit-members',\r\n    templateUrl: \"./organization-unit-members.component.html\"\r\n})\r\nexport class OrganizationUnitMembersComponent extends AppComponentBase implements OnInit {\r\n\r\n    @Output() memberRemoved = new EventEmitter<IUserWithOrganizationUnit>();\r\n    @Output() membersAdded = new EventEmitter<IUsersWithOrganizationUnit>();\r\n\r\n    @ViewChild('addMemberModal') addMemberModal: AddMemberModalComponent;\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    private _organizationUnit: IBasicOrganizationUnitInfo = null;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _changeDetector: ChangeDetectorRef,\r\n        private _organizationUnitService: OrganizationUnitServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    get organizationUnit(): IBasicOrganizationUnitInfo {\r\n        return this._organizationUnit;\r\n    }\r\n\r\n    set organizationUnit(ou: IBasicOrganizationUnitInfo) {\r\n        if (this._organizationUnit === ou) {\r\n            return;\r\n        }\r\n\r\n        this._organizationUnit = ou;\r\n        this.addMemberModal.organizationUnitId = ou.id;\r\n        if (ou) {\r\n            this.refreshMembers();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    getOrganizationUnitUsers(event?: LazyLoadEvent) {\r\n        if (!this._organizationUnit) {\r\n            return;\r\n        }\r\n\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n        this._organizationUnitService.getOrganizationUnitUsers(\r\n            this._organizationUnit.id,\r\n            this.primengDatatableHelper.getSorting(this.dataTable),\r\n            this.primengDatatableHelper.getMaxResultCount(this.paginator, event),\r\n            this.primengDatatableHelper.getSkipCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengDatatableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengDatatableHelper.records = result.items;\r\n            this.primengDatatableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    refreshMembers(): void {\r\n        this.reloadPage();\r\n    }\r\n\r\n    openAddModal(): void {\r\n        this.addMemberModal.show();\r\n    }\r\n\r\n    removeMember(user: OrganizationUnitUserListDto): void {\r\n        this.message.confirm(\r\n            this.l('RemoveUserFromOuWarningMessage', user.userName, this.organizationUnit.displayName),\r\n            isConfirmed => {\r\n                if (isConfirmed) {\r\n                    this._organizationUnitService\r\n                        .removeUserFromOrganizationUnit(user.id, this.organizationUnit.id)\r\n                        .subscribe(() => {\r\n                            this.notify.success(this.l('SuccessfullyRemoved'));\r\n                            this.memberRemoved.emit({\r\n                                userId: user.id,\r\n                                ouId: this.organizationUnit.id\r\n                            });\r\n\r\n                            this.refreshMembers();\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    addMembers(data: any): void {\r\n        this.membersAdded.emit({\r\n            userIds: data.userIds, \r\n            ouId: data.ouId\r\n        });\r\n\r\n        this.refreshMembers();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-unit-members.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-12\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{l(\\\"OrganizationUnits\\\")}}</span> <small>{{l(\\\"OrganizationUnitsHeaderInfo\\\")}}</small>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n            <organization-tree #ouTree (ouSelected)=\\\"ouMembers.organizationUnit = $event\\\"></organization-tree>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n            <organization-unit-members #ouMembers (membersAdded)=\\\"ouTree.membersAdded($event)\\\" (memberRemoved)=\\\"ouTree.memberRemoved($event)\\\"></organization-unit-members>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-units.component.html\n// module id = ../../../../../src/app/admin/organization-units/organization-units.component.html\n// module chunks = admin.module","import { Component, Injector, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { OrganizationUnitMembersComponent } from './organization-unit-members.component';\r\nimport { OrganizationTreeComponent } from './organization-tree.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\n\r\n@Component({\r\n    templateUrl: \"./organization-units.component.html\",\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class OrganizationUnitsComponent extends AppComponentBase {\r\n\r\n    @ViewChild('ouMembers') ouMembers: OrganizationUnitMembersComponent;\r\n    @ViewChild('ouTree') ouTree: OrganizationTreeComponent;\r\n\r\n    constructor(\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/organization-units/organization-units.component.ts","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\r\\n\\taria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n\\t<div class=\\\"modal-dialog\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"modal-content\\\">\\r\\n\\r\\n\\t\\t\\t<form *ngIf=\\\"active\\\" #roleForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n\\t\\t\\t\\t\\t<h4 class=\\\"modal-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"role.id\\\">{{l(\\\"EditRole\\\")}}: {{role.displayName}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"!role.id\\\">{{l(\\\"CreateNewRole\\\")}}</span>\\r\\n\\t\\t\\t\\t\\t</h4>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t\\t    <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n\\t\\t\\t\\t        <tab heading=\\\"{{l('RoleProperties')}}\\\">\\r\\n\\r\\n\\t\\t\\t\\t            <div class=\\\"form-group form-md-line-input form-md-floating-label\\\">\\r\\n\\t\\t\\t\\t                <input #roleNameInput class=\\\"form-control edited\\\" type=\\\"text\\\" name=\\\"DisplayName\\\" [(ngModel)]=\\\"role.displayName\\\" required maxlength=\\\"64\\\">\\r\\n\\t\\t\\t\\t                <label>{{l(\\\"RoleName\\\")}}</label>\\r\\n\\t\\t\\t\\t            </div>\\r\\n                            \\r\\n\\t\\t\\t\\t            <div class=\\\"md-checkbox-list\\\">\\r\\n\\t\\t\\t\\t                <div class=\\\"md-checkbox\\\">\\r\\n\\t\\t\\t\\t                    <input id=\\\"EditRole_IsDefault\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsDefault\\\" [(ngModel)]=\\\"role.isDefault\\\">\\r\\n\\t\\t\\t\\t                    <label for=\\\"EditRole_IsDefault\\\">\\r\\n\\t\\t\\t\\t                        <span class=\\\"inc\\\"></span>\\r\\n\\t\\t\\t\\t                        <span class=\\\"check\\\"></span>\\r\\n\\t\\t\\t\\t                        <span class=\\\"box\\\"></span>\\r\\n\\t\\t\\t\\t                        {{l(\\\"Default\\\")}}\\r\\n\\t\\t\\t\\t                    </label>\\r\\n\\t\\t\\t\\t                    <span class=\\\"help-block\\\">{{l(\\\"DefaultRole_Description\\\")}}</span>\\r\\n\\t\\t\\t\\t                </div>\\r\\n\\t\\t\\t\\t            </div>\\r\\n\\r\\n\\t\\t\\t\\t        </tab>\\r\\n\\t\\t\\t\\t        <tab heading=\\\"{{l('Permissions')}}\\\">\\r\\n\\t\\t\\t\\t            <permission-tree #permissionTree></permission-tree>\\r\\n\\t\\t\\t\\t        </tab>\\r\\n\\t\\t\\t\\t    </tabset>\\r\\n                    \\r\\n                    <div class=\\\"note note-warning\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                        <em>{{l('Note_RefreshPageForPermissionChanges')}}</em>\\r\\n                    </div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t\\t<button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!roleForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/roles/create-or-edit-role-modal.component.html\n// module id = ../../../../../src/app/admin/roles/create-or-edit-role-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { RoleServiceProxy, RoleEditDto, CreateOrUpdateRoleInput } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { PermissionTreeComponent } from '../shared/permission-tree.component';\r\n\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'createOrEditRoleModal',\r\n    templateUrl: './create-or-edit-role-modal.component.html'\r\n})\r\nexport class CreateOrEditRoleModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('roleNameInput') roleNameInput: ElementRef;\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('permissionTree') permissionTree: PermissionTreeComponent;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active: boolean = false;\r\n    saving: boolean = false;\r\n\r\n    role: RoleEditDto = new RoleEditDto();\r\n    constructor(\r\n        injector: Injector,\r\n        private _roleService: RoleServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(roleId?: number): void {\r\n        let self = this;\r\n        self.active = true;\r\n\r\n        self._roleService.getRoleForEdit(roleId).subscribe(result => {\r\n            self.role = result.role;\r\n            this.permissionTree.editData = result;\r\n\r\n            self.modal.show();\r\n        });\r\n    }\r\n\r\n    onShown(): void {\r\n        $(this.roleNameInput.nativeElement).focus();\r\n    }\r\n\r\n    save(): void {\r\n        let self = this;\r\n\r\n        var input = new CreateOrUpdateRoleInput();\r\n        input.role = self.role;\r\n        input.grantedPermissionNames = self.permissionTree.getGrantedPermissionNames();\r\n\r\n        this.saving = true;\r\n        this._roleService.createOrUpdateRole(input)\r\n            .finally(() => this.saving = false)\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/roles/create-or-edit-role-modal.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{l(\\\"Roles\\\")}}</span> <small>{{l(\\\"RolesHeaderInfo\\\")}}</small>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 text-right\\\">\\r\\n            <button (click)=\\\"createRole()\\\" *ngIf=\\\"isGranted('Pages.Administration.Roles.Create')\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewRole\\\")}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"portlet light margin-bottom-0\\\">\\r\\n        <div class=\\\"portlet-title portlet-title-filter\\\">\\r\\n            <div class=\\\"inputs inputs-full-width\\\">\\r\\n                <div class=\\\"portlet-input\\\">\\r\\n                    <form>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-xs-6\\\">\\r\\n                                <permission-combo [(selectedPermission)]=\\\"selectedPermission\\\"></permission-combo>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-6\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <button name=\\\"RefreshButton\\\" class=\\\"btn blue\\\" (click)=\\\"getRoles()\\\"><i class=\\\"fa fa-refresh\\\"></i> {{l('Refresh')}}</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"portlet-body\\\">\\r\\n            <!--<Primeng-Datatable-Start>-->\\r\\n            <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengDatatableHelper.isLoading\\\">\\r\\n                <p-dataTable #dataTable\\r\\n                             (onLazyLoad)=\\\"getRoles()\\\"\\r\\n                             [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                             rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                             [paginator]=\\\"false\\\"\\r\\n                             [lazy]=\\\"true\\\"\\r\\n                             emptyMessage=\\\"{{l('NoData')}}\\\"\\r\\n                             [responsive]=\\\"primengDatatableHelper.isResponsive\\\">\\r\\n                    <p-footer>\\r\\n                        {{l('TotalRecordsCount', primengDatatableHelper.totalRecordsCount)}}\\r\\n                    </p-footer>\\r\\n\\r\\n                    <p-column field=\\\"\\\" \\r\\n                              header=\\\"{{l('Actions')}}\\\"\\r\\n                              [sortable]=\\\"false\\\" \\r\\n                              styleClass=\\\"width-percent-15\\\"\\r\\n                              [hidden]=\\\"!isGrantedAny('Pages.Administration.Roles.Edit', 'Pages.Administration.Roles.Delete')\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <div class=\\\"btn-group dropdown\\\">\\r\\n                                <button class=\\\"dropdown-toggle btn btn-xs btn-primary blue\\\"\\r\\n                                        data-toggle=\\\"dropdown\\\"\\r\\n                                        tooltip=\\\"{{l('Actions')}}\\\"\\r\\n                                        aria-haspopup=\\\"true\\\"\\r\\n                                        aria-expanded=\\\"false\\\">\\r\\n                                    <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span>\\r\\n                                </button>\\r\\n                                <ul class=\\\"dropdown-menu\\\">\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Administration.Roles.Edit')\\\"\\r\\n                                           (click)=\\\"createOrEditRoleModal.show(record.id)\\\">{{l('Edit')}}</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"!record.isStatic && permission.isGranted('Pages.Administration.Roles.Delete')\\\"\\r\\n                                           (click)=\\\"deleteRole(record)\\\">{{l('Delete')}}</a>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"displayName\\\" header=\\\"{{l('RoleName')}}\\\" [sortable]=\\\"false\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <span>\\r\\n                                {{record.displayName}}\\r\\n                                <span *ngIf=\\\"record.isStatic\\\" \\r\\n                                      class=\\\"label label-info margin-right-5 margin-left-5\\\" \\r\\n                                      data-toggle=\\\"tooltip\\\" \\r\\n                                      title=\\\"{{l('StaticRole_Tooltip')}}\\\" \\r\\n                                      data-placement=\\\"top\\\">{{l('Static')}} \\r\\n                                </span> \\r\\n                                <span *ngIf=\\\"record.isDefault\\\"\\r\\n                                      class=\\\"label label-default\\\"\\r\\n                                      data-toggle=\\\"tooltip\\\"\\r\\n                                      title=\\\"{{l('DefaultRole_Description')}}\\\"\\r\\n                                      data-placement=\\\"top\\\">\\r\\n                                    {{l('Default')}}\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n\\r\\n                    <p-column field=\\\"creationTime\\\" header=\\\"{{l('CreationTime')}}\\\" [sortable]=\\\"false\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            {{record.creationTime | momentFormat:'L'}}\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n\\r\\n                </p-dataTable>\\r\\n\\r\\n            </div>\\r\\n            <!--<Primeng-Datatable-End>-->\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditRoleModal #createOrEditRoleModal (modalSave)=\\\"getRoles()\\\"></createOrEditRoleModal>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/roles/roles.component.html\n// module id = ../../../../../src/app/admin/roles/roles.component.html\n// module chunks = admin.module","import { Component,  Injector, ViewChild } from '@angular/core';\r\nimport { RoleServiceProxy, RoleListDto } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport { CreateOrEditRoleModalComponent } from './create-or-edit-role-modal.component';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\n\r\n@Component({\r\n    templateUrl: \"./roles.component.html\",\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class RolesComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditRoleModal') createOrEditRoleModal: CreateOrEditRoleModalComponent;\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n     \r\n\r\n    //Filters\r\n    selectedPermission = \"\";\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _roleService: RoleServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _fileDownloadService: FileDownloadService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    getRoles(): void {\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n        var permission = this.permission ? this.selectedPermission : undefined;\r\n\r\n        this._roleService.getRoles(permission).subscribe(result => {\r\n            this.primengDatatableHelper.records = result.items;\r\n            this.primengDatatableHelper.totalRecordsCount = result.items.length;\r\n            this.primengDatatableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n   \r\n    createRole(): void {\r\n        this.createOrEditRoleModal.show();\r\n    }\r\n\r\n    deleteRole(role: RoleListDto): void {\r\n        var self = this;\r\n        self.message.confirm(\r\n            self.l('RoleDeleteWarningMessage', role.displayName),\r\n            isConfirmed => {\r\n                if (isConfirmed) {\r\n                    this._roleService.deleteRole(role.id).subscribe(() => {\r\n                        this.getRoles();\r\n                        abp.notify.success(this.l('SuccessfullyDeleted'));\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/roles/roles.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{l(\\\"Settings\\\")}}</span> <small>{{l(\\\"SettingsHeaderInfo\\\")}}</small>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 text-right\\\">\\r\\n            <button class=\\\"btn btn-primary blue\\\" (click)=\\\"saveAll()\\\"><i class=\\\"fa fa-floppy-o\\\"></i> {{l(\\\"SaveAll\\\")}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet light margin-bottom-0\\\">\\r\\n        <div class=\\\"portlet-body\\\">\\r\\n            <tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"hostSettings\\\">\\r\\n                <tab heading=\\\"{{l('General')}}\\\" *ngIf=\\\"showTimezoneSelection\\\">\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <label>{{l(\\\"Timezone\\\")}}</label>\\r\\n                        <timezone-combo [(selectedTimeZone)]=\\\"hostSettings.general.timezone\\\" defaultTimezoneScope=\\\"{{defaultTimezoneScope}}\\\"></timezone-combo>\\r\\n                    </div>\\r\\n                </tab>\\r\\n                <tab heading=\\\"{{l('TenantManagement')}}\\\" *ngIf=\\\"hostSettings.tenantManagement\\\">\\r\\n                    <div>\\r\\n                        <h4>{{l(\\\"FormBasedRegistration\\\")}}</h4>\\r\\n                        <div class=\\\"md-checkbox-list\\\">\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_AllowSelfRegistration\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"AllowSelfRegistration\\\" [(ngModel)]=\\\"hostSettings.tenantManagement.allowSelfRegistration\\\">\\r\\n                                <label for=\\\"Setting_AllowSelfRegistration\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"AllowTenantsToRegisterThemselves\\\")}}\\r\\n                                </label>\\r\\n                                <span class=\\\"help-block\\\">{{l(\\\"AllowTenantsToRegisterThemselves_Hint\\\")}}</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\" [hidden]=\\\"!hostSettings.tenantManagement.allowSelfRegistration\\\">\\r\\n                                <input id=\\\"Setting_IsNewRegisteredTenantActiveByDefault\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsNewRegisteredTenantActiveByDefault\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.tenantManagement.isNewRegisteredTenantActiveByDefault\\\">\\r\\n                                <label for=\\\"Setting_IsNewRegisteredTenantActiveByDefault\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"NewRegisteredTenantsIsActiveByDefault\\\")}}\\r\\n                                </label>\\r\\n                                <span class=\\\"help-block\\\">{{l(\\\"NewRegisteredTenantsIsActiveByDefault_Hint\\\")}}</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\" [hidden]=\\\"!hostSettings.tenantManagement.allowSelfRegistration\\\">\\r\\n                                <input id=\\\"Setting_UseCaptchaOnRegistration\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"UseCaptchaOnRegistration\\\" [(ngModel)]=\\\"hostSettings.tenantManagement.useCaptchaOnRegistration\\\">\\r\\n                                <label for=\\\"Setting_UseCaptchaOnRegistration\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"UseCaptchaOnRegistration\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                            <select class=\\\"form-control edited\\\" [(ngModel)]=\\\"hostSettings.tenantManagement.defaultEditionId\\\">\\r\\n                                <option value=\\\"\\\">{{emptyText}}</option>\\r\\n                                <option *ngFor=\\\"let edition of editions\\\" [value]=\\\"edition.value\\\">{{edition.displayText}}</option>\\r\\n                            </select>\\r\\n                            <label for=\\\"TenantEditionSelectionCombobox\\\">{{l(\\\"Edition\\\")}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </tab>\\r\\n                <tab heading=\\\"{{l('UserManagement')}}\\\" *ngIf=\\\"hostSettings.userManagement\\\">\\r\\n                    <div class=\\\"md-checkbox-list\\\">\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"Settings_IsEmailConfirmationRequiredForLogin\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsEmailConfirmationRequiredForLogin\\\"\\r\\n                                   [(ngModel)]=\\\"hostSettings.userManagement.isEmailConfirmationRequiredForLogin\\\">\\r\\n                            <label for=\\\"Settings_IsEmailConfirmationRequiredForLogin\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"EmailConfirmationRequiredForLogin\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"Settings_SmsVerificationEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"SmsVerificationEnabled\\\"\\r\\n                                   [(ngModel)]=\\\"hostSettings.userManagement.smsVerificationEnabled\\\">\\r\\n                            <label for=\\\"Settings_SmsVerificationEnabled\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"SmsVerificationEnabled\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </tab>\\r\\n                <tab heading=\\\"{{l('Security')}}\\\" *ngIf=\\\"hostSettings.security\\\">\\r\\n                    <div>\\r\\n                        <h4>{{l(\\\"PasswordComplexity\\\")}}</h4>\\r\\n                        <div class=\\\"md-checkbox-list\\\">\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                <label for=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"UseDefaultSettings\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"md-checkbox-list\\\">\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireDigit\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireDigit\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requireDigit\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireDigit\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireDigit\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requireDigit\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                       disabled>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireDigit\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"PasswordComplexity_RequireDigit\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireLowercase\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireLowercase\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requireLowercase\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireLowercase\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireLowercase\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requireLowercase\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                       disabled>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireLowercase\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"PasswordComplexity_RequireLowercase\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requireNonAlphanumeric\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requireNonAlphanumeric\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                       disabled>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"PasswordComplexity_RequireNonAlphanumeric\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireUppercase\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireUppercase\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requireUppercase\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireUppercase\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireUppercase\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requireUppercase\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                       disabled>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireUppercase\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"PasswordComplexity_RequireUppercase\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                            <input type=\\\"number\\\" name=\\\"RequiredLength\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.security.passwordComplexity.requiredLength}\\\"\\r\\n                                   [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requiredLength\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                            <input type=\\\"number\\\" name=\\\"RequiredLength\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.security.defaultPasswordComplexity.requiredLength}\\\"\\r\\n                                   [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requiredLength\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                   disabled>\\r\\n                            <label>{{l(\\\"PasswordComplexity_RequiredLength\\\")}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <h4>{{l(\\\"UserLockOut\\\")}}</h4>\\r\\n                        <div class=\\\"md-checkbox-list\\\">\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_UserLockOut_IsEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_UserLockOut_IsEnabled\\\" [(ngModel)]=\\\"hostSettings.security.userLockOut.isEnabled\\\">\\r\\n                                <label for=\\\"Setting_UserLockOut_IsEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"EnableUserAccountLockingOnFailedLoginAttemts\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" *ngIf=\\\"hostSettings.security.userLockOut.isEnabled\\\">\\r\\n                            <input type=\\\"number\\\" name=\\\"MaxFailedAccessAttemptsBeforeLockout\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.security.userLockOut.maxFailedAccessAttemptsBeforeLockout}\\\"\\r\\n                                   [(ngModel)]=\\\"hostSettings.security.userLockOut.maxFailedAccessAttemptsBeforeLockout\\\">\\r\\n                            <label>{{l(\\\"MaxFailedAccessAttemptsBeforeLockout\\\")}}</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" *ngIf=\\\"hostSettings.security.userLockOut.isEnabled\\\">\\r\\n                            <input type=\\\"number\\\" name=\\\"DefaultAccountLockoutSeconds\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.security.userLockOut.defaultAccountLockoutSeconds}\\\"\\r\\n                                   [(ngModel)]=\\\"hostSettings.security.userLockOut.defaultAccountLockoutSeconds\\\">\\r\\n                            <label>{{l(\\\"DefaultAccountLockoutDurationAsSeconds\\\")}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <h4>{{l(\\\"TwoFactorLogin\\\")}}</h4>\\r\\n                        <div class=\\\"md-checkbox-list\\\">\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_TwoFactorLogin_IsEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsEnabled\\\" [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"EnableTwoFactorLogin\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\" *ngIf=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                <input id=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isEmailProviderEnabled\\\">\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"IsEmailVerificationEnabled\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\" *ngIf=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                <input id=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isSmsProviderEnabled\\\">\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"IsSmsVerificationEnabled\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\" *ngIf=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                <input id=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isGoogleAuthenticatorEnabled\\\">\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"IsGoogleAuthenticatorEnabled\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\" *ngIf=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                <input id=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\"\\r\\n                                       [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isRememberBrowserEnabled\\\">\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"AllowToRememberBrowserForTwoFactorLogin\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </tab>\\r\\n                <tab heading=\\\"{{l('EmailSmtp')}}\\\" *ngIf=\\\"hostSettings.email\\\">\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input type=\\\"email\\\" name=\\\"DefaultFromAddress\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.defaultFromAddress}\\\"\\r\\n                               [(ngModel)]=\\\"hostSettings.email.defaultFromAddress\\\" maxlength=\\\"@CorarlERP.Authorization.Users.User.MaxEmailAddressLength\\\">\\r\\n                        <label>{{l(\\\"DefaultFromAddress\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"DefaultFromDisplayName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.defaultFromDisplayName}\\\"\\r\\n                               [(ngModel)]=\\\"hostSettings.email.defaultFromDisplayName\\\" maxlength=\\\"128\\\">\\r\\n                        <label>{{l(\\\"DefaultFromDisplayName\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"SmtpHost\\\" class=\\\"form-control input-ltr\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpHost}\\\" [(ngModel)]=\\\"hostSettings.email.smtpHost\\\"\\r\\n                               maxlength=\\\"64\\\">\\r\\n                        <label>{{l(\\\"SmtpHost\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input type=\\\"number\\\" name=\\\"SmtpPort\\\" class=\\\"form-control edited\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpPort}\\\" [(ngModel)]=\\\"hostSettings.email.smtpPort\\\"\\r\\n                               maxlength=\\\"5\\\">\\r\\n                        <label>{{l(\\\"SmtpPort\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"md-checkbox-list\\\">\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"Settings_SmtpEnableSsl\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"SmtpEnableSsl\\\" [(ngModel)]=\\\"hostSettings.email.smtpEnableSsl\\\">\\r\\n                            <label for=\\\"Settings_SmtpEnableSsl\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"UseSsl\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"Settings_SmtpUseDefaultCredentials\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"SmtpUseDefaultCredentials\\\" [(ngModel)]=\\\"hostSettings.email.smtpUseDefaultCredentials\\\">\\r\\n                            <label for=\\\"Settings_SmtpUseDefaultCredentials\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"UseDefaultCredentials\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" [hidden]=\\\"hostSettings.email.smtpUseDefaultCredentials\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"SmtpDomainName\\\" class=\\\"form-control input-ltr\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpDomain}\\\"\\r\\n                               [(ngModel)]=\\\"hostSettings.email.smtpDomain\\\" maxlength=\\\"128\\\">\\r\\n                        <label>{{l(\\\"DomainName\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" [hidden]=\\\"hostSettings.email.smtpUseDefaultCredentials\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"SmtpUserName\\\" class=\\\"form-control input-ltr\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpUserName}\\\"\\r\\n                               [(ngModel)]=\\\"hostSettings.email.smtpUserName\\\" maxlength=\\\"128\\\">\\r\\n                        <label>{{l(\\\"UserName\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" [hidden]=\\\"hostSettings.email.smtpUseDefaultCredentials\\\">\\r\\n                        <input type=\\\"password\\\" name=\\\"SmtpPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpPassword}\\\" [(ngModel)]=\\\"hostSettings.email.smtpPassword\\\"\\r\\n                               maxlength=\\\"128\\\">\\r\\n                        <label>{{l(\\\"Password\\\")}}</label>\\r\\n                    </div>\\r\\n                    <hr />\\r\\n                    <h4>{{l(\\\"TestEmailSettingsHeader\\\")}}</h4>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group form-md-line-input has-info form-md-floating-label col-md-4\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"testEmailAddress\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-md-line-input col-md-2\\\">\\r\\n                            <button class=\\\"btn green-haze\\\" type=\\\"button\\\" (click)=\\\"sendTestEmail()\\\">{{l(\\\"SendTestEmail\\\")}}</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </tab>\\r\\n            </tabset>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/settings/host-settings.component.html\n// module id = ../../../../../src/app/admin/settings/host-settings.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HostSettingsServiceProxy, HostSettingsEditDto, CommonLookupServiceProxy, ComboboxItemDto, DefaultTimezoneScope, SendTestEmailInput } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { AppSessionService } from '@shared/common/session/app-session.service';\r\nimport { AppTimezoneScope  } from '@shared/AppEnums';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\n\r\nimport * as moment from \"moment\";\r\n\r\n@Component({\r\n    templateUrl: \"./host-settings.component.html\",\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class HostSettingsComponent extends AppComponentBase implements OnInit {\r\n\r\n    loading: boolean = false;\r\n    hostSettings: HostSettingsEditDto;\r\n    editions: ComboboxItemDto[] = undefined;\r\n    testEmailAddress: string = undefined;\r\n    showTimezoneSelection = abp.clock.provider.supportsMultipleTimezone;\r\n    defaultTimezoneScope: DefaultTimezoneScope = AppTimezoneScope.Application;\r\n\r\n    usingDefaultTimeZone: boolean = false;\r\n    initialTimeZone: string = undefined;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _hostSettingService: HostSettingsServiceProxy,\r\n        private _commonLookupService: CommonLookupServiceProxy,\r\n        private _appSessionService: AppSessionService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    loadHostSettings(): void {\r\n        let self = this;\r\n        self._hostSettingService.getAllSettings()\r\n            .subscribe(setting => {\r\n                self.hostSettings = setting;\r\n                self.initialTimeZone = setting.general.timezone;\r\n                self.usingDefaultTimeZone = setting.general.timezoneForComparison === self.setting.get(\"Abp.Timing.TimeZone\");\r\n            });\r\n    }\r\n\r\n    loadEditions(): void {\r\n        let self = this;\r\n        self._commonLookupService.getEditionsForCombobox(false).subscribe((result) => {\r\n            self.editions = result.items;\r\n\r\n            let notAssignedEdition = new ComboboxItemDto();\r\n            notAssignedEdition.value = null;\r\n            notAssignedEdition.displayText = self.l(\"NotAssigned\");\r\n\r\n            self.editions.unshift(notAssignedEdition);\r\n        });\r\n    }\r\n\r\n    init(): void {\r\n        let self = this;\r\n        self.testEmailAddress = self._appSessionService.user.emailAddress;\r\n        self.showTimezoneSelection = abp.clock.provider.supportsMultipleTimezone;\r\n        self.loadHostSettings();\r\n        self.loadEditions();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        let self = this;\r\n        self.init();\r\n    }\r\n\r\n    sendTestEmail(): void {\r\n        let self = this;\r\n        let input = new SendTestEmailInput();\r\n        input.emailAddress = self.testEmailAddress;\r\n        self._hostSettingService.sendTestEmail(input).subscribe(result => {\r\n            self.notify.info(self.l(\"TestEmailSentSuccessfully\"));\r\n        });\r\n    };\r\n\r\n    saveAll(): void {\r\n        let self = this;\r\n        self._hostSettingService.updateAllSettings(self.hostSettings).subscribe(result => {\r\n            self.notify.info(self.l('SavedSuccessfully'));\r\n\r\n            if (abp.clock.provider.supportsMultipleTimezone && self.usingDefaultTimeZone && self.initialTimeZone !== self.hostSettings.general.timezone) {\r\n                self.message.info(self.l('TimeZoneSettingChangedRefreshPageNotification')).done(function () {\r\n                    window.location.reload();\r\n                });\r\n            }\r\n\r\n           // this.setting.set('App.UserManagement.SmsVerificationEnabled','true');\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/settings/host-settings.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{l(\\\"Settings\\\")}}</span> <small>{{l(\\\"SettingsHeaderInfo\\\")}}</small>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 text-right\\\">\\r\\n            <button class=\\\"btn btn-primary blue\\\" (click)=\\\"saveAll()\\\"><i class=\\\"fa fa-floppy-o\\\"></i> {{l(\\\"SaveAll\\\")}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet light margin-bottom-0\\\">\\r\\n        <div class=\\\"portlet-body\\\">\\r\\n            <tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\r\\n                <tab heading=\\\"{{l('General')}}\\\" *ngIf=\\\"showTimezoneSelection\\\" [active]=\\\"activeTabIndex == 0\\\">\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" *ngIf=\\\"showTimezoneSelection\\\">\\r\\n                        <label>{{l(\\\"Timezone\\\")}}</label>\\r\\n                        <timezone-combo [(selectedTimeZone)]=\\\"settings.general.timezone\\\" defaultTimezoneScope=\\\"{{defaultTimezoneScope}}\\\"></timezone-combo>\\r\\n                    </div>\\r\\n                </tab>\\r\\n                <tab heading=\\\"{{l('Appearance')}}\\\" [active]=\\\"activeTabIndex == 1\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <h4>{{l(\\\"ApplicationLogo\\\")}}</h4>\\r\\n                            <form #logoUploadForm>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"logoUploader\\\" required />\\r\\n                                    <span class=\\\"help-block m-b-none\\\">{{l(\\\"UploadLogo_Info\\\")}}</span>\\r\\n                                </div>\\r\\n                                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"uploadLogo()\\\">{{l(\\\"Upload\\\")}}</button>\\r\\n                                <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"clearLogo()\\\">{{l(\\\"Clear\\\")}}</button>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <h4>{{l(\\\"CustomCSS\\\")}}</h4>\\r\\n                            <p *ngIf=\\\"appSession.tenant.customCssId\\\"><a [href]=\\\"remoteServiceBaseUrl + '/TenantCustomization/GetCustomCss?id=' + appSession.tenant.customCssId\\\" target=\\\"_blank\\\">{{l('Download')}}</a></p>\\r\\n                            <form #cssUploadForm>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"customCssUploader\\\" required />\\r\\n                                    <span class=\\\"help-block m-b-none\\\">{{l(\\\"UploadCSS_Info\\\")}}</span>\\r\\n                                </div>\\r\\n                                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"uploadCustomCss()\\\">{{l(\\\"Upload\\\")}}</button>\\r\\n                                <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"clearCustomCss()\\\">{{l(\\\"Clear\\\")}}</button>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </tab>\\r\\n                <tab heading=\\\"{{l('UserManagement')}}\\\">\\r\\n                    <div>\\r\\n                        <h4>{{l(\\\"FormBasedRegistration\\\")}}</h4>\\r\\n                        <div class=\\\"md-checkbox-list\\\">\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_AllowSelfRegistration\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"AllowSelfRegistration\\\" [(ngModel)]=\\\"settings.userManagement.allowSelfRegistration\\\">\\r\\n                                <label for=\\\"Setting_AllowSelfRegistration\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"AllowUsersToRegisterThemselves\\\")}}\\r\\n                                </label>\\r\\n                                <span class=\\\"help-block\\\">{{l(\\\"AllowUsersToRegisterThemselves_Hint\\\")}}</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\" [hidden]=\\\"!settings.userManagement.allowSelfRegistration\\\">\\r\\n                                <input id=\\\"Setting_IsNewRegisteredUserActiveByDefault\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsNewRegisteredUserActiveByDefault\\\" [(ngModel)]=\\\"settings.userManagement.isNewRegisteredUserActiveByDefault\\\">\\r\\n                                <label for=\\\"Setting_IsNewRegisteredUserActiveByDefault\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"NewRegisteredUsersIsActiveByDefault\\\")}}\\r\\n                                </label>\\r\\n                                <span class=\\\"help-block\\\">{{l(\\\"NewRegisteredUsersIsActiveByDefault_Hint\\\")}}</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\" [hidden]=\\\"!settings.userManagement.allowSelfRegistration\\\">\\r\\n                                <input id=\\\"Setting_UseCaptchaOnRegistration\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"UseCaptchaOnRegistration\\\" [(ngModel)]=\\\"settings.userManagement.useCaptchaOnRegistration\\\">\\r\\n                                <label for=\\\"Setting_UseCaptchaOnRegistration\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"UseCaptchaOnRegistration\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"!isMultiTenancyEnabled && settings.ldap.isModuleEnabled\\\">\\r\\n                        <h4>{{l(\\\"LdapSettings\\\")}}</h4>\\r\\n                        <div class=\\\"md-checkbox-list\\\">\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_LdapIsEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"LdapIsEnabled\\\" [(ngModel)]=\\\"settings.ldap.isEnabled\\\">\\r\\n                                <label for=\\\"Setting_LdapIsEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"EnableLdapAuthentication\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" [hidden]=\\\"!settings.ldap.isEnabled\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"LdapDomainName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.ldap.domain}\\\" [(ngModel)]=\\\"settings.ldap.domain\\\" maxlength=\\\"128\\\">\\r\\n                            <label>{{l(\\\"DomainName\\\")}}</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" [hidden]=\\\"!settings.ldap.isEnabled\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"LdapUserName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.ldap.userName}\\\" [(ngModel)]=\\\"settings.ldap.userName\\\" maxlength=\\\"128\\\">\\r\\n                            <label>{{l(\\\"UserName\\\")}}</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" [hidden]=\\\"!settings.ldap.isEnabled\\\">\\r\\n                            <input type=\\\"password\\\" name=\\\"LdapPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.ldap.password}\\\" [(ngModel)]=\\\"settings.ldap.password\\\" maxlength=\\\"128\\\">\\r\\n                            <label>{{l(\\\"Password\\\")}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <h4>{{l(\\\"OtherSettings\\\")}}</h4>\\r\\n                        <div class=\\\"md-checkbox-list\\\">\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_IsEmailConfirmationRequiredForLogin\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsEmailConfirmationRequiredForLogin\\\" [(ngModel)]=\\\"settings.userManagement.isEmailConfirmationRequiredForLogin\\\">\\r\\n                                <label for=\\\"Setting_IsEmailConfirmationRequiredForLogin\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"EmailConfirmationRequiredForLogin\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </tab>\\r\\n                <tab *ngIf=\\\"true\\\" heading=\\\"{{l('Security')}}\\\">\\r\\n                    <!-- *ngIf=\\\"true\\\" is a workaround for https://github.com/valor-software/ng2-bootstrap/issues/823 -->\\r\\n                    <div>\\r\\n                        <h4>{{l(\\\"PasswordComplexity\\\")}}</h4>\\r\\n                        <div class=\\\"md-checkbox-list\\\">\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" [(ngModel)]=\\\"settings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                <label for=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"UseDefaultSettings\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"md-checkbox-list\\\">\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireDigit\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireDigit\\\"\\r\\n                                       [(ngModel)]=\\\"settings.security.passwordComplexity.requireDigit\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireDigit\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireDigit\\\"\\r\\n                                       [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requireDigit\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                       disabled>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireDigit\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"PasswordComplexity_RequireDigit\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireLowercase\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireLowercase\\\"\\r\\n                                       [(ngModel)]=\\\"settings.security.passwordComplexity.requireLowercase\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireLowercase\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireLowercase\\\"\\r\\n                                       [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requireLowercase\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                       disabled>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireLowercase\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"PasswordComplexity_RequireLowercase\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\"\\r\\n                                       [(ngModel)]=\\\"settings.security.passwordComplexity.requireNonAlphanumeric\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\"\\r\\n                                       [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requireNonAlphanumeric\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                       disabled>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"PasswordComplexity_RequireNonAlphanumeric\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireUppercase\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireUppercase\\\"\\r\\n                                       [(ngModel)]=\\\"settings.security.passwordComplexity.requireUppercase\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                                <input id=\\\"Setting_PasswordComplexity_RequireUppercase\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireUppercase\\\"\\r\\n                                       [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requireUppercase\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                       disabled>\\r\\n                                <label for=\\\"Setting_PasswordComplexity_RequireUppercase\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"PasswordComplexity_RequireUppercase\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                            <input type=\\\"number\\\" name=\\\"RequiredLength\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.security.passwordComplexity.requiredLength}\\\"\\r\\n                                   [(ngModel)]=\\\"settings.security.passwordComplexity.requiredLength\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\r\\n                            <input type=\\\"number\\\" name=\\\"RequiredLength\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.security.defaultPasswordComplexity.requiredLength}\\\"\\r\\n                                   [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requiredLength\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\r\\n                                   disabled>\\r\\n                            <label>{{l(\\\"PasswordComplexity_RequiredLength\\\")}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <h4>{{l(\\\"UserLockOut\\\")}}</h4>\\r\\n                        <div class=\\\"md-checkbox-list\\\">\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_UserLockOut_IsEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_UserLockOut_IsEnabled\\\" [(ngModel)]=\\\"settings.security.userLockOut.isEnabled\\\">\\r\\n                                <label for=\\\"Setting_UserLockOut_IsEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"EnableUserAccountLockingOnFailedLoginAttemts\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" *ngIf=\\\"settings.security.userLockOut.isEnabled\\\">\\r\\n                            <input type=\\\"number\\\" name=\\\"MaxFailedAccessAttemptsBeforeLockout\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.security.userLockOut.maxFailedAccessAttemptsBeforeLockout}\\\" [(ngModel)]=\\\"settings.security.userLockOut.maxFailedAccessAttemptsBeforeLockout\\\">\\r\\n                            <label>{{l(\\\"MaxFailedAccessAttemptsBeforeLockout\\\")}}</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" *ngIf=\\\"settings.security.userLockOut.isEnabled\\\">\\r\\n                            <input type=\\\"number\\\" name=\\\"DefaultAccountLockoutSeconds\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.security.userLockOut.defaultAccountLockoutSeconds}\\\" [(ngModel)]=\\\"settings.security.userLockOut.defaultAccountLockoutSeconds\\\">\\r\\n                            <label>{{l(\\\"DefaultAccountLockoutDurationAsSeconds\\\")}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"!isMultiTenancyEnabled || settings.security.twoFactorLogin.isEnabledForApplication\\\">\\r\\n                        <h4>{{l(\\\"TwoFactorLogin\\\")}}</h4>\\r\\n                        <div class=\\\"md-checkbox-list\\\">\\r\\n                            <div class=\\\"md-checkbox\\\">\\r\\n                                <input id=\\\"Setting_TwoFactorLogin_IsEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsEnabled\\\" [(ngModel)]=\\\"settings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"EnableTwoFactorLogin\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\" *ngIf=\\\"settings.security.twoFactorLogin.isEnabled && !isMultiTenancyEnabled\\\">\\r\\n                                <input id=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" [(ngModel)]=\\\"settings.security.twoFactorLogin.isEmailProviderEnabled\\\">\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"IsEmailVerificationEnabled\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\" *ngIf=\\\"settings.security.twoFactorLogin.isEnabled && !isMultiTenancyEnabled\\\">\\r\\n                                <input id=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" [(ngModel)]=\\\"settings.security.twoFactorLogin.isSmsProviderEnabled\\\">\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"IsSmsVerificationEnabled\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\" *ngIf=\\\"settings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                <input id=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\"\\r\\n                                       [(ngModel)]=\\\"settings.security.twoFactorLogin.isGoogleAuthenticatorEnabled\\\">\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"IsGoogleAuthenticatorEnabled\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"md-checkbox\\\" *ngIf=\\\"settings.security.twoFactorLogin.isEnabled\\\">\\r\\n                                <input id=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" [(ngModel)]=\\\"settings.security.twoFactorLogin.isRememberBrowserEnabled\\\">\\r\\n                                <label for=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\">\\r\\n                                    <span class=\\\"inc\\\"></span>\\r\\n                                    <span class=\\\"check\\\"></span>\\r\\n                                    <span class=\\\"box\\\"></span>\\r\\n                                    {{l(\\\"AllowToRememberBrowserForTwoFactorLogin\\\")}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </tab>\\r\\n                <tab heading=\\\"{{l('EmailSmtp')}}\\\" *ngIf=\\\"!isMultiTenancyEnabled\\\">\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input type=\\\"email\\\" name=\\\"DefaultFromAddress\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.defaultFromAddress}\\\" [(ngModel)]=\\\"settings.email.defaultFromAddress\\\" maxlength=\\\"128\\\">\\r\\n                        <label>{{l(\\\"DefaultFromAddress\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"DefaultFromDisplayName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.defaultFromDisplayName}\\\" [(ngModel)]=\\\"settings.email.defaultFromDisplayName\\\" maxlength=\\\"128\\\">\\r\\n                        <label>{{l(\\\"DefaultFromDisplayName\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"SmtpHost\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpHost}\\\" [(ngModel)]=\\\"settings.email.smtpHost\\\" maxlength=\\\"64\\\">\\r\\n                        <label>{{l(\\\"SmtpHost\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input type=\\\"number\\\" name=\\\"SmtpPort\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpPort}\\\" [(ngModel)]=\\\"settings.email.smtpPort\\\" maxlength=\\\"5\\\">\\r\\n                        <label>{{l(\\\"SmtpPort\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"md-checkbox-list\\\">\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"Settings_SmtpEnableSsl\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"SmtpEnableSsl\\\" [(ngModel)]=\\\"settings.email.smtpEnableSsl\\\">\\r\\n                            <label for=\\\"Settings_SmtpEnableSsl\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"UseSsl\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"Settings_SmtpUseDefaultCredentials\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"SmtpUseDefaultCredentials\\\" [(ngModel)]=\\\"settings.email.smtpUseDefaultCredentials\\\">\\r\\n                            <label for=\\\"Settings_SmtpUseDefaultCredentials\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"UseDefaultCredentials\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" [hidden]=\\\"settings.email.smtpUseDefaultCredentials\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"SmtpDomainName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpDomain}\\\" [(ngModel)]=\\\"settings.email.smtpDomain\\\" maxlength=\\\"128\\\">\\r\\n                        <label>{{l(\\\"DomainName\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" [hidden]=\\\"settings.email.smtpUseDefaultCredentials\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"SmtpUserName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpUserName}\\\" [(ngModel)]=\\\"settings.email.smtpUserName\\\" maxlength=\\\"128\\\">\\r\\n                        <label>{{l(\\\"UserName\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" *ngIf=\\\"!setRandomPassword\\\" [hidden]=\\\"settings.email.smtpUseDefaultCredentials\\\">\\r\\n                        <input type=\\\"password\\\" name=\\\"SmtpPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpPassword}\\\" [(ngModel)]=\\\"settings.email.smtpPassword\\\" maxlength=\\\"128\\\">\\r\\n                        <label>{{l(\\\"Password\\\")}}</label>\\r\\n                    </div>\\r\\n                    <hr />\\r\\n                    <h4>{{l(\\\"TestEmailSettingsHeader\\\")}}</h4>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group form-md-line-input has-info form-md-floating-label col-md-4\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"testEmailAddress\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-md-line-input col-md-2\\\">\\r\\n                            <button class=\\\"btn green-haze\\\" type=\\\"button\\\" (click)=\\\"sendTestEmail()\\\">{{l(\\\"SendTestEmail\\\")}}</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </tab>\\r\\n            </tabset>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/settings/tenant-settings.component.html\n// module id = ../../../../../src/app/admin/settings/tenant-settings.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector } from '@angular/core';\r\nimport { TenantSettingsServiceProxy, DefaultTimezoneScope, TenantSettingsEditDto, SendTestEmailInput } from '@shared/service-proxies/service-proxies';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { AppTimezoneScope } from '@shared/AppEnums';\r\nimport { AppSessionService } from '@shared/common/session/app-session.service';\r\nimport { FileUploader, FileUploaderOptions } from '@node_modules/ng2-file-upload';\r\nimport { TokenService } from '@abp/auth/token.service';\r\nimport { IAjaxResponse } from '@abp/abpHttp';\r\n\r\nimport * as moment from \"moment\";\r\n\r\n@Component({\r\n    templateUrl: \"./tenant-settings.component.html\",\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class TenantSettingsComponent extends AppComponentBase implements OnInit {\r\n\r\n\r\n    usingDefaultTimeZone: boolean = false;\r\n    initialTimeZone: string = null;\r\n    testEmailAddress: string = undefined;\r\n\r\n    isMultiTenancyEnabled: boolean = this.multiTenancy.isEnabled;\r\n    showTimezoneSelection: boolean = abp.clock.provider.supportsMultipleTimezone;\r\n    activeTabIndex: number = (abp.clock.provider.supportsMultipleTimezone) ? 0 : 1;\r\n    loading: boolean = false;\r\n    settings: TenantSettingsEditDto = undefined;\r\n\r\n    logoUploader: FileUploader;\r\n    customCssUploader: FileUploader;\r\n\r\n    remoteServiceBaseUrl = AppConsts.remoteServiceBaseUrl;\r\n\r\n    defaultTimezoneScope: DefaultTimezoneScope = AppTimezoneScope.Tenant;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _tenantSettingsService: TenantSettingsServiceProxy,\r\n        private _appSessionService: AppSessionService,\r\n        private _tokenService: TokenService\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.testEmailAddress = this._appSessionService.user.emailAddress;\r\n        this.getSettings();\r\n        this.initUploaders();\r\n    }\r\n\r\n    getSettings(): void {\r\n        this.loading = true;\r\n        this._tenantSettingsService.getAllSettings()\r\n            .finally(() => {\r\n                this.loading = false;\r\n            })\r\n            .subscribe((result: TenantSettingsEditDto) => {\r\n                this.settings = result;\r\n                if (this.settings.general) {\r\n                    this.initialTimeZone = this.settings.general.timezone;\r\n                    this.usingDefaultTimeZone = this.settings.general.timezoneForComparison === abp.setting.values[\"Abp.Timing.TimeZone\"];\r\n                }\r\n            });\r\n    }\r\n\r\n    initUploaders(): void {\r\n        this.logoUploader = this.createUploader(\r\n            \"/TenantCustomization/UploadLogo\",\r\n            result => {\r\n                this._appSessionService.tenant.logoFileType = result.fileType;\r\n                this._appSessionService.tenant.logoId = result.id;\r\n            }\r\n        );\r\n\r\n        this.customCssUploader = this.createUploader(\r\n            \"/TenantCustomization/UploadCustomCss\",\r\n            result => {\r\n                this.appSession.tenant.customCssId = result.id;\r\n                $('#TenantCustomCss').remove();\r\n                $('head').append('<link id=\"TenantCustomCss\" href=\"' + AppConsts.remoteServiceBaseUrl + '/TenantCustomization/GetCustomCss?id=' + this.appSession.tenant.customCssId + '\" rel=\"stylesheet\"/>');\r\n            }\r\n        );\r\n    }\r\n\r\n    createUploader(url: string, success?: (result: any) => void): FileUploader {\r\n        const uploader = new FileUploader({ url: AppConsts.remoteServiceBaseUrl + url });\r\n\r\n        uploader.onAfterAddingFile = (file) => {\r\n            file.withCredentials = false;\r\n        };\r\n\r\n        uploader.onSuccessItem = (item, response, status) => {\r\n            let ajaxResponse = <IAjaxResponse>JSON.parse(response);\r\n            if (ajaxResponse.success) {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                success && success(ajaxResponse.result);\r\n            } else {\r\n                this.message.error(ajaxResponse.error.message);\r\n            }\r\n        };\r\n\r\n        const uploaderOptions: FileUploaderOptions = {};\r\n        uploaderOptions.authToken = 'Bearer ' + this._tokenService.getToken();\r\n        uploaderOptions.removeAfterUpload = true;\r\n        uploader.setOptions(uploaderOptions);\r\n        return uploader;\r\n    }\r\n\r\n    uploadLogo(): void {\r\n        this.logoUploader.uploadAll();\r\n    }\r\n\r\n    uploadCustomCss(): void {\r\n        this.customCssUploader.uploadAll();\r\n    }\r\n\r\n    clearLogo(): void {\r\n        this._tenantSettingsService.clearLogo().subscribe(() => {\r\n            this._appSessionService.tenant.logoFileType = null;\r\n            this._appSessionService.tenant.logoId = null;\r\n            this.notify.info(this.l('ClearedSuccessfully'));\r\n        });\r\n    }\r\n\r\n    clearCustomCss(): void {\r\n        this._tenantSettingsService.clearCustomCss().subscribe(() => {\r\n            this.appSession.tenant.customCssId = null;\r\n            $('#TenantCustomCss').remove();\r\n            this.notify.info(this.l('ClearedSuccessfully'));\r\n        });\r\n    }\r\n\r\n    saveAll(): void {\r\n        this._tenantSettingsService.updateAllSettings(this.settings).subscribe(() => {\r\n            this.notify.info(this.l('SavedSuccessfully'));\r\n\r\n            if (abp.clock.provider.supportsMultipleTimezone && this.usingDefaultTimeZone && this.initialTimeZone !== this.settings.general.timezone) {\r\n                this.message.info(this.l('TimeZoneSettingChangedRefreshPageNotification')).done(() => {\r\n                    window.location.reload();\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    sendTestEmail(): void {\r\n        let input = new SendTestEmailInput();\r\n        input.emailAddress = this.testEmailAddress;\r\n        this._tenantSettingsService.sendTestEmail(input).subscribe(result => {\r\n            this.notify.info(this.l(\"TestEmailSentSuccessfully\"));\r\n        });\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/settings/tenant-settings.component.ts","import {\r\n    Component,\r\n    OnInit,\r\n    AfterViewInit,\r\n    ElementRef,\r\n    ViewChild,\r\n    Injector,\r\n    Input,\r\n    Output,\r\n    EventEmitter\r\n\r\n} from '@angular/core';\r\nimport { EditionServiceProxy, ComboboxItemDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    selector: 'edition-combo',\r\n    template:\r\n    `<select #EditionCombobox\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"selectedEdition\"\r\n        (ngModelChange)=\"selectedEditionChange.emit($event)\"\r\n        [attr.data-live-search]=\"true\">        \r\n            <option *ngFor=\"let edition of editions\" [value]=\"edition.value\">{{edition.displayText}}</option>\r\n    </select>`\r\n})\r\nexport class EditionComboComponent extends AppComponentBase implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('EditionCombobox') editionComboboxElement: ElementRef;\r\n\r\n    editions: ComboboxItemDto[] = [];\r\n\r\n    @Input() selectedEdition: string = undefined;\r\n    @Output() selectedEditionChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    constructor(\r\n        private _editionService: EditionServiceProxy,\r\n        injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        var self = this;\r\n        this._editionService.getEditionComboboxItems(0, true, false).subscribe(editions => {\r\n            this.editions = editions;\r\n            setTimeout(() => {\r\n                $(self.editionComboboxElement.nativeElement).selectpicker('refresh');\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        $(this.editionComboboxElement.nativeElement).selectpicker({\r\n            iconBase: \"famfamfam-flag\",\r\n            tickIcon: \"fa fa-check\"\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/edition-combo.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".feature-tree-textbox {\\n  max-width: 100px;\\n  margin: 1px;\\n  margin-left: 5px;\\n}\\n.feature-tree-textbox.feature-tree-textbox-invalid {\\n  background: #f00;\\n  color: white;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/feature-tree.component.less\n// module id = ../../../../../src/app/admin/shared/feature-tree.component.less\n// module chunks = admin.module","import { Component, OnInit, AfterViewInit, AfterViewChecked, ElementRef, ViewChild, Injector, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { NameValueDto, FlatFeatureDto } from '@shared/service-proxies/service-proxies';\r\nimport { FeatureTreeEditModel } from '@app/admin/shared/feature-tree-edit.model';\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'feature-tree',\r\n    template: `<div class=\"feature-tree\"></div>`,\r\n    styleUrls: ['./feature-tree.component.less']\r\n})\r\nexport class FeatureTreeComponent extends AppComponentBase implements OnInit, AfterViewInit, AfterViewChecked {\r\n\r\n    set editData(val: FeatureTreeEditModel) {\r\n        this._editData = val;\r\n        this.refreshTree();\r\n    }\r\n\r\n    private _$tree: JQuery;\r\n    private _editData: FeatureTreeEditModel;\r\n    private _createdTreeBefore;\r\n\r\n    constructor(private _element: ElementRef,\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this._$tree = $(this._element.nativeElement);\r\n\r\n        this.refreshTree();\r\n    }\r\n\r\n    ngAfterViewChecked(): void {\r\n\r\n    }\r\n\r\n    getGrantedFeatures(): NameValueDto[] {\r\n        if (!this._$tree || !this._createdTreeBefore) {\r\n            return [];\r\n        }\r\n\r\n        var selectedFeatures = this._$tree.jstree('get_selected', true);\r\n\r\n        return _.map(this._editData.features, item => {\r\n            let feature = new NameValueDto();\r\n\r\n            feature.name = item.name;\r\n\r\n            if (!item.inputType || item.inputType.name == 'CHECKBOX') {\r\n                feature.value = _.some(selectedFeatures, { original: { id: item.name } }) ? \"true\" : \"false\";\r\n            } else {\r\n                feature.value = this.getFeatureValueByName(item.name);\r\n            }\r\n\r\n            return feature;\r\n        });\r\n    }\r\n\r\n    refreshTree(): void {\r\n        var self = this;\r\n\r\n        if (this._createdTreeBefore) {\r\n            this._$tree.jstree('destroy');\r\n        }\r\n\r\n        this._createdTreeBefore = false;\r\n\r\n        if (!this._editData || !this._$tree) {\r\n            return;\r\n        }\r\n\r\n        var treeData = _.map(this._editData.features, function (item) {\r\n            return {\r\n                id: item.name,\r\n                parent: item.parentName ? item.parentName : '#',\r\n                text: item.displayName,\r\n                state: {\r\n                    opened: true,\r\n                    selected: _.some(self._editData.featureValues, { name: item.name, value: \"true\" })\r\n                }\r\n            };\r\n        });\r\n\r\n        this._$tree\r\n            .on('ready.jstree', function () {\r\n                self.customizeTreeNodes();\r\n            })\r\n            .on('redraw.jstree', function () {\r\n                self.customizeTreeNodes();\r\n            })\r\n            .on('after_open.jstree', function () {\r\n                self.customizeTreeNodes();\r\n            })\r\n            .on('create_node.jstree', function () {\r\n                self.customizeTreeNodes();\r\n            })\r\n            .on(\"changed.jstree\", function (e, data) {\r\n                if (!data.node) {\r\n                    return;\r\n                }\r\n\r\n                var wasInTreeChangeEvent = inTreeChangeEvent;\r\n                if (!wasInTreeChangeEvent) {\r\n                    inTreeChangeEvent = true;\r\n                }\r\n\r\n                var childrenNodes;\r\n\r\n                if (data.node.state.selected) {\r\n                    selectNodeAndAllParents(self._$tree.jstree('get_parent', data.node));\r\n\r\n                    childrenNodes = $.makeArray(self._$tree.jstree('get_children_dom', data.node));\r\n                    self._$tree.jstree('select_node', childrenNodes);\r\n\r\n                } else {\r\n                    childrenNodes = $.makeArray(self._$tree.jstree('get_children_dom', data.node));\r\n                    self._$tree.jstree('deselect_node', childrenNodes);\r\n                }\r\n\r\n                if (!wasInTreeChangeEvent) {\r\n                    var $nodeLi = self.getNodeLiByFeatureName(data.node.id);\r\n                    var feature = self.findFeatureByName(data.node.id);\r\n                    if (feature && (!feature.inputType || feature.inputType.name == 'CHECKBOX')) {\r\n                        var value = self._$tree.jstree('is_checked', $nodeLi) ? 'true' : 'false';\r\n                        self.setFeatureValueByName(data.node.id, value);\r\n                    }\r\n\r\n                    inTreeChangeEvent = false;\r\n                }\r\n            })\r\n            .jstree({\r\n                'core': {\r\n                    data: treeData\r\n                },\r\n                \"types\": {\r\n                    \"default\": {\r\n                        \"icon\": \"fa fa-folder tree-item-icon-color icon-lg\"\r\n                    },\r\n                    \"file\": {\r\n                        \"icon\": \"fa fa-file tree-item-icon-color icon-lg\"\r\n                    }\r\n                },\r\n                'checkbox': {\r\n                    keep_selected_style: false,\r\n                    three_state: false,\r\n                    cascade: ''\r\n                },\r\n                plugins: ['checkbox', 'types']\r\n            });\r\n\r\n        this._createdTreeBefore = true;\r\n\r\n        let inTreeChangeEvent = false;\r\n\r\n        function selectNodeAndAllParents(node) {\r\n            self._$tree.jstree('select_node', node, true);\r\n            var parent = self._$tree.jstree('get_parent', node);\r\n            if (parent) {\r\n                selectNodeAndAllParents(parent);\r\n            }\r\n        };\r\n\r\n        this._$tree.on(\"changed.jstree\", function (e, data) {\r\n            if (!data.node) {\r\n                return;\r\n            }\r\n\r\n            var wasInTreeChangeEvent = inTreeChangeEvent;\r\n            if (!wasInTreeChangeEvent) {\r\n                inTreeChangeEvent = true;\r\n            }\r\n\r\n            var childrenNodes;\r\n\r\n            if (data.node.state.selected) {\r\n                selectNodeAndAllParents(self._$tree.jstree('get_parent', data.node));\r\n\r\n                childrenNodes = $.makeArray(self._$tree.jstree('get_children_dom', data.node));\r\n                self._$tree.jstree('select_node', childrenNodes);\r\n\r\n            } else {\r\n                childrenNodes = $.makeArray(self._$tree.jstree('get_children_dom', data.node));\r\n                self._$tree.jstree('deselect_node', childrenNodes);\r\n            }\r\n\r\n            if (!wasInTreeChangeEvent) {\r\n                inTreeChangeEvent = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    customizeTreeNodes(): void {\r\n        let self = this;\r\n        self._$tree.find('.jstree-node').each(function () {\r\n            var $nodeLi = $(this);\r\n            var $nodeA = $nodeLi.find('.jstree-anchor');\r\n\r\n            var featureName = $nodeLi.attr('id');\r\n            var feature = self.findFeatureByName(featureName);\r\n            var featureValue = self.findFeatureValueByName(featureName) || '';\r\n\r\n            if (!feature || !feature.inputType) {\r\n                return;\r\n            }\r\n\r\n            if (feature.inputType.name == 'CHECKBOX') {\r\n                //no change for checkbox\r\n            } else if (feature.inputType.name == 'SINGLE_LINE_STRING') {\r\n                if (!$nodeLi.find('.feature-tree-textbox').length) {\r\n                    $nodeA.find('.jstree-checkbox').hide();\r\n\r\n                    var inputType = 'text';\r\n                    let validator = (feature.inputType.validator as any);\r\n                    if (feature.inputType.validator) {\r\n                        if (feature.inputType.validator.name == 'NUMERIC') {\r\n                            inputType = 'number';\r\n                        }\r\n                    }\r\n\r\n                    var $textbox = $('<input class=\"feature-tree-textbox\" type=\"' + inputType + '\" />')\r\n                        .val(featureValue);\r\n\r\n                    if (inputType == 'number') {\r\n                        $textbox.attr('min', validator.minValue);\r\n                        $textbox.attr('max', validator.maxValue);\r\n                    } else {\r\n                        if (feature.inputType.validator && feature.inputType.validator.name == 'STRING') {\r\n                            if (validator.maxLength > 0) {\r\n                                $textbox.attr('maxlength', validator.maxLength);\r\n                            }\r\n                            if (validator.minLength > 0) {\r\n                                $textbox.attr('required', 'required');\r\n                            }\r\n                            if (validator.regularExpression) {\r\n                                $textbox.attr('pattern', validator.regularExpression);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    $textbox.on('input propertychange paste', () => {\r\n                        var value = $textbox.val() as string;\r\n                        if (self.isFeatureValueValid(featureName, value)) {\r\n                            self.setFeatureValueByName(featureName, value);\r\n                            $textbox.removeClass('feature-tree-textbox-invalid');\r\n                        } else {\r\n                            $textbox.addClass('feature-tree-textbox-invalid');\r\n                        }\r\n                    });\r\n\r\n                    $textbox.appendTo($nodeLi);\r\n                }\r\n            } else if (feature.inputType.name == 'COMBOBOX') {\r\n                if (!$nodeLi.find('.feature-tree-combobox').length) {\r\n                    $nodeA.find('.jstree-checkbox').hide();\r\n\r\n                    var $combobox = $('<select class=\"feature-tree-combobox\" />');\r\n                    let inputType = (feature.inputType as any);\r\n                    _.each(inputType.itemSource.items, function (opt: any) {\r\n                        $('<option></option>')\r\n                            .attr('value', opt.value)\r\n                            .text(opt.displayText)\r\n                            .appendTo($combobox);\r\n                    });\r\n\r\n                    $combobox\r\n                        .val(featureValue)\r\n                        .on('change', () => {\r\n                            var value = $combobox.val() as string;\r\n                            self.setFeatureValueByName(featureName, value);\r\n                        })\r\n                        .appendTo($nodeLi);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    getNodeLiByFeatureName(featureName: string): JQuery {\r\n        return $('#' + featureName.replace('.', '\\\\.'));\r\n    }\r\n\r\n    selectNodeAndAllParents(node: any): void {\r\n        let self = this;\r\n        self._$tree.jstree('select_node', node, true);\r\n        var parent = self._$tree.jstree('get_parent', node);\r\n        if (parent) {\r\n            self.selectNodeAndAllParents(parent);\r\n        }\r\n    };\r\n\r\n    findFeatureByName(featureName: string): FlatFeatureDto {\r\n        let self = this;\r\n\r\n        var feature = _.find(self._editData.features, function (f) { return f.name == featureName });\r\n\r\n        if (!feature) {\r\n            abp.log.warn('Could not find a feature by name: ' + featureName);\r\n        }\r\n\r\n        return feature;\r\n    }\r\n\r\n    findFeatureValueByName(featureName: string) {\r\n        let self = this;\r\n        var feature = self.findFeatureByName(featureName);\r\n        if (!feature) {\r\n            return '';\r\n        }\r\n\r\n        var featureValue = _.find(self._editData.featureValues, function (f) { return f.name == featureName });\r\n        if (!featureValue) {\r\n            return feature.defaultValue;\r\n        }\r\n\r\n        return featureValue.value;\r\n    }\r\n\r\n    isFeatureValueValid(featureName: string, value: string): boolean {\r\n        let self = this;\r\n        var feature = self.findFeatureByName(featureName);\r\n        if (!feature || !feature.inputType || !feature.inputType.validator) {\r\n            return true;\r\n        }\r\n\r\n        var validator = (feature.inputType.validator as any);\r\n        if (validator.name == 'STRING') {\r\n            if (value == undefined || value == null) {\r\n                return validator.allowNull;\r\n            }\r\n\r\n            if (typeof value != 'string') {\r\n                return false;\r\n            }\r\n\r\n            if (validator.minLength > 0 && value.length < validator.minLength) {\r\n                return false;\r\n            }\r\n\r\n            if (validator.maxLength > 0 && value.length > validator.maxLength) {\r\n                return false;\r\n            }\r\n\r\n            if (validator.regularExpression) {\r\n                return (new RegExp(validator.regularExpression)).test(value);\r\n            }\r\n        } else if (validator.name == 'NUMERIC') {\r\n            var numValue = parseInt(value);\r\n\r\n            if (isNaN(numValue)) {\r\n                return false;\r\n            }\r\n\r\n            var minValue = validator.minValue;\r\n            if (minValue > numValue) {\r\n                return false;\r\n            }\r\n\r\n            var maxValue = validator.maxValue;\r\n            if (maxValue > 0 && numValue > maxValue) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    areAllValuesValid(): boolean {\r\n        let self = this;\r\n        self._$tree.find('.jstree-node').each(function () {\r\n            var $nodeLi = $(this);\r\n            var featureName = $nodeLi.attr('id');\r\n            var feature = self.findFeatureByName(featureName);\r\n\r\n            if (feature && (!feature.inputType || feature.inputType.name == 'CHECKBOX')) {\r\n                var value = self._$tree.jstree('is_checked', $nodeLi) ? 'true' : 'false';\r\n                self.setFeatureValueByName(featureName, value);\r\n            }\r\n        });\r\n\r\n        return self._$tree.find('.feature-tree-textbox-invalid').length <= 0;\r\n    }\r\n\r\n    setFeatureValueByName(featureName: string, value: string): void {\r\n        var featureValue = _.find(this._editData.featureValues, f => f.name === featureName);\r\n        if (!featureValue) {\r\n            return;\r\n        }\r\n\r\n        featureValue.value = value;\r\n    }\r\n\r\n    getFeatureValueByName(featureName: string): string {\r\n        var featureValue = _.find(this._editData.featureValues, f => f.name === featureName);\r\n        if (!featureValue) {\r\n            return null;\r\n        }\r\n\r\n        return featureValue.value;\r\n    }\r\n\r\n    isFeatureEnabled(featureName: string): boolean {\r\n        let self = this;\r\n        var value = self.findFeatureValueByName(featureName);\r\n        return value.toLowerCase() === 'true';\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/feature-tree.component.ts","import { Component, AfterViewInit, ElementRef, Injector } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { OrganizationUnitDto } from '@shared/service-proxies/service-proxies';\r\nimport * as _ from \"lodash\";\r\n\r\nexport interface IOrganizationUnitsTreeComponentData {\r\n    allOrganizationUnits: OrganizationUnitDto[];\r\n    selectedOrganizationUnits: string[];\r\n}\r\n\r\n@Component({\r\n    selector: 'organization-unit-tree',\r\n    template:\r\n    `<div class='form-group'>\r\n        <input id='OrganizationUnitsTreeFilter' type='text' class='form-control' placeholder='{{l(\"SearchWithThreeDot\")}}' >\r\n    </div>\r\n    <div class=\"organization-unit-tree\"></div>\r\n    `\r\n})\r\nexport class OrganizationUnitsTreeComponent extends AppComponentBase implements AfterViewInit {\r\n\r\n    set data(data: IOrganizationUnitsTreeComponentData) {\r\n        this._allOrganizationUnits = data.allOrganizationUnits;\r\n        this._selectedOrganizationUnits = data.selectedOrganizationUnits;\r\n        this.refreshTree();\r\n    }\r\n\r\n    private _$tree: JQuery;\r\n    private _createdTreeBefore;\r\n\r\n    private _allOrganizationUnits: OrganizationUnitDto[];\r\n    private _selectedOrganizationUnits: string[];\r\n\r\n    private filter: string = '';\r\n\r\n    constructor(private _element: ElementRef,\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this._$tree = $(this._element.nativeElement).find('.organization-unit-tree');\r\n        this.refreshTree();\r\n        this.initFiltering();\r\n    }\r\n\r\n    getSelectedOrganizations(): number[] {\r\n        if (!this._$tree || !this._createdTreeBefore) {\r\n            return [];\r\n        }\r\n\r\n        var organizationIds = [];\r\n\r\n        var selectedOrganizations = this._$tree.jstree('get_selected', true);\r\n        for (var i = 0; i < selectedOrganizations.length; i++) {\r\n            organizationIds.push(selectedOrganizations[i].original.id);\r\n        }\r\n\r\n        return organizationIds;\r\n    }\r\n\r\n    refreshTree(): void {\r\n        var self = this;\r\n\r\n        if (this._createdTreeBefore) {\r\n            this._$tree.jstree('destroy');\r\n        }\r\n\r\n        this._createdTreeBefore = false;\r\n\r\n        if (!this._allOrganizationUnits || !this._$tree) {\r\n            return;\r\n        }\r\n\r\n        var treeData = _.map(this._allOrganizationUnits, item => (<any>{\r\n            id: item.id,\r\n            parent: item.parentId ? item.parentId : '#',\r\n            code: item.code,\r\n            displayName: item.displayName,\r\n            memberCount: item.memberCount,\r\n            text: item.displayName,\r\n            dto: item,\r\n            state: {\r\n                opened: true,\r\n                selected: _.includes(self._selectedOrganizationUnits, item.code)\r\n            }\r\n        }));\r\n\r\n        this._$tree.jstree({\r\n            'core': {\r\n                data: treeData\r\n            },\r\n            \"types\": {\r\n                \"default\": {\r\n                    \"icon\": \"fa fa-folder tree-item-icon-color icon-lg\"\r\n                },\r\n                \"file\": {\r\n                    \"icon\": \"fa fa-file tree-item-icon-color icon-lg\"\r\n                }\r\n            },\r\n            'checkbox': {\r\n                keep_selected_style: false,\r\n                three_state: false,\r\n                cascade: ''\r\n            },\r\n            'search': {\r\n                'show_only_matches': true\r\n            },\r\n            plugins: ['checkbox', 'types', 'search']\r\n        });\r\n\r\n        this._createdTreeBefore = true;\r\n\r\n        let inTreeChangeEvent = false;\r\n\r\n        function selectNodeAndAllParents(node) {\r\n            self._$tree.jstree('select_node', node, true);\r\n            var parent = self._$tree.jstree('get_parent', node);\r\n            if (parent) {\r\n                selectNodeAndAllParents(parent);\r\n            }\r\n        };\r\n\r\n        this._$tree.on(\"changed.jstree\", (e, data) => {\r\n            if (!data.node) {\r\n                return;\r\n            }\r\n\r\n            var wasInTreeChangeEvent = inTreeChangeEvent;\r\n            if (!wasInTreeChangeEvent) {\r\n                inTreeChangeEvent = true;\r\n            }\r\n\r\n            var childrenNodes;\r\n\r\n            if (data.node.state.selected) {\r\n                selectNodeAndAllParents(this._$tree.jstree('get_parent', data.node));\r\n\r\n                childrenNodes = $.makeArray(this._$tree.jstree('get_children_dom', data.node));\r\n                this._$tree.jstree('select_node', childrenNodes);\r\n\r\n            } else {\r\n                childrenNodes = $.makeArray(this._$tree.jstree('get_children_dom', data.node));\r\n                this._$tree.jstree('deselect_node', childrenNodes);\r\n            }\r\n\r\n            if (!wasInTreeChangeEvent) {\r\n                inTreeChangeEvent = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    initFiltering(): void {\r\n        var to = false;\r\n        var self = this;\r\n\r\n        $('#OrganizationUnitsTreeFilter').keyup(() => {\r\n            if (to) { (window as any).clearTimeout(to); }\r\n            to = (window as any).setTimeout(() => {\r\n                var v = $('#OrganizationUnitsTreeFilter').val() as string;\r\n                self._$tree.jstree(true).search(v);\r\n            }, 250);\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/organization-unit-tree.component.ts","import { Component, OnInit, AfterViewInit, ElementRef, ViewChild, Injector, Input, Output, EventEmitter } from '@angular/core';\r\nimport { PermissionServiceProxy, FlatPermissionWithLevelDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    selector: 'permission-combo',\r\n    template:\r\n    `<select #PermissionCombobox\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"selectedPermission\"\r\n        (ngModelChange)=\"selectedPermissionChange.emit($event)\"\r\n        [attr.data-live-search]=\"true\">        \r\n            <option value=\"\">{{l('FilterByPermission')}}</option>\r\n            <option *ngFor=\"let permission of permissions\" [value]=\"permission.name\">{{permission.displayName}}</option>\r\n    </select>`\r\n})\r\nexport class PermissionComboComponent extends AppComponentBase implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('PermissionCombobox') permissionComboboxElement: ElementRef;\r\n\r\n    permissions: FlatPermissionWithLevelDto[] = [];\r\n\r\n    @Input() selectedPermission: string = undefined;\r\n    @Output() selectedPermissionChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    constructor(\r\n        private _permissionService: PermissionServiceProxy,\r\n        injector: Injector) {\r\n        super(injector)\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        var self = this;\r\n        this._permissionService.getAllPermissions().subscribe(result => {\r\n            $.each(result.items, (index, item) => {\r\n                item.displayName = Array(item.level + 1).join('---') + ' ' + item.displayName;\r\n            });\r\n\r\n            this.permissions = result.items;\r\n            setTimeout(() => {\r\n                $(self.permissionComboboxElement.nativeElement).selectpicker('refresh');\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        $(this.permissionComboboxElement.nativeElement).selectpicker({\r\n            iconBase: \"famfamfam-flag\",\r\n            tickIcon: \"fa fa-check\"\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/permission-combo.component.ts","import { Component, OnInit, AfterViewInit, AfterViewChecked, ElementRef, ViewChild, Injector, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { GetUserPermissionsForEditOutput } from '@shared/service-proxies/service-proxies';\r\nimport { PermissionTreeEditModel } from '@app/admin/shared/permission-tree-edit.model';\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'permission-tree',\r\n    template:\r\n    `<div class=\"permission-tree\"></div>`\r\n})\r\nexport class PermissionTreeComponent extends AppComponentBase implements OnInit, AfterViewInit, AfterViewChecked {\r\n\r\n    set editData(val: PermissionTreeEditModel) {\r\n        this._editData = val;\r\n        this.refreshTree();\r\n    }\r\n\r\n    private _$tree: JQuery;\r\n    private _editData: PermissionTreeEditModel;\r\n    private _createdTreeBefore;\r\n\r\n    constructor(private _element: ElementRef,\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this._$tree = $(this._element.nativeElement);\r\n\r\n        this.refreshTree();\r\n    }\r\n\r\n    ngAfterViewChecked(): void {\r\n\r\n    }\r\n\r\n    getGrantedPermissionNames(): string[] {\r\n        if (!this._$tree || !this._createdTreeBefore) {\r\n            return [];\r\n        }\r\n\r\n        var permissionNames = [];\r\n\r\n        var selectedPermissions = this._$tree.jstree('get_selected', true);\r\n        for (var i = 0; i < selectedPermissions.length; i++) {\r\n            permissionNames.push(selectedPermissions[i].original.id);\r\n        }\r\n\r\n        return permissionNames;\r\n    }\r\n\r\n    refreshTree(): void {\r\n        var self = this;\r\n\r\n        if (this._createdTreeBefore) {\r\n            this._$tree.jstree('destroy');\r\n        }\r\n\r\n        this._createdTreeBefore = false;\r\n\r\n        if (!this._editData || !this._$tree) {\r\n            return;\r\n        }\r\n\r\n        var treeData = _.map(this._editData.permissions, function (item) {\r\n            return {\r\n                id: item.name,\r\n                parent: item.parentName ? item.parentName : '#',\r\n                text: item.displayName,\r\n                state: {\r\n                    opened: true,\r\n                    selected: _.includes(self._editData.grantedPermissionNames, item.name)\r\n                }\r\n            };\r\n        });\r\n\r\n        this._$tree.jstree({\r\n            'core': {\r\n                data: treeData\r\n            },\r\n            \"types\": {\r\n                \"default\": {\r\n                    \"icon\": \"fa fa-folder tree-item-icon-color icon-lg\"\r\n                },\r\n                \"file\": {\r\n                    \"icon\": \"fa fa-file tree-item-icon-color icon-lg\"\r\n                }\r\n            },\r\n            'checkbox': {\r\n                keep_selected_style: false,\r\n                three_state: false,\r\n                cascade: ''\r\n            },\r\n            plugins: ['checkbox', 'types']\r\n        });\r\n\r\n        this._createdTreeBefore = true;\r\n\r\n        let inTreeChangeEvent = false;\r\n\r\n        function selectNodeAndAllParents(node) {\r\n            self._$tree.jstree('select_node', node, true);\r\n            var parent = self._$tree.jstree('get_parent', node);\r\n            if (parent) {\r\n                selectNodeAndAllParents(parent);\r\n            }\r\n        };\r\n\r\n        this._$tree.on(\"changed.jstree\", function (e, data) {\r\n            if (!data.node) {\r\n                return;\r\n            }\r\n\r\n            var wasInTreeChangeEvent = inTreeChangeEvent;\r\n            if (!wasInTreeChangeEvent) {\r\n                inTreeChangeEvent = true;\r\n            }\r\n\r\n            var childrenNodes;\r\n\r\n            if (data.node.state.selected) {\r\n                selectNodeAndAllParents(self._$tree.jstree('get_parent', data.node));\r\n\r\n                childrenNodes = $.makeArray(self._$tree.jstree('get_children_dom', data.node));\r\n                self._$tree.jstree('select_node', childrenNodes);\r\n\r\n            } else {\r\n                childrenNodes = $.makeArray(self._$tree.jstree('get_children_dom', data.node));\r\n                self._$tree.jstree('deselect_node', childrenNodes);\r\n            }\r\n\r\n            if (!wasInTreeChangeEvent) {\r\n                inTreeChangeEvent = false;\r\n            }\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/permission-tree.component.ts","import { Component, OnInit, AfterViewInit, AfterViewChecked, ElementRef, ViewChild, Injector, Input, Output, EventEmitter } from '@angular/core';\r\nimport { RoleServiceProxy, RoleListDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\n@Component({\r\n    selector: 'role-combo',\r\n    template:\r\n    `<select #RoleCombobox\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"selectedRole\"\r\n        (ngModelChange)=\"selectedRoleChange.emit($event)\"\r\n        [attr.data-live-search]=\"true\"\r\n        jq-plugin=\"selectpicker\">        \r\n            <option value=\"\">{{emptyText}}</option>\r\n            <option *ngFor=\"let role of roles\" [value]=\"role.id\">{{role.displayName}}</option>\r\n    </select>`\r\n})\r\nexport class RoleComboComponent extends AppComponentBase implements OnInit {\r\n\r\n    @ViewChild('RoleCombobox') roleComboboxElement: ElementRef;\r\n\r\n    roles: RoleListDto[] = [];\r\n\r\n    @Input() selectedRole: string = undefined;\r\n    @Output() selectedRoleChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    @Input() emptyText: string = '';\r\n\r\n    constructor(\r\n        private _roleService: RoleServiceProxy,\r\n        injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        let self = this;\r\n        this._roleService.getRoles(undefined).subscribe(result => {\r\n            this.roles = result.items;\r\n            setTimeout(() => {\r\n                $(self.roleComboboxElement.nativeElement).selectpicker('refresh');\r\n            }, 0);\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/shared/role-combo.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-12\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{l(\\\"Subscription\\\")}}</span>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"portlet light margin-bottom-0\\\">\\r\\n        <div class=\\\"portlet-body\\\">\\r\\n\\r\\n            <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n                <tab heading=\\\"{{l('SubscriptionInformation')}}\\\">\\r\\n                    <div class=\\\"form\\\">\\r\\n                        <form class=\\\"form-horizontal\\\">\\r\\n\\r\\n                            <input type=\\\"hidden\\\" Name=\\\"PaymentPeriodType\\\" value=\\\"@tenant.PaymentPeriodType\\\" />\\r\\n                            <input type=\\\"hidden\\\" Name=\\\"Gateway\\\" value=\\\"@SubscriptionPaymentGatewayType.Paypal\\\" />\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label bold\\\">{{l(\\\"Edition\\\")}}</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <p *ngIf=\\\"tenant.edition\\\" class=\\\"form-control-static\\\">\\r\\n                                        {{tenant.edition.displayName}}\\r\\n                                        <span *ngIf=\\\"tenant.edition.isFree\\\" class=\\\"label label-success\\\">{{l(\\\"Free\\\")}}</span>\\r\\n                                        <span *ngIf=\\\"tenant.isInTrialPeriod\\\" class=\\\"label label-warning\\\">{{l(\\\"Trial\\\")}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label bold\\\">{{l(\\\"SubscriptionStartDate\\\")}}</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <p class=\\\"form-control-static\\\">{{ tenant.creationTimeString }}</p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label bold\\\">{{l(\\\"SubscriptionEndDate\\\")}}</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <p *ngIf=\\\"tenant.edition\\\" class=\\\"form-control-static\\\">\\r\\n                                        <span>{{tenant.subscriptionDateString}}</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <a *ngIf=\\\"tenant.edition && !tenant.edition.isFree && !tenant.isInTrialPeriod\\\"\\r\\n                                       [routerLink]=\\\"['/account/extend']\\\" [queryParams]=\\\"{ editionPaymentType: editionPaymentType.Extend}\\\" class=\\\"btn btn-info\\\">\\r\\n                                        {{l(\\\"Extend\\\")}}\\r\\n                                    </a>\\r\\n                                    <a *ngIf=\\\"tenant.isInTrialPeriod\\\"\\r\\n                                       [routerLink]=\\\"['/account/buy']\\\" [queryParams]=\\\"{editionPaymentType: editionPaymentType.BuyNow, editionId: tenant.edition.id }\\\"\\r\\n                                       class=\\\"btn btn-info\\\">\\r\\n                                        {{l(\\\"BuyNow\\\")}}\\r\\n                                    </a>\\r\\n                                    <a *ngIf=\\\"tenant.edition && (tenant.edition.isFree || !tenant.edition.isHighestEdition) && !tenant.isInTrialPeriod\\\"\\r\\n                                       [routerLink]=\\\"['/account/select-edition']\\\" class=\\\"btn btn-warning\\\">\\r\\n                                        {{l(\\\"Upgrade\\\")}}\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </tab>\\r\\n                <tab heading=\\\"{{l('PaymentHistory')}}\\\">\\r\\n\\r\\n                    <div class=\\\"primeng-datatable-container\\\"\\r\\n                         [busyIf]=\\\"primengDatatableHelper.isLoading\\\">\\r\\n                        <p-dataTable #dataTable\\r\\n                                     (onLazyLoad)=\\\"getPaymentHistory($event)\\\"\\r\\n                                     [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                                     rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                     [paginator]=\\\"false\\\"\\r\\n                                     [lazy]=\\\"true\\\"\\r\\n                                     emptyMessage=\\\"{{l('NoData')}}\\\"\\r\\n                                     [responsive]=\\\"primengDatatableHelper.isResponsive\\\">\\r\\n\\r\\n                            <p-column field=\\\"creationTime\\\" header=\\\"{{l('ProcessTime')}}\\\" [sortable]=\\\"true\\\">\\r\\n                                <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                    <span *ngIf=\\\"record.creationTime\\\">{{record.creationTime | momentFormat:'L'}}</span>\\r\\n                                    <span *ngIf=\\\"!record.creationTime\\\">-</span>\\r\\n                                </ng-template>\\r\\n                            </p-column>\\r\\n                            <p-column field=\\\"editionDisplayName\\\" header=\\\"{{l('Edition')}}\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                            <p-column field=\\\"gateway\\\" header=\\\"{{l('Gateway')}}\\\" [sortable]=\\\"true\\\">\\r\\n                                <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                    {{l('SubscriptionPaymentGatewayType_' + record.gateway)}}\\r\\n                                </ng-template>\\r\\n                            </p-column>\\r\\n                            <p-column field=\\\"amount\\\" header=\\\"{{l('Amount')}}\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                            <p-column field=\\\"status\\\" header=\\\"{{l('Status')}}\\\" [sortable]=\\\"true\\\">\\r\\n                                <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                    {{l('SubscriptionPaymentStatus_' + record.status)}}\\r\\n                                </ng-template>\\r\\n                            </p-column>\\r\\n                            <p-column field=\\\"paymentPeriodType\\\" header=\\\"{{l('Period')}}\\\" [sortable]=\\\"true\\\">\\r\\n                                <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                    {{l('PaymentPeriodType_' + record.paymentPeriodType)}}\\r\\n                                </ng-template>\\r\\n                            </p-column>\\r\\n                            <p-column field=\\\"dayCount\\\" header=\\\"{{l('DayCount')}}\\\" [sortable]=\\\"false\\\"></p-column>\\r\\n                            <p-column field=\\\"paymentId\\\" header=\\\"{{l('PaymentId')}}\\\" [sortable]=\\\"false\\\"></p-column>\\r\\n                        </p-dataTable>\\r\\n                        <div class=\\\"primeng-paging-container\\\">\\r\\n                            <p-paginator rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                         #paginator\\r\\n                                         (onPageChange)=\\\"getPaymentHistory($event)\\\"\\r\\n                                         [totalRecords]=\\\"primengDatatableHelper.totalRecordsCount\\\"\\r\\n                                         [rowsPerPageOptions]=\\\"primengDatatableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                            </p-paginator>\\r\\n                            <span class=\\\"total-records-count\\\">\\r\\n                                {{l('TotalRecordsCount', primengDatatableHelper.totalRecordsCount)}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </tab>\\r\\n            </tabset>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/subscription-management/subscription-management.component.html\n// module id = ../../../../../src/app/admin/subscription-management/subscription-management.component.html\n// module chunks = admin.module","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport {\r\n    SessionServiceProxy,\r\n    UserLoginInfoDto,\r\n    TenantLoginInfoDto,\r\n    ApplicationInfoDto,\r\n    PaymentServiceProxy\r\n} from '@shared/service-proxies/service-proxies';\r\nimport { SubscriptionStartType, EditionPaymentType } from \"@shared/AppEnums\";\r\nimport { AppSessionService } from '@shared/common/session/app-session.service';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\n\r\n@Component({\r\n    templateUrl: './subscription-management.component.html',\r\n    animations: [appModuleAnimation()]\r\n})\r\n\r\nexport class SubscriptionManagementComponent extends AppComponentBase implements OnInit {\r\n\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    loading: boolean;\r\n    user: UserLoginInfoDto = new UserLoginInfoDto();\r\n    tenant: TenantLoginInfoDto = new TenantLoginInfoDto();\r\n    application: ApplicationInfoDto = new ApplicationInfoDto();\r\n    subscriptionStartType: typeof SubscriptionStartType = SubscriptionStartType;\r\n    editionPaymentType: EditionPaymentType = EditionPaymentType;\r\n\r\n    filterText: string = '';\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _sessionService: SessionServiceProxy,\r\n        private _paymentServiceProxy: PaymentServiceProxy,\r\n        private _appSessionService: AppSessionService,\r\n        private _activatedRoute: ActivatedRoute\r\n    ) {\r\n        super(injector);\r\n        this.filterText = this._activatedRoute.snapshot.queryParams['filterText'] || '';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getSettings();\r\n    }\r\n\r\n    getSettings(): void {\r\n        this.loading = true;\r\n        this._appSessionService.init().then(() => {\r\n            this.loading = false;\r\n            this.user = this._appSessionService.user;\r\n            this.tenant = this._appSessionService.tenant;\r\n            this.application = this._appSessionService.application;\r\n        });\r\n    }\r\n\r\n    getPaymentHistory(event?: LazyLoadEvent) {\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n\r\n        this._paymentServiceProxy.getPaymentHistory(\r\n            this.primengDatatableHelper.getSorting(this.dataTable),\r\n            this.primengDatatableHelper.getMaxResultCount(this.paginator, event),\r\n            this.primengDatatableHelper.getSkipCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengDatatableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengDatatableHelper.records = result.items;\r\n            this.primengDatatableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/subscription-management/subscription-management.component.ts","module.exports = \"<div bsModal #createModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <form #tenantCreateForm=\\\"ngForm\\\" role=\\\"form\\\" novalidate class=\\\"form-validation\\\" *ngIf=\\\"active\\\" (submit)=\\\"save()\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span>{{l(\\\"CreateNewTenant\\\")}}</span>\\r\\n                    </h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input #tenancyNameInput class=\\\"form-control input-ltr\\\" type=\\\"text\\\" [ngClass]=\\\"{'edited':tenant.tenancyName}\\\" name=\\\"tenancyName\\\" [(ngModel)]=\\\"tenant.tenancyName\\\" #tenancyName=\\\"ngModel\\\" required maxlength=\\\"64\\\" pattern=\\\"^[a-zA-Z][a-zA-Z0-9_-]{1,}$\\\">\\r\\n                        <label>{{l(\\\"TenancyName\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <span class=\\\"help-block text-danger\\\" *ngIf=\\\"!tenancyName.valid && !tenancyName.pristine\\\">{{l(\\\"TenantName_Regex_Description\\\")}}</span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"Name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':tenant.name}\\\" [(ngModel)]=\\\"tenant.name\\\" required maxlength=\\\"128\\\">\\r\\n                        <label>{{l(\\\"Name\\\")}}</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"md-checkbox-list\\\">\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_UseHostDb\\\"\\r\\n                                   class=\\\"md-check\\\" type=\\\"checkbox\\\"\\r\\n                                   name=\\\"UseHostDb\\\" [(ngModel)]=\\\"useHostDb\\\">\\r\\n                            <label for=\\\"CreateTenant_UseHostDb\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"UseHostDatabase\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" *ngIf=\\\"!useHostDb\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"ConnectionString\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tenant.connectionString\\\" [ngClass]=\\\"{'edited':tenant.connectionString}\\\" required maxlength=\\\"1024\\\">\\r\\n                        <label>{{l(\\\"DatabaseConnectionString\\\")}}</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input type=\\\"email\\\" name=\\\"AdminEmailAddress\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tenant.adminEmailAddress\\\" [ngClass]=\\\"{'edited':tenant.adminEmailAddress}\\\" required pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{1,})+$\\\" maxlength=\\\"256\\\">\\r\\n                        <label>{{l(\\\"AdminEmailAddress\\\")}}</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"md-checkbox-list\\\">\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_SetRandomPassword\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"SetRandomPassword\\\" [(ngModel)]=\\\"setRandomPassword\\\">\\r\\n                            <label for=\\\"CreateTenant_SetRandomPassword\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"SetRandomPassword\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" *ngIf=\\\"!setRandomPassword\\\">\\r\\n                        <input type=\\\"password\\\" name=\\\"adminPassword\\\" class=\\\"form-control\\\" id=\\\"adminPassword\\\"\\r\\n                               [(ngModel)]=\\\"tenant.adminPassword\\\" [ngClass]=\\\"{'edited':tenant.adminPassword}\\\" [required]=\\\"!setRandomPassword\\\"\\r\\n                               #adminPassword=\\\"ngModel\\\" validateEqual=\\\"adminPasswordRepeat\\\" reverse=\\\"true\\\" maxlength=\\\"32\\\" [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\r\\n                               [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\">\\r\\n                        <label>{{l(\\\"AdminPassword\\\")}}</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"tenantCreateForm.form.valid || tenantCreateForm.form.pristine\\\">\\r\\n                        <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"tenantCreateForm.controls['adminPassword'] && tenantCreateForm.controls['adminPassword'].errors\\\">\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requireDigit\\\">{{l(\\\"PasswordComplexity_RequireDigit_Hint\\\")}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requireLowercase\\\">{{l(\\\"PasswordComplexity_RequireLowercase_Hint\\\")}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requireUppercase\\\">{{l(\\\"PasswordComplexity_RequireUppercase_Hint\\\")}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requireNonAlphanumeric\\\">{{l(\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\")}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requiredLength\\\">{{l(\\\"PasswordComplexity_RequiredLength_Hint\\\", passwordComplexitySetting.requiredLength)}}</li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" *ngIf=\\\"!setRandomPassword\\\">\\r\\n                        <input type=\\\"password\\\" name=\\\"adminPasswordRepeat\\\" class=\\\"form-control\\\"\\r\\n                               [(ngModel)]=\\\"tenant.adminPasswordRepeat\\\" [ngClass]=\\\"{'edited':tenant.adminPasswordRepeat}\\\" [required]=\\\"!setRandomPassword\\\"\\r\\n                               #adminPasswordRepeat=\\\"ngModel\\\" [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\r\\n                               [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\"\\r\\n                               validateEqual=\\\"adminPassword\\\"\\r\\n                               maxlength=\\\"32\\\">\\r\\n                        <label>{{l(\\\"AdminPasswordRepeat\\\")}}</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"tenantCreateForm.form.valid || tenantCreateForm.form.pristine\\\">\\r\\n                        <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"tenantCreateForm.controls['adminPasswordRepeat'] && tenantCreateForm.controls['adminPasswordRepeat'].errors\\\">\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requireDigit\\\">{{l(\\\"PasswordComplexity_RequireDigit_Hint\\\")}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requireLowercase\\\">{{l(\\\"PasswordComplexity_RequireLowercase_Hint\\\")}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requireUppercase\\\">{{l(\\\"PasswordComplexity_RequireUppercase_Hint\\\")}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requireNonAlphanumeric\\\">{{l(\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\")}}</li>\\r\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requiredLength\\\">{{l(\\\"PasswordComplexity_RequiredLength_Hint\\\", passwordComplexitySetting.requiredLength)}}</li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <select id=\\\"edition\\\" name=\\\"edition\\\" class=\\\"form-control edited\\\" [(ngModel)]=\\\"tenant.editionId\\\" (change)=\\\"onEditionChange($event)\\\">\\r\\n                            <option *ngFor=\\\"let edition of editions\\\" [value]=\\\"edition.value\\\">{{edition.displayText}}</option>\\r\\n                        </select>\\r\\n                        <label for=\\\"edition\\\">{{l(\\\"Edition\\\")}}</label>\\r\\n                    </div>\\r\\n                    <div [hidden]=\\\"!isSubscriptionFieldsVisible\\\" class=\\\"md-checkbox-list\\\">\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_IsUnlimited\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsUnlimited\\\" [(ngModel)]=\\\"isUnlimited\\\" />\\r\\n                            <label for=\\\"CreateTenant_IsUnlimited\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"UnlimitedTimeSubscription\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div [hidden]=\\\"isUnlimited || !isSubscriptionFieldsVisible\\\" class=\\\"form-group form-md-line-input form-md-floating-label\\\" [ngClass]=\\\"{'has-error': !subscriptionEndDateIsValid()}\\\">\\r\\n                        <input type=\\\"text\\\" #SubscriptionEndDateUtc name=\\\"SubscriptionEndDateUtc\\\" class=\\\"form-control\\\">\\r\\n                        <label>{{l(\\\"SubscriptionEndDate\\\")}}</label>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div [hidden]=\\\"!isSubscriptionFieldsVisible\\\" class=\\\"md-checkbox-list\\\">\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_IsInTrialPeriod\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsInTrialPeriod\\\" [disabled]=\\\"isSelectedEditionFree\\\" [(ngModel)]=\\\"tenant.isInTrialPeriod\\\">\\r\\n                            <label for=\\\"CreateTenant_IsInTrialPeriod\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"IsInTrialPeriod\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"alert alert-warning\\\" *ngIf=\\\"isSelectedEditionFree\\\">\\r\\n                            {{l(\\\"FreeEditionsCannotHaveTrialVersions\\\")}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"md-checkbox-list\\\">\\r\\n\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_ShouldChangePasswordOnNextLogin\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"ShouldChangePasswordOnNextLogin\\\" [(ngModel)]=\\\"tenant.shouldChangePasswordOnNextLogin\\\">\\r\\n                            <label for=\\\"CreateTenant_ShouldChangePasswordOnNextLogin\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"ShouldChangePasswordOnNextLogin\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_SendActivationEmail\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"SendActivationEmail\\\" [(ngModel)]=\\\"tenant.sendActivationEmail\\\">\\r\\n                            <label for=\\\"CreateTenant_SendActivationEmail\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"SendActivationEmail\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_IsActive\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsActive\\\" [(ngModel)]=\\\"tenant.isActive\\\">\\r\\n                            <label for=\\\"CreateTenant_IsActive\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"Active\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" [disabled]=\\\"saving\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!tenantCreateForm.form.valid || saving || !subscriptionEndDateIsValid()\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/create-tenant-modal.component.html\n// module id = ../../../../../src/app/admin/tenants/create-tenant-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { TenantServiceProxy, ProfileServiceProxy, CreateTenantInput, CommonLookupServiceProxy, PasswordComplexitySetting } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\nimport * as moment from 'moment';\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'createTenantModal',\r\n    templateUrl: './create-tenant-modal.component.html'\r\n})\r\nexport class CreateTenantModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('tenancyNameInput') tenancyNameInput: ElementRef;\r\n    @ViewChild('createModal') modal: ModalDirective;\r\n    @ViewChild('SubscriptionEndDateUtc') subscriptionEndDateUtc: ElementRef;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active: boolean = false;\r\n    saving: boolean = false;\r\n    setRandomPassword: boolean = true;\r\n    useHostDb: boolean = true;\r\n    editions = [];\r\n    tenant: CreateTenantInput;\r\n    passwordComplexitySetting: PasswordComplexitySetting = new PasswordComplexitySetting();\r\n    isUnlimited: boolean = false;\r\n    isSubscriptionFieldsVisible: boolean = false;\r\n    isSelectedEditionFree = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _tenantService: TenantServiceProxy,\r\n        private _commonLookupService: CommonLookupServiceProxy,\r\n        private _profileService: ProfileServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show() {\r\n        this.active = true;\r\n        this.init();\r\n\r\n        this._profileService.getPasswordComplexitySetting().subscribe(result => {\r\n            this.passwordComplexitySetting = result.setting;\r\n            this.modal.show();\r\n        });\r\n    }\r\n\r\n    onShown(): void {\r\n        $(this.tenancyNameInput.nativeElement).focus();\r\n        $(this.subscriptionEndDateUtc.nativeElement).datetimepicker({\r\n            locale: abp.localization.currentLanguage.name,\r\n            format: 'L'\r\n        });\r\n    }\r\n\r\n    init(): void {\r\n        this.tenant = new CreateTenantInput();\r\n        this.tenant.isActive = true;\r\n        this.tenant.shouldChangePasswordOnNextLogin = true;\r\n        this.tenant.sendActivationEmail = true;\r\n        this.tenant.editionId = 0;\r\n        this.tenant.isInTrialPeriod = false;\r\n\r\n        this._commonLookupService.getEditionsForCombobox(false)\r\n            .subscribe((result) => {\r\n                this.editions = result.items;\r\n                this.editions.unshift({ value: 0, displayText: this.l('NotAssigned') });\r\n\r\n                this._commonLookupService.getDefaultEditionName().subscribe((getDefaultEditionResult) => {\r\n                    var defaultEdition = _.filter(this.editions, { displayText: getDefaultEditionResult.name });\r\n                    if (defaultEdition && defaultEdition[0]) {\r\n                        this.tenant.editionId = parseInt(defaultEdition[0].value);\r\n                        this.toggleSubscriptionFields();\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    getEditionValue(item): number {\r\n        return parseInt(item.value);\r\n    }\r\n\r\n    selectedEditionIsFree(): boolean {\r\n        var selectedEditions = _.filter(this.editions, { value: this.tenant.editionId });\r\n        if (selectedEditions.length !== 1) {\r\n            this.isSelectedEditionFree = true;\r\n        }\r\n\r\n        var selectedEdition = selectedEditions[0];\r\n        this.isSelectedEditionFree = selectedEdition.isFree;\r\n        return this.isSelectedEditionFree;\r\n    }\r\n\r\n    subscriptionEndDateIsValid(): boolean {\r\n        if (this.tenant.editionId <= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (this.isUnlimited) {\r\n            return true;\r\n        }\r\n\r\n        if (!this.subscriptionEndDateUtc) {\r\n            return false;\r\n        }\r\n\r\n        var subscriptionEndDateUtc = $(this.subscriptionEndDateUtc.nativeElement).val();\r\n        return subscriptionEndDateUtc != undefined && subscriptionEndDateUtc !== '';\r\n    }\r\n\r\n    save(): void {\r\n        this.saving = true;\r\n\r\n        if (this.setRandomPassword) {\r\n            this.tenant.adminPassword = null;\r\n        }\r\n\r\n        if (this.tenant.editionId == 0) {\r\n            this.tenant.editionId = null;\r\n        }\r\n\r\n        //take selected date as UTC\r\n        if (!this.isUnlimited && this.tenant.editionId > 0) {\r\n            this.tenant.subscriptionEndDateUtc = moment($(this.subscriptionEndDateUtc.nativeElement).data(\"DateTimePicker\").date().format(\"YYYY-MM-DDTHH:mm:ss\") + 'Z');\r\n        } else {\r\n            this.tenant.subscriptionEndDateUtc = null;\r\n        }\r\n\r\n        this._tenantService.createTenant(this.tenant)\r\n            .finally(() => this.saving = false)\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n\r\n    onEditionChange(): void {\r\n        this.tenant.isInTrialPeriod = this.tenant.editionId > 0 && !this.selectedEditionIsFree();\r\n        this.toggleSubscriptionFields();\r\n    }\r\n\r\n    toggleSubscriptionFields() {\r\n        if (this.tenant.editionId > 0) {\r\n            this.isSubscriptionFieldsVisible = true;\r\n        } else {\r\n            this.isSubscriptionFieldsVisible = false;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/create-tenant-modal.component.ts","module.exports = \"<div bsModal #editModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <form #tenantEditForm=\\\"ngForm\\\" role=\\\"form\\\" novalidate class=\\\"form-validation\\\" (submit)=\\\"save()\\\" *ngIf=\\\"tenant && active\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span>{{l(\\\"EditTenant\\\")}}: {{tenant.tenancyName}}</span>\\r\\n                    </h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                        <input #nameInput type=\\\"text\\\" name=\\\"Name\\\" class=\\\"form-control input-ltr\\\" [ngClass]=\\\"{'edited':tenant.name}\\\" [(ngModel)]=\\\"tenant.name\\\" required maxlength=\\\"128\\\">\\r\\n                        <label>{{l(\\\"Name\\\")}}</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" *ngIf=\\\"currentConnectionString\\\">\\r\\n                        <input type=\\\"text\\\" name=\\\"ConnectionString\\\" class=\\\"form-control edited\\\" [(ngModel)]=\\\"tenant.connectionString\\\" required maxlength=\\\"1024\\\">\\r\\n                        <label>{{l(\\\"DatabaseConnectionString\\\")}}</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"currentConnectionString\\\">\\r\\n                        <span class=\\\"help-block text-warning\\\">{{l(\\\"TenantDatabaseConnectionStringChangeWarningMessage\\\")}}</span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label has-info\\\">\\r\\n                        <select id=\\\"edition\\\" name=\\\"edition\\\" class=\\\"form-control edited\\\" [(ngModel)]=\\\"tenant.editionId\\\" (change)=\\\"onEditionChange($event)\\\">\\r\\n                            <option *ngFor=\\\"let edition of editions\\\" [value]=\\\"edition.value\\\">{{edition.displayText}}</option>\\r\\n                        </select>\\r\\n                        <label for=\\\"edition\\\">{{l(\\\"Edition\\\")}}</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"!isSubscriptionFieldsVisible\\\" class=\\\"md-checkbox-list\\\">\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_IsUnlimited\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsUnlimited\\\" [(ngModel)]=\\\"isUnlimited\\\" (ngModelChange)=\\\"onUnlimitedChange()\\\"/>\\r\\n                            <label for=\\\"CreateTenant_IsUnlimited\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"UnlimitedTimeSubscription\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div [hidden]=\\\"isUnlimited || !isSubscriptionFieldsVisible\\\" class=\\\"form-group form-md-line-input form-md-floating-label\\\" [ngClass]=\\\"{'has-error': !subscriptionEndDateUtcIsValid }\\\">\\r\\n                        <input type=\\\"datetime\\\" #SubscriptionEndDateUtc name=\\\"SubscriptionEndDateUtc\\\" class=\\\"form-control\\\"\\r\\n                               [ngClass]=\\\"{'edited':tenant.subscriptionEndDateUtc}\\\"\\r\\n                               [value]=\\\"formatSubscriptionEndDate(tenant.subscriptionEndDateUtc)\\\"\\r\\n                               [required]=\\\"!isUnlimited\\\">\\r\\n                        <label>{{l(\\\"SubscriptionEndDateUtc\\\")}}</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div [hidden]=\\\"!isSubscriptionFieldsVisible\\\" class=\\\"md-checkbox-list\\\">\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"CreateTenant_IsInTrialPeriod\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsInTrialPeriod\\\" [disabled]=\\\"selectedEditionIsFree()\\\" [(ngModel)]=\\\"tenant.isInTrialPeriod\\\">\\r\\n                            <label for=\\\"CreateTenant_IsInTrialPeriod\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"IsInTrialPeriod\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"alert alert-warning\\\" *ngIf=\\\"selectedEditionIsFree()\\\">\\r\\n                            {{l(\\\"FreeEditionsCannotHaveTrialVersions\\\")}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"md-checkbox-list\\\">\\r\\n\\r\\n                        <div class=\\\"md-checkbox\\\">\\r\\n                            <input id=\\\"EditTenant_IsActive\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsActive\\\" [(ngModel)]=\\\"tenant.isActive\\\">\\r\\n                            <label for=\\\"EditTenant_IsActive\\\">\\r\\n                                <span class=\\\"inc\\\"></span>\\r\\n                                <span class=\\\"check\\\"></span>\\r\\n                                <span class=\\\"box\\\"></span>\\r\\n                                {{l(\\\"Active\\\")}}\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" [disabled]=\\\"saving\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!tenantEditForm.form.valid || saving || !subscriptionEndDateUtcIsValid\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/edit-tenant-modal.component.html\n// module id = ../../../../../src/app/admin/tenants/edit-tenant-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { TenantServiceProxy, CommonLookupServiceProxy, TenantEditDto, SubscribableEditionComboboxItemDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\n\r\nimport * as moment from \"moment\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'editTenantModal',\r\n    templateUrl: './edit-tenant-modal.component.html'\r\n})\r\nexport class EditTenantModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('nameInput') nameInput: ElementRef;\r\n    @ViewChild('editModal') modal: ModalDirective;\r\n    @ViewChild('SubscriptionEndDateUtc') subscriptionEndDateUtc: ElementRef;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active: boolean = false;\r\n    saving: boolean = false;\r\n    isUnlimited: boolean = false;\r\n    subscriptionEndDateUtcIsValid: boolean = false;\r\n\r\n    tenant: TenantEditDto = undefined;\r\n    currentConnectionString: string;\r\n    editions: SubscribableEditionComboboxItemDto[] = [];\r\n    isSubscriptionFieldsVisible: boolean = false;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _tenantService: TenantServiceProxy,\r\n        private _commonLookupService: CommonLookupServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(tenantId: number): void {\r\n        this.active = true;\r\n\r\n        this._commonLookupService.getEditionsForCombobox(false).subscribe(result => {\r\n            this.editions = result.items;\r\n            var notSelectedEdition = new SubscribableEditionComboboxItemDto();\r\n            notSelectedEdition.displayText = this.l('NotAssigned');\r\n            notSelectedEdition.value = \"0\";\r\n            this.editions.unshift(notSelectedEdition);\r\n\r\n            this._tenantService.getTenantForEdit(tenantId).subscribe((result) => {\r\n                this.tenant = result;\r\n                this.currentConnectionString = result.connectionString;\r\n                this.tenant.editionId = this.tenant.editionId || 0;\r\n                this.isUnlimited = !this.tenant.subscriptionEndDateUtc;\r\n                this.subscriptionEndDateUtcIsValid = this.isUnlimited || this.tenant.subscriptionEndDateUtc !== undefined;\r\n                this.modal.show();\r\n                this.toggleSubscriptionFields();\r\n            });\r\n        });\r\n    }\r\n\r\n    onShown(): void {\r\n        $(this.nameInput.nativeElement).focus();\r\n        $(this.subscriptionEndDateUtc.nativeElement).datetimepicker({\r\n            locale: abp.localization.currentLanguage.name,\r\n            format: 'L',\r\n            defaultDate: this.tenant.subscriptionEndDateUtc,\r\n        }).on(\"dp.change\", (e) => {\r\n            this.subscriptionEndDateUtcIsValid = e.date !== '';\r\n        });\r\n    }\r\n\r\n    formatSubscriptionEndDate(date: any): string {\r\n        if (this.isUnlimited) {\r\n            return '';\r\n        }\r\n      \r\n        if (!this.tenant.editionId) {\r\n            return '';\r\n        }\r\n\r\n        if (!date) {\r\n            return '';\r\n        }\r\n\r\n        return moment(date).format('L');\r\n    }\r\n\r\n    selectedEditionIsFree(): boolean {\r\n        if (!this.tenant.editionId) {\r\n            return true;\r\n        }\r\n\r\n        var selectedEditions = _.filter(this.editions, { value: this.tenant.editionId + \"\" });\r\n        if (selectedEditions.length !== 1) {\r\n            return true;\r\n        }\r\n\r\n        var selectedEdition = selectedEditions[0];\r\n        return selectedEdition.isFree;\r\n    }\r\n\r\n    save(): void {\r\n        this.saving = true;\r\n        if (this.tenant.editionId == 0) {\r\n            this.tenant.editionId = null;\r\n        }\r\n\r\n        //take selected date as UTC\r\n        if (!this.isUnlimited && this.tenant.editionId) {\r\n            var date = $(this.subscriptionEndDateUtc.nativeElement).data(\"DateTimePicker\").date();\r\n            if (!date) {\r\n                date = this.tenant.subscriptionEndDateUtc;\r\n            }\r\n\r\n            this.tenant.subscriptionEndDateUtc = moment(date.format(\"YYYY-MM-DDTHH:mm:ss\") + 'Z');\r\n        } else {\r\n            this.tenant.subscriptionEndDateUtc = null;\r\n        }\r\n\r\n        this._tenantService.updateTenant(this.tenant)\r\n            .finally(() => this.saving = false)\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n\r\n    onEditionChange(): void {\r\n        if (this.selectedEditionIsFree()) {\r\n            this.tenant.isInTrialPeriod = false;\r\n        }\r\n\r\n        this.toggleSubscriptionFields();\r\n    }\r\n\r\n    onUnlimitedChange(): void {\r\n        if (this.isUnlimited) {\r\n            $(this.subscriptionEndDateUtc.nativeElement).data(\"DateTimePicker\").clear();\r\n            this.tenant.subscriptionEndDateUtc = null;\r\n            this.subscriptionEndDateUtcIsValid = true;\r\n        } else {\r\n            var date = $(this.subscriptionEndDateUtc.nativeElement).data(\"DateTimePicker\").date();\r\n            if (!date) {\r\n                this.subscriptionEndDateUtcIsValid = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleSubscriptionFields() {\r\n        if (this.tenant.editionId > 0) {\r\n            this.isSubscriptionFieldsVisible = true;\r\n        } else {\r\n            this.isSubscriptionFieldsVisible = false;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/edit-tenant-modal.component.ts","module.exports = \"<div bsModal #tenantFeaturesModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"tenantFeaturesModal\\\"\\r\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n        <div class=\\\"modal-content\\\">\\r\\n\\r\\n            <form #editTenantFeaturesForm=\\\"ngForm\\\" name=\\\"editTenantFeaturesForm\\\" role=\\\"form\\\" novalidate class=\\\"form-validation\\\" (submit)=\\\"save()\\\" *ngIf=\\\"active\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">\\r\\n                        <span>{{l(\\\"Features\\\")}} - {{tenantName}}</span>\\r\\n                    </h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <feature-tree #featureTree></feature-tree>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" [disabled]=\\\"saving\\\" [buttonBusy]=\\\"resettingFeatures\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" class=\\\"btn btn-default pull-left\\\" (click)=\\\"resetFeatures()\\\" [tooltipHtml]=\\\"l('ResetFeaturesTooltip')\\\" placement=\\\"top\\\"><span>{{l(\\\"ResetSpecialFeatures\\\")}}</span></button>\\r\\n                    <button type=\\\"button\\\" [disabled]=\\\"saving || resettingFeatures\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n                    <button type=\\\"submit\\\" [disabled]=\\\"resettingFeatures\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n                </div>\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/tenant-features-modal.component.html\n// module id = ../../../../../src/app/admin/tenants/tenant-features-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { TenantServiceProxy, UpdateTenantFeaturesInput, TenantEditDto, EntityDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { FeatureTreeComponent } from '../shared/feature-tree.component';\r\n\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'tenantFeaturesModal',\r\n    templateUrl: './tenant-features-modal.component.html'\r\n})\r\nexport class TenantFeaturesModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('tenantFeaturesModal') modal: ModalDirective;\r\n    @ViewChild('featureTree') featureTree: FeatureTreeComponent;\r\n\r\n    active: boolean = false;\r\n    saving: boolean = false;\r\n\r\n    resettingFeatures: boolean = false;\r\n    tenantId: number;\r\n    tenantName: string;\r\n    featureEditData: any = null;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _tenantService: TenantServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(tenantId: number, tenantName: string): void {\r\n        this.tenantId = tenantId;\r\n        this.tenantName = tenantName;\r\n        this.active = true;\r\n        this.loadFeatures();\r\n        this.modal.show();\r\n    }\r\n\r\n    loadFeatures(): void {\r\n        let self = this;\r\n        self._tenantService.getTenantFeaturesForEdit(this.tenantId).subscribe((result) => {\r\n            self.featureTree.editData = result;\r\n        });\r\n    }\r\n\r\n    save(): void {\r\n        if (!this.featureTree.areAllValuesValid()) {\r\n            this.message.warn(this.l('InvalidFeaturesWarning'));\r\n            return;\r\n        }\r\n\r\n        \r\n        let input = new UpdateTenantFeaturesInput();\r\n        input.id = this.tenantId;\r\n        input.featureValues = this.featureTree.getGrantedFeatures();\r\n\r\n        this.saving = true;\r\n        this._tenantService.updateTenantFeatures(input)\r\n            .finally(() => this.saving = false)\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n            });\r\n    }\r\n\r\n    resetFeatures(): void {\r\n        var input = new EntityDto();\r\n        input.id = this.tenantId;\r\n\r\n        this.resettingFeatures = true;\r\n        this._tenantService.resetTenantSpecificFeatures(input)\r\n            .finally(() => this.resettingFeatures = false)\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('ResetSuccessfully'));\r\n                this.loadFeatures();\r\n            });\r\n    };\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/tenant-features-modal.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{l(\\\"Tenants\\\")}}</span> <small>{{l(\\\"TenantsHeaderInfo\\\")}}</small>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 text-right\\\">\\r\\n            <button ng-if=\\\"vm.permissions.create\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"createTenant()\\\"><i class=\\\"fa fa-plus\\\"></i>{{l(\\\"CreateNewTenant\\\")}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet light margin-bottom-0\\\">\\r\\n        <div class=\\\"portlet-title portlet-title-filter\\\">\\r\\n            <div class=\\\"inputs inputs-full-width\\\">\\r\\n                <div class=\\\"portlet-input\\\">\\r\\n                    <form (submit)=\\\"getTenants()\\\" autocomplete=\\\"off\\\">\\r\\n                        <div class=\\\"form-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"TenantsTableFilter\\\">{{l('TenantNameOrTenancyCode')}}</label>\\r\\n                                        <div class=\\\"input-group\\\">\\r\\n                                            <input [(ngModel)]=\\\"filters.filterText\\\" name=\\\"filterText\\\" class=\\\"form-control\\\" placeholder=\\\"{{l('SearchWithThreeDot')}}\\\" type=\\\"text\\\">\\r\\n                                            <span class=\\\"input-group-btn\\\">\\r\\n                                                <button class=\\\"btn default\\\" type=\\\"submit\\\"><i class=\\\"icon-magnifier\\\"></i></button>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <label for=\\\"EditionDropdown\\\">{{l('Edition')}}</label>\\r\\n                                    <edition-combo [(selectedEdition)]=\\\"filters.selectedEditionId\\\"></edition-combo>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div class=\\\"md-checkbox-list\\\">\\r\\n                                            <div class=\\\"md-checkbox\\\">\\r\\n\\r\\n                                                <input class=\\\"md-check\\\"\\r\\n                                                       type=\\\"checkbox\\\"\\r\\n                                                       [(ngModel)]=\\\"filters.subscriptionEndDateRangeActive\\\"\\r\\n                                                       id=\\\"TenantsTable_SubscriptionEndDateRangeActive\\\"\\r\\n                                                       name=\\\"SubscriptionEndDateRangeActive\\\"\\r\\n                                                       value=\\\"true\\\">\\r\\n\\r\\n                                                <label for=\\\"TenantsTable_SubscriptionEndDateRangeActive\\\">\\r\\n                                                    <span class=\\\"inc\\\"></span>\\r\\n                                                    <span class=\\\"check\\\"></span>\\r\\n                                                    <span class=\\\"box\\\"></span>\\r\\n                                                    {{l('SubscriptionEndDate')}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                        <date-range-picker name=\\\"SubscriptionEndDateRange\\\"\\r\\n                                                           [isDisabled]=\\\"!filters.subscriptionEndDateRangeActive\\\"\\r\\n                                                           [(startDate)]=\\\"filters.subscriptionEndDateStart\\\"\\r\\n                                                           [(endDate)]=\\\"filters.subscriptionEndDateEnd\\\"\\r\\n                                                           [allowFutureDate]=\\\"true\\\">\\r\\n                                        </date-range-picker>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <div class=\\\"md-checkbox-list\\\">\\r\\n                                            <div class=\\\"md-checkbox\\\">\\r\\n                                                <input class=\\\"md-check\\\"\\r\\n                                                       type=\\\"checkbox\\\"\\r\\n                                                       [(ngModel)]=\\\"filters.creationDateRangeActive\\\"\\r\\n                                                       id=\\\"TenantsTable_CreationDateRangeActive\\\"\\r\\n                                                       name=\\\"CreationDateRangeActive\\\"\\r\\n                                                       value=\\\"true\\\">\\r\\n\\r\\n                                                <label for=\\\"TenantsTable_CreationDateRangeActive\\\">\\r\\n                                                    <span class=\\\"inc\\\"></span>\\r\\n                                                    <span class=\\\"check\\\"></span>\\r\\n                                                    <span class=\\\"box\\\"></span>\\r\\n                                                    {{l('CreationTime')}}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                        <date-range-picker name=\\\"CreationDateRange\\\"\\r\\n                                                           [isDisabled]=\\\"!filters.creationDateRangeActive\\\"\\r\\n                                                           [(startDate)]=\\\"filters.creationDateStart\\\"\\r\\n                                                           [(endDate)]=\\\"filters.creationDateEnd\\\"\\r\\n                                                           [allowFutureDate]=\\\"false\\\">\\r\\n                                        </date-range-picker>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-actions\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12 text-right\\\">\\r\\n                                    <button name=\\\"RefreshButton\\\" class=\\\"btn blue\\\"><i class=\\\"fa fa-refresh\\\"></i> {{l('Refresh')}}</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"portlet-body\\\">\\r\\n            <!--<Primeng-Datatable-Start>-->\\r\\n            <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengDatatableHelper.isLoading\\\">\\r\\n                <p-dataTable #dataTable\\r\\n                             (onLazyLoad)=\\\"getTenants($event)\\\"\\r\\n                             [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                             rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                             [paginator]=\\\"false\\\"\\r\\n                             [lazy]=\\\"true\\\"\\r\\n                             emptyMessage=\\\"{{l('NoData')}}\\\"\\r\\n                             [responsive]=\\\"primengDatatableHelper.isResponsive\\\">\\r\\n\\r\\n                    <p-column field=\\\"\\\" [sortable]=\\\"false\\\" header=\\\"{{l('Actions')}}\\\" [style]=\\\"{'width':'10%','text-align':'center'}\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <div class=\\\"btn-group dropdown\\\">\\r\\n                                <button class=\\\"dropdown-toggle btn btn-xs btn-primary blue\\\"\\r\\n                                        data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\"\\r\\n                                        aria-expanded=\\\"false\\\">\\r\\n                                    <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span>\\r\\n                                </button>\\r\\n                                <ul class=\\\"dropdown-menu\\\">\\r\\n                                    <li [class.disabled]=\\\"!record.isActive\\\">\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Tenants.Impersonation')\\\"\\r\\n                                           (click)=\\\"record.isActive && showUserImpersonateLookUpModal(record)\\\">{{l('LoginAsThisTenant')}}</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Tenants.Edit')\\\"\\r\\n                                           (click)=\\\"editTenantModal.show(record.id)\\\">{{l('Edit')}}</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Tenants.ChangeFeatures')\\\"\\r\\n                                           (click)=\\\"tenantFeaturesModal.show(record.id, record.name)\\\">{{l('Features')}}</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Tenants.Delete')\\\"\\r\\n                                           (click)=\\\"deleteTenant(record)\\\">{{l('Delete')}}</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a (click)=\\\"unlockUser(record)\\\">{{l('Unlock')}}</a>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"tenancyName\\\" header=\\\"{{l('TenancyCodeName')}}\\\" [sortable]=\\\"true\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <i *ngIf=\\\"record.connectionString\\\" class=\\\"fa fa-database\\\" title=\\\"{{l('HasOwnDatabase')}}\\\"></i>\\r\\n                            {{record.tenancyName}}\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"name\\\" header=\\\"{{l('Name')}}\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                    <p-column field=\\\"editionDisplayName\\\" header=\\\"{{l('Edition')}}\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                    <p-column field=\\\"subscriptionEndDateUtc\\\" header=\\\"{{l('SubscriptionEndDateUtc')}}\\\" [sortable]=\\\"true\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            {{ record.subscriptionEndDateUtc ? (record.subscriptionEndDateUtc | momentFormat:'L') : '-'}}\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"isActive\\\" header=\\\"{{l('Active')}}\\\" [sortable]=\\\"true\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <span *ngIf=\\\"record.isActive\\\" class=\\\"label label-success\\\">{{l('Yes')}}</span>\\r\\n                            <span *ngIf=\\\"!record.isActive\\\" class=\\\"label label-default\\\">{{l('No')}}</span>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"creationTime\\\" header=\\\"{{l('CreationTime')}}\\\" [sortable]=\\\"true\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            {{record.creationTime | momentFormat:'L'}}\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                </p-dataTable>\\r\\n                <div class=\\\"primeng-paging-container\\\">\\r\\n                    <p-paginator rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                 #paginator\\r\\n                                 (onPageChange)=\\\"getTenants($event)\\\"\\r\\n                                 [totalRecords]=\\\"primengDatatableHelper.totalRecordsCount\\\"\\r\\n                                 [rowsPerPageOptions]=\\\"primengDatatableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                    </p-paginator>\\r\\n                    <span class=\\\"total-records-count\\\">\\r\\n                        {{l('TotalRecordsCount', primengDatatableHelper.totalRecordsCount)}}\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--<Primeng-Datatable-End>-->\\r\\n        </div>\\r\\n    </div>\\r\\n    <createTenantModal #createTenantModal (modalSave)=\\\"getTenants()\\\"></createTenantModal>\\r\\n    <editTenantModal #editTenantModal (modalSave)=\\\"getTenants()\\\"></editTenantModal>\\r\\n    <tenantFeaturesModal #tenantFeaturesModal></tenantFeaturesModal>\\r\\n    <commonLookupModal #impersonateUserLookupModal (itemSelected)=\\\"impersonateUser($event)\\\"></commonLookupModal>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/tenants.component.html\n// module id = ../../../../../src/app/admin/tenants/tenants.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TenantServiceProxy, TenantListDto, NameValueDto, CommonLookupServiceProxy, FindUsersInput, EntityDtoOfInt64 } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { CreateTenantModalComponent } from './create-tenant-modal.component';\r\nimport { EditTenantModalComponent } from './edit-tenant-modal.component';\r\nimport { TenantFeaturesModalComponent } from './tenant-features-modal.component'\r\nimport { CommonLookupModalComponent } from '@app/shared/common/lookup/common-lookup-modal.component';\r\nimport { ImpersonationService } from '@app/admin/users/impersonation.service';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport * as moment from \"moment\";\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\n\r\n@Component({\r\n    templateUrl: \"./tenants.component.html\",\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class TenantsComponent extends AppComponentBase implements OnInit {\r\n\r\n    @ViewChild('impersonateUserLookupModal') impersonateUserLookupModal: CommonLookupModalComponent;\r\n    @ViewChild('createTenantModal') createTenantModal: CreateTenantModalComponent;\r\n    @ViewChild('editTenantModal') editTenantModal: EditTenantModalComponent;\r\n    @ViewChild('tenantFeaturesModal') tenantFeaturesModal: TenantFeaturesModalComponent;\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    private _$tenantsTable: JQuery;\r\n    filters: {\r\n        filterText: string;\r\n        creationDateRangeActive: boolean;\r\n        subscriptionEndDateRangeActive: boolean;\r\n        subscriptionEndDateStart: moment.Moment;\r\n        subscriptionEndDateEnd: moment.Moment;\r\n        creationDateStart: moment.Moment;\r\n        creationDateEnd: moment.Moment;\r\n        selectedEditionId: number;\r\n    } = <any>{};\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _tenantService: TenantServiceProxy,\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _commonLookupService: CommonLookupServiceProxy,\r\n        private _impersonationService: ImpersonationService\r\n    ) {\r\n        super(injector);\r\n        this.setFiltersFromRoute();\r\n    }\r\n\r\n    setFiltersFromRoute(): void {\r\n        if (this._activatedRoute.snapshot.queryParams['subscriptionEndDateStart'] != null) {\r\n            this.filters.subscriptionEndDateRangeActive = true;\r\n            this.filters.subscriptionEndDateStart = moment(this._activatedRoute.snapshot.queryParams['subscriptionEndDateStart']);\r\n        } else {\r\n            this.filters.subscriptionEndDateStart = moment().startOf('day');\r\n        }\r\n\r\n        if (this._activatedRoute.snapshot.queryParams['subscriptionEndDateEnd'] != null) {\r\n            this.filters.subscriptionEndDateRangeActive = true;\r\n            this.filters.subscriptionEndDateEnd = moment(this._activatedRoute.snapshot.queryParams['subscriptionEndDateEnd']);\r\n        } else {\r\n            this.filters.subscriptionEndDateEnd = moment().add(30, 'days').endOf('day');\r\n        }\r\n\r\n        if (this._activatedRoute.snapshot.queryParams['creationDateStart'] != null) {\r\n            this.filters.creationDateRangeActive = true;\r\n            this.filters.creationDateStart = moment(this._activatedRoute.snapshot.queryParams['creationDateStart']);\r\n        } else {\r\n            this.filters.creationDateStart = moment().add(-7, 'days').startOf('day')\r\n        }\r\n\r\n        if (this._activatedRoute.snapshot.queryParams['creationDateEnd'] != null) {\r\n            this.filters.creationDateRangeActive = true;\r\n            this.filters.creationDateEnd = moment(this._activatedRoute.snapshot.queryParams['creationDateEnd']);\r\n        } else {\r\n            this.filters.creationDateEnd = moment().endOf(\"day\");\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.filters.filterText = this._activatedRoute.snapshot.queryParams['filterText'] || '';\r\n\r\n        this.impersonateUserLookupModal.configure({\r\n            title: this.l('SelectAUser'),\r\n            dataSource: (skipCount: number, maxResultCount: number, filter: string, tenantId?: number) => {\r\n                var input = new FindUsersInput();\r\n                input.filter = filter;\r\n                input.maxResultCount = maxResultCount;\r\n                input.skipCount = skipCount;\r\n                input.tenantId = tenantId;\r\n                return this._commonLookupService.findUsers(input);\r\n            }\r\n        });\r\n    }\r\n\r\n    getTenants(event?: LazyLoadEvent) {\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n\r\n        this._tenantService.getTenants(\r\n            this.filters.filterText,\r\n            this.filters.subscriptionEndDateRangeActive ? this.filters.subscriptionEndDateStart : undefined,\r\n            this.filters.subscriptionEndDateRangeActive ? this.filters.subscriptionEndDateEnd : undefined,\r\n            this.filters.creationDateRangeActive ? this.filters.creationDateStart : undefined,\r\n            this.filters.creationDateRangeActive ? this.filters.creationDateEnd : undefined,\r\n            this.filters.selectedEditionId,\r\n            this.filters.selectedEditionId !== undefined && (this.filters.selectedEditionId + \"\") !== \"-1\",\r\n            this.primengDatatableHelper.getSorting(this.dataTable),\r\n            this.primengDatatableHelper.getMaxResultCount(this.paginator, event),\r\n            this.primengDatatableHelper.getSkipCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengDatatableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengDatatableHelper.records = result.items;\r\n            this.primengDatatableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    showUserImpersonateLookUpModal(record: any): void {\r\n        this.impersonateUserLookupModal.tenantId = record.id;\r\n        this.impersonateUserLookupModal.show();\r\n    }\r\n\r\n    unlockUser(record: any): void {\r\n        this._tenantService.unlockTenantAdmin(new EntityDtoOfInt64({ id: record.id })).subscribe(() => {\r\n            this.notify.success(this.l('UnlockedTenandAdmin', record.name));\r\n        });\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n\r\n    createTenant(): void {\r\n        this.createTenantModal.show();\r\n    };\r\n\r\n    deleteTenant(tenant: TenantListDto): void {\r\n        this.message.confirm(\r\n            this.l('TenantDeleteWarningMessage', tenant.tenancyName),\r\n            isConfirmed => {\r\n                if (isConfirmed) {\r\n                    this._tenantService.deleteTenant(tenant.id).subscribe(() => {\r\n                        this.reloadPage();\r\n                        this.notify.success(this.l('SuccessfullyDeleted'));\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    impersonateUser(item: NameValueDto): void {\r\n        this._impersonationService\r\n            .impersonate(\r\n            parseInt(item.value),\r\n            this.impersonateUserLookupModal.tenantId\r\n            );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/tenants/tenants.component.ts","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n\\r\\n    <div class=\\\"modal-content\\\">\\r\\n\\r\\n      <form *ngIf=\\\"active\\\" #userForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\r\\n\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\">\\r\\n            <span *ngIf=\\\"user.id\\\">{{l(\\\"EditUser\\\")}}: {{user.userName}}</span>\\r\\n            <span *ngIf=\\\"!user.id\\\">{{l(\\\"CreateNewUser\\\")}}</span>\\r\\n          </h4>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <tabset class=\\\"tab-container tabbable-line\\\">\\r\\n            <tab heading=\\\"{{l('UserInformations')}}\\\">\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4 text-center\\\">\\r\\n                  <img src=\\\"{{profilePicture}}\\\" width=\\\"128\\\" height=\\\"128\\\" class=\\\"img-thumbnail img-rounded user-edit-dialog-profile-image\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                  <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                    <input #nameInput class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Name\\\" [ngClass]=\\\"{'edited':user.name}\\\" [(ngModel)]=\\\"user.name\\\" required maxlength=\\\"32\\\">\\r\\n                    <label>{{l(\\\"Name\\\")}}</label>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"Surname\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':user.surname}\\\" [(ngModel)]=\\\"user.surname\\\" required maxlength=\\\"32\\\">\\r\\n                    <label>{{l(\\\"Surname\\\")}}</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                <input type=\\\"email\\\" name=\\\"EmailAddress\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':user.emailAddress}\\\" [(ngModel)]=\\\"user.emailAddress\\\" required maxlength=\\\"256\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{1,})+$\\\">\\r\\n                <label>{{l(\\\"EmailAddress\\\")}}</label>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"PhoneNumber\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':user.phoneNumber}\\\" [(ngModel)]=\\\"user.phoneNumber\\\" maxlength=\\\"24\\\">\\r\\n                <label>{{l(\\\"PhoneNumber\\\")}}</label>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group form-md-line-input form-md-floating-label\\\">\\r\\n                <input type=\\\"text\\\" [disabled]=\\\"!canChangeUserName\\\" [ngClass]=\\\"{'edited':user.userName}\\\" name=\\\"UserName\\\" class=\\\"form-control input-ltr\\\" [(ngModel)]=\\\"user.userName\\\" required maxlength=\\\"32\\\">\\r\\n                <label>{{l(\\\"UserName\\\")}}</label>\\r\\n                <span class=\\\"help-block\\\" *ngIf=\\\"!canChangeUserName\\\">{{l(\\\"CanNotChangeAdminUserName\\\")}}</span>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"md-checkbox-list\\\">\\r\\n                <div class=\\\"md-checkbox\\\">\\r\\n                  <input id=\\\"EditUser_SetRandomPassword\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"SetRandomPassword\\\" [(ngModel)]=\\\"setRandomPassword\\\">\\r\\n                  <label for=\\\"EditUser_SetRandomPassword\\\">\\r\\n                    <span class=\\\"inc\\\"></span>\\r\\n                    <span class=\\\"check\\\"></span>\\r\\n                    <span class=\\\"box\\\"></span>\\r\\n                    {{l(\\\"SetRandomPassword\\\")}}\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" [hidden]=\\\"setRandomPassword\\\">\\r\\n                <div class=\\\"input-icon right\\\">\\r\\n                  <input type=\\\"password\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" id=\\\"Password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':user.password}\\\" [(ngModel)]=\\\"user.password\\\" [required]=\\\"!user.id && !setRandomPassword\\\" maxlength=\\\"32\\\"\\r\\n                         [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\r\\n                         [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\"\\r\\n                         validateEqual=\\\"PasswordRepeat\\\" reverse=\\\"true\\\">\\r\\n                  <label>{{l(\\\"Password\\\")}}</label>\\r\\n                </div>\\r\\n              </div>\\r\\n              \\r\\n              <div [hidden]=\\\"setRandomPassword || userForm.form.valid || userForm.form.pristine\\\">\\r\\n                <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"userForm.controls['Password'] && userForm.controls['Password'].errors\\\">\\r\\n                  <li [hidden]=\\\"!userForm.controls['Password'].errors.requireDigit\\\">{{l(\\\"PasswordComplexity_RequireDigit_Hint\\\")}}</li>\\r\\n                  <li [hidden]=\\\"!userForm.controls['Password'].errors.requireLowercase\\\">{{l(\\\"PasswordComplexity_RequireLowercase_Hint\\\")}}</li>\\r\\n                  <li [hidden]=\\\"!userForm.controls['Password'].errors.requireUppercase\\\">{{l(\\\"PasswordComplexity_RequireUppercase_Hint\\\")}}</li>\\r\\n                  <li [hidden]=\\\"!userForm.controls['Password'].errors.requireNonAlphanumeric\\\">{{l(\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\")}}</li>\\r\\n                  <li [hidden]=\\\"!userForm.controls['Password'].errors.requiredLength\\\">{{l(\\\"PasswordComplexity_RequiredLength_Hint\\\", passwordComplexitySetting.requiredLength)}}</li>\\r\\n                </ul>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\" *ngIf=\\\"!setRandomPassword\\\">\\r\\n                <div class=\\\"input-icon right\\\">\\r\\n                  <input type=\\\"password\\\" name=\\\"PasswordRepeat\\\" #PasswordRepeat=\\\"ngModel\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':user.passwordRepeat}\\\" [(ngModel)]=\\\"user.passwordRepeat\\\" [required]=\\\"!user.id && !setRandomPassword\\\" maxlength=\\\"32\\\"\\r\\n                         [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\r\\n                         [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\"\\r\\n                         validateEqual=\\\"Password\\\" reverse=\\\"false\\\">\\r\\n                  <label>{{l(\\\"PasswordRepeat\\\")}}</label>\\r\\n                </div>\\r\\n              </div>\\r\\n              \\r\\n              <div [hidden]=\\\"setRandomPassword || userForm.form.valid || userForm.form.pristine\\\">\\r\\n                <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"userForm.controls['PasswordRepeat'] && userForm.controls['PasswordRepeat'].errors\\\">\\r\\n                  <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireDigit\\\">{{l(\\\"PasswordComplexity_RequireDigit_Hint\\\")}}</li>\\r\\n                  <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireLowercase\\\">{{l(\\\"PasswordComplexity_RequireLowercase_Hint\\\")}}</li>\\r\\n                  <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireUppercase\\\">{{l(\\\"PasswordComplexity_RequireUppercase_Hint\\\")}}</li>\\r\\n                  <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireNonAlphanumeric\\\">{{l(\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\")}}</li>\\r\\n                  <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requiredLength\\\">{{l(\\\"PasswordComplexity_RequiredLength_Hint\\\", passwordComplexitySetting.requiredLength)}}</li>\\r\\n                </ul>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"md-checkbox-list\\\">\\r\\n                <div class=\\\"md-checkbox\\\">\\r\\n                  <input id=\\\"EditUser_ShouldChangePasswordOnNextLogin\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"ShouldChangePasswordOnNextLogin\\\" [(ngModel)]=\\\"user.shouldChangePasswordOnNextLogin\\\">\\r\\n                  <label for=\\\"EditUser_ShouldChangePasswordOnNextLogin\\\">\\r\\n                    <span class=\\\"inc\\\"></span>\\r\\n                    <span class=\\\"check\\\"></span>\\r\\n                    <span class=\\\"box\\\"></span>\\r\\n                    {{l(\\\"ShouldChangePasswordOnNextLogin\\\")}}\\r\\n                  </label>\\r\\n                </div>\\r\\n                <div class=\\\"md-checkbox\\\">\\r\\n                  <input id=\\\"EditUser_SendActivationEmail\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"SendActivationEmail\\\" [(ngModel)]=\\\"sendActivationEmail\\\">\\r\\n                  <label for=\\\"EditUser_SendActivationEmail\\\">\\r\\n                    <span class=\\\"inc\\\"></span>\\r\\n                    <span class=\\\"check\\\"></span>\\r\\n                    <span class=\\\"box\\\"></span>\\r\\n                    {{l(\\\"SendActivationEmail\\\")}}\\r\\n                  </label>\\r\\n                </div>\\r\\n                <div class=\\\"md-checkbox\\\">\\r\\n                  <input id=\\\"EditUser_IsActive\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsActive\\\" [(ngModel)]=\\\"user.isActive\\\">\\r\\n                  <label for=\\\"EditUser_IsActive\\\">\\r\\n                    <span class=\\\"inc\\\"></span>\\r\\n                    <span class=\\\"check\\\"></span>\\r\\n                    <span class=\\\"box\\\"></span>\\r\\n                    {{l(\\\"Active\\\")}}\\r\\n                  </label>\\r\\n                </div>\\r\\n                <div class=\\\"md-checkbox\\\" *ngIf=\\\"isTwoFactorEnabled\\\">\\r\\n                  <input id=\\\"EditUser_IsTwoFactorEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsTwoFactorEnabled\\\" [(ngModel)]=\\\"user.isTwoFactorEnabled\\\">\\r\\n                  <label for=\\\"EditUser_IsTwoFactorEnabled\\\">\\r\\n                    <span class=\\\"inc\\\"></span>\\r\\n                    <span class=\\\"check\\\"></span>\\r\\n                    <span class=\\\"box\\\"></span>\\r\\n                    {{l(\\\"IsTwoFactorEnabled\\\")}}\\r\\n                  </label>\\r\\n                </div>\\r\\n                <div class=\\\"md-checkbox\\\" *ngIf=\\\"isLockoutEnabled\\\">\\r\\n                  <input id=\\\"EditUser_IsLockoutEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsLockoutEnabled\\\" [(ngModel)]=\\\"user.isLockoutEnabled\\\">\\r\\n                  <label for=\\\"EditUser_IsLockoutEnabled\\\" tooltip=\\\"{{l('IsLockoutEnabled_Hint')}}\\\">\\r\\n                    <span class=\\\"inc\\\"></span>\\r\\n                    <span class=\\\"check\\\"></span>\\r\\n                    <span class=\\\"box\\\"></span>\\r\\n                    {{l(\\\"IsLockoutEnabled\\\")}}\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </tab>\\r\\n              <tab>\\r\\n                  <ng-template tabHeading>\\r\\n                      {{l('Roles')}} <b class=\\\"badge badge-primary\\\">{{getAssignedRoleCount()}}</b>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <div class=\\\"md-checkbox-list\\\">\\r\\n                      <div class=\\\"md-checkbox\\\" *ngFor=\\\"let role of roles\\\">\\r\\n                          <input id=\\\"EditUser_{{role.roleName}}\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"{{role.roleName}}\\\" [(ngModel)]=\\\"role.isAssigned\\\">\\r\\n                          <label attr.for=\\\"EditUser_{{role.roleName}}\\\">\\r\\n                              <span class=\\\"inc\\\"></span>\\r\\n                              <span class=\\\"check\\\"></span>\\r\\n                              <span class=\\\"box\\\"></span>\\r\\n                              {{role.roleDisplayName}}\\r\\n                          </label>\\r\\n                      </div>\\r\\n                  </div>\\r\\n\\r\\n              </tab>\\r\\n              <tab>\\r\\n                  <ng-template tabHeading>\\r\\n                      {{l('OrganizationUnits')}}\\r\\n                  </ng-template>\\r\\n                  \\r\\n                  <organization-unit-tree #organizationUnitTree></organization-unit-tree>\\r\\n              </tab>\\r\\n          </tabset>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!userForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/users/create-or-edit-user-modal.component.html\n// module id = ../../../../../src/app/admin/users/create-or-edit-user-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { UserServiceProxy, ProfileServiceProxy, UserEditDto, CreateOrUpdateUserInput, OrganizationUnitDto, UserRoleDto, PasswordComplexitySetting } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { OrganizationUnitsTreeComponent, IOrganizationUnitsTreeComponentData } from '../shared/organization-unit-tree.component';\r\n\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'createOrEditUserModal',\r\n    templateUrl: './create-or-edit-user-modal.component.html',\r\n    styles: [`.user-edit-dialog-profile-image {\r\n             margin-bottom: 20px;\r\n        }`\r\n    ]\r\n})\r\nexport class CreateOrEditUserModalComponent extends AppComponentBase {\r\n    \r\n    @ViewChild('nameInput') nameInput: ElementRef;\r\n    @ViewChild('createOrEditModal') modal: ModalDirective;\r\n    @ViewChild('organizationUnitTree') organizationUnitTree: OrganizationUnitsTreeComponent;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    active: boolean = false;\r\n    saving: boolean = false;\r\n    canChangeUserName: boolean = true;\r\n    isTwoFactorEnabled: boolean = this.setting.getBoolean(\"Abp.Zero.UserManagement.TwoFactorLogin.IsEnabled\");\r\n    isLockoutEnabled: boolean = this.setting.getBoolean(\"Abp.Zero.UserManagement.UserLockOut.IsEnabled\");\r\n    passwordComplexitySetting: PasswordComplexitySetting = new PasswordComplexitySetting();\r\n\r\n    user: UserEditDto = new UserEditDto();\r\n    roles: UserRoleDto[];\r\n    sendActivationEmail: boolean = true;\r\n    setRandomPassword: boolean = true;\r\n    passwordComplexityInfo: string = '';\r\n    profilePicture: string;\r\n\r\n    allOrganizationUnits: OrganizationUnitDto[];\r\n    memberedOrganizationUnits: string[];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _userService: UserServiceProxy,\r\n        private _profileService: ProfileServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    show(userId?: number): void {\r\n        if (!userId) {\r\n            this.active = true;\r\n            this.setRandomPassword = true;\r\n            this.sendActivationEmail = true;\r\n        }\r\n\r\n        this._userService.getUserForEdit(userId).subscribe(result => {\r\n            this.user = result.user;\r\n            this.roles = result.roles;\r\n            this.canChangeUserName = this.user.userName !== AppConsts.userManagement.defaultAdminUserName;\r\n\r\n            this.allOrganizationUnits = result.allOrganizationUnits;\r\n            this.memberedOrganizationUnits = result.memberedOrganizationUnits;\r\n\r\n            this.getProfilePicture(result.profilePictureId);\r\n\r\n            if (userId) {\r\n                this.active = true;\r\n\r\n                setTimeout(() => {\r\n                    this.setRandomPassword = false;\r\n                }, 0);\r\n\r\n                this.sendActivationEmail = false;\r\n            }\r\n\r\n            this._profileService.getPasswordComplexitySetting().subscribe(result => {\r\n                this.passwordComplexitySetting = result.setting;\r\n                this.setPasswordComplexityInfo();\r\n                this.modal.show();\r\n            });\r\n        });\r\n    }\r\n\r\n    setPasswordComplexityInfo(): void {\r\n\r\n        this.passwordComplexityInfo = '<ul>';\r\n\r\n        if (this.passwordComplexitySetting.requireDigit) {\r\n            this.passwordComplexityInfo += '<li>' + this.l(\"PasswordComplexity_RequireDigit_Hint\") + '</li>';\r\n        }\r\n\r\n        if (this.passwordComplexitySetting.requireLowercase) {\r\n            this.passwordComplexityInfo += '<li>' + this.l(\"PasswordComplexity_RequireLowercase_Hint\") + '</li>';\r\n        }\r\n\r\n        if (this.passwordComplexitySetting.requireUppercase) {\r\n            this.passwordComplexityInfo += '<li>' + this.l(\"PasswordComplexity_RequireUppercase_Hint\") + '</li>';\r\n        }\r\n\r\n        if (this.passwordComplexitySetting.requireNonAlphanumeric) {\r\n            this.passwordComplexityInfo += '<li>' + this.l(\"PasswordComplexity_RequireNonAlphanumeric_Hint\") + '</li>';\r\n        }\r\n\r\n        if (this.passwordComplexitySetting.requiredLength) {\r\n            this.passwordComplexityInfo += '<li>' + this.l(\"PasswordComplexity_RequiredLength_Hint\", this.passwordComplexitySetting.requiredLength) + '</li>';\r\n        }\r\n\r\n        this.passwordComplexityInfo += '</ul>';\r\n    }\r\n\r\n    getProfilePicture(profilePictureId: string): void {\r\n        if (!profilePictureId) {\r\n            this.profilePicture = \"/assets/common/images/default-profile-picture.png\";\r\n        } else {\r\n            this._profileService.getProfilePictureById(profilePictureId).subscribe(result => {\r\n\r\n                if (result && result.profilePicture) {\r\n                    this.profilePicture = 'data:image/jpeg;base64,' + result.profilePicture;\r\n                } else {\r\n                    this.profilePicture = \"/assets/common/images/default-profile-picture.png\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onShown(): void {\r\n        $(this.nameInput.nativeElement).focus();\r\n\r\n        this.organizationUnitTree.data = <IOrganizationUnitsTreeComponentData>{\r\n            allOrganizationUnits : this.allOrganizationUnits,\r\n            selectedOrganizationUnits: this.memberedOrganizationUnits\r\n        };\r\n    }\r\n\r\n    save(): void {\r\n        var input = new CreateOrUpdateUserInput();\r\n\r\n        input.user = this.user;\r\n        input.setRandomPassword = this.setRandomPassword;\r\n        input.sendActivationEmail = this.sendActivationEmail;\r\n        input.assignedRoleNames =\r\n            _.map(\r\n                _.filter(this.roles, { isAssigned: true }), role => role.roleName\r\n            );\r\n\r\n        input.organizationUnits = this.organizationUnitTree.getSelectedOrganizations();\r\n\r\n        this.saving = true;\r\n        this._userService.createOrUpdateUser(input)\r\n            .finally(() => { this.saving = false; })\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n\r\n    close(): void {\r\n        this.active = false;\r\n        this.modal.hide();\r\n    }\r\n\r\n    getAssignedRoleCount(): number {\r\n        return _.filter(this.roles, { isAssigned: true }).length;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/users/create-or-edit-user-modal.component.ts","module.exports = \"<div bsModal #editModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\r\\n  <div class=\\\"modal-dialog\\\">    \\r\\n    <div class=\\\"modal-content\\\">\\r\\n\\r\\n    <form #userForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            <span>{{l(\\\"Permissions\\\")}}<span *ngIf=\\\"userName\\\"> - {{userName}}</span></span>\\r\\n        </h4>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n          <permission-tree #permissionTree></permission-tree>\\r\\n          \\r\\n          <div class=\\\"note note-warning\\\" style=\\\"margin-bottom: 0; margin-top: 15px\\\">\\r\\n              <em>{{l('Note_RefreshPageForPermissionChanges')}}</em>\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button [disabled]=\\\"saving\\\" [buttonBusy]=\\\"resettingPermissions\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" type=\\\"button\\\" class=\\\"btn btn-default pull-left\\\" (click)=\\\"resetPermissions()\\\" [tooltip]=\\\"l('ResetPermissionsTooltip')\\\" placement=\\\"top\\\"><span>{{l(\\\"ResetSpecialPermissions\\\")}}</span></button>\\r\\n        <button [disabled]=\\\"saving || resettingPermissions\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!userForm.form.valid || resettingPermissions\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n\\r\\n    </div>    \\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/users/edit-user-permissions-modal.component.html\n// module id = ../../../../../src/app/admin/users/edit-user-permissions-modal.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { UserServiceProxy, GetUserPermissionsForEditOutput, UpdateUserPermissionsInput, EntityDtoOfInt64 } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { PermissionTreeComponent } from '../shared/permission-tree.component';\r\nimport { PermissionTreeEditModel } from '@app/admin/shared/permission-tree-edit.model';\r\n\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'editUserPermissionsModal',\r\n    templateUrl: './edit-user-permissions-modal.component.html'\r\n})\r\nexport class EditUserPermissionsModalComponent extends AppComponentBase {\r\n\r\n    @ViewChild('editModal') modal: ModalDirective;\r\n    @ViewChild('permissionTree') permissionTree: PermissionTreeComponent;\r\n\r\n    saving: boolean = false;\r\n    resettingPermissions: boolean = false;\r\n\r\n    userId: number;\r\n    userName: string;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _userService: UserServiceProxy\r\n    ) {\r\n        super(injector);        \r\n    }\r\n\r\n    show(userId: number, userName?: string):void {\r\n        this.userId = userId;\r\n        this.userName = userName;\r\n\r\n        this._userService.getUserPermissionsForEdit(userId).subscribe(result => {            \r\n            this.permissionTree.editData = result;\r\n            this.modal.show();\r\n        });\r\n    }\r\n\r\n    save(): void {\r\n        var input = new UpdateUserPermissionsInput();\r\n        \r\n        input.id = this.userId;\r\n        input.grantedPermissionNames = this.permissionTree.getGrantedPermissionNames();\r\n\r\n        this.saving = true;\r\n        this._userService.updateUserPermissions(input)\r\n            .finally(() => { this.saving = false; })\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('SavedSuccessfully'));\r\n                this.close();\r\n            });\r\n    }\r\n\r\n    resetPermissions(): void {\r\n\r\n        var input = new EntityDtoOfInt64();\r\n        \r\n        input.id = this.userId;\r\n        \r\n        this.resettingPermissions = true;\r\n        this._userService.resetUserSpecificPermissions(input).subscribe(() => {\r\n            this.notify.info(this.l('ResetSuccessfully'));\r\n            this._userService.getUserPermissionsForEdit(this.userId).subscribe(result => {            \r\n                this.permissionTree.editData = result;\r\n            });\r\n        }, undefined, () => {\r\n            this.resettingPermissions = false;\r\n        });\r\n    }\r\n\r\n    close(): void {\r\n        this.modal.hide();        \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/users/edit-user-permissions-modal.component.ts","module.exports = \"<div [@routerTransition]>\\r\\n    <div class=\\\"row margin-bottom-5\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <div class=\\\"page-head\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    <h1>\\r\\n                        <span>{{l(\\\"Users\\\")}}</span> <small>{{l(\\\"UsersHeaderInfo\\\")}}</small>\\r\\n                    </h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 text-right\\\">\\r\\n            <button (click)=\\\"exportToExcel()\\\" class=\\\"btn green-haze\\\"><i class=\\\"fa fa-file-excel-o\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\r\\n            <button (click)=\\\"createUser()\\\" *ngIf=\\\"isGranted('Pages.Administration.Users.Create')\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewUser\\\")}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"portlet light margin-bottom-0\\\">\\r\\n        <div class=\\\"portlet-body\\\">\\r\\n            <div class=\\\"form\\\">\\r\\n                <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"form-body\\\">\\r\\n                        <div class=\\\"row margin-bottom-10\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <div class=\\\"inputs inputs-full-width\\\">\\r\\n                                    <div class=\\\"portlet-input\\\">\\r\\n                                        <div class=\\\"input-group\\\">\\r\\n                                            <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\r\\n                                            <span class=\\\"input-group-btn\\\">\\r\\n                                                <button (click)=\\\"getUsers()\\\" class=\\\"btn default\\\" type=\\\"submit\\\"><i class=\\\"icon-magnifier\\\"></i></button>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row margin-bottom-10\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\r\\n                            <div [ngClass]=\\\"{'col-md-6': isGranted('Pages.Administration.Roles'), 'col-md-12':!isGranted('Pages.Administration.Roles')}\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <permission-combo [(selectedPermission)]=\\\"selectedPermission\\\"></permission-combo>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6\\\" *ngIf=\\\"isGranted('Pages.Administration.Roles')\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <role-combo [(selectedRole)]=\\\"role\\\" emptyText=\\\"{{l('FilterByRole')}}\\\"></role-combo>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row margin-bottom-10\\\" *ngIf=\\\"advancedFiltersAreShown\\\">\\r\\n                        <div class=\\\"col-sm-12 text-right\\\">\\r\\n                            <button class=\\\"btn blue\\\" (click)=\\\"getUsers()\\\"><i class=\\\"fa fa-refresh\\\"></i> {{l(\\\"Refresh\\\")}}</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row margin-bottom-10\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\r\\n                            <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n\\r\\n            <!--<Primeng-Datatable-Start>-->\\r\\n            <div class=\\\"primeng-datatable-container\\\" \\r\\n                 [busyIf]=\\\"primengDatatableHelper.isLoading\\\">\\r\\n                <p-dataTable #dataTable\\r\\n                             (onLazyLoad)=\\\"getUsers($event)\\\"\\r\\n                             [value]=\\\"primengDatatableHelper.records\\\"\\r\\n                             rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                             [paginator]=\\\"false\\\"\\r\\n                             [lazy]=\\\"true\\\"\\r\\n                             emptyMessage=\\\"{{l('NoData')}}\\\"\\r\\n                             scrollable=\\\"true\\\" \\r\\n                             ScrollWidth=\\\"100%\\\" \\r\\n                             responsive=\\\"primengDatatableHelper.isResponsive\\\"\\r\\n                             resizableColumns=\\\"primengDatatableHelper.resizableColumns\\\">\\r\\n                  \\r\\n                    <p-column field=\\\"\\\"\\r\\n                              header=\\\"{{l('Actions')}}\\\"\\r\\n                              [sortable]=\\\"false\\\"\\r\\n                              [style]=\\\"{'width':'75px'}\\\"\\r\\n                              [hidden]=\\\"!isGrantedAny('Pages.Administration.Users.Impersonation', 'Pages.Administration.Users.Edit', 'Pages.Administration.Users.ChangePermissions', 'Pages.Administration.Users.Delete')\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <div class=\\\"btn-group dropdown\\\" normalizePosition>\\r\\n                                <button class=\\\"dropdown-toggle btn btn-xs btn-primary blue\\\"\\r\\n                                        data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\"\\r\\n                                        aria-expanded=\\\"false\\\">\\r\\n                                    <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span>\\r\\n                                </button>\\r\\n                                <ul class=\\\"dropdown-menu\\\">\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Administration.Users.Impersonation') && record.id !== appSession.userId\\\"\\r\\n                                           (click)=\\\"_impersonationService.impersonate(record.id, appSession.tenantId)\\\">{{l('LoginAsThisUser')}}</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Administration.Users.Edit')\\\"\\r\\n                                           (click)=\\\"createOrEditUserModal.show(record.id)\\\">{{l('Edit')}}</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Administration.Users.ChangePermissions')\\\"\\r\\n                                           (click)=\\\"editUserPermissionsModal.show(record.id, record.userName)\\\">{{l('Permissions')}}</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Administration.Users.ChangePermissions')\\\"\\r\\n                                           (click)=\\\"unlockUser(record)\\\">{{l('Unlock')}}</a>\\r\\n                                    </li>\\r\\n                                    <li>\\r\\n                                        <a *ngIf=\\\"permission.isGranted('Pages.Administration.Users.Delete')\\\"\\r\\n                                           (click)=\\\"deleteUser(record)\\\">{{l('Delete')}}</a>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"userName\\\" header=\\\"{{l('UserName')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n                    <p-column field=\\\"name\\\" header=\\\"{{l('Name')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n                    <p-column field=\\\"surname\\\" header=\\\"{{l('Surname')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n                    <p-column field=\\\"roles\\\" header=\\\"{{l('Roles')}}\\\" [sortable]=\\\"false\\\" [style]=\\\"{'width':'150px'}\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            {{getRolesAsString(record.roles)}}\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"emailAddress\\\" header=\\\"{{l('EmailAddress')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'250px'}\\\"></p-column>\\r\\n                    <p-column field=\\\"isEmailConfirmed\\\" header=\\\"{{l('EmailConfirm')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'200px'}\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <span class=\\\"label label-success\\\" *ngIf=\\\"record.isEmailConfirmed\\\">{{l('Yes')}}</span>\\r\\n                            <span class=\\\"label label-default\\\" *ngIf=\\\"!record.isEmailConfirmed\\\">{{l('No')}}</span>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"isActive\\\" header=\\\"{{l('Active')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'100px'}\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <span class=\\\"label label-success\\\" *ngIf=\\\"record.isActive\\\">{{l('Yes')}}</span>\\r\\n                            <span class=\\\"label label-default\\\" *ngIf=\\\"!record.isActive\\\">{{l('No')}}</span>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"lastLoginTime\\\" header=\\\"{{l('LastLoginTime')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'150px'}\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <span *ngIf=\\\"record.lastLoginTime\\\">{{record.lastLoginTime | momentFormat:'L'}}</span>\\r\\n                            <span *ngIf=\\\"!record.lastLoginTime\\\">-</span>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"creationTime\\\" header=\\\"{{l('CreationTime')}}\\\" [sortable]=\\\"true\\\" [style]=\\\"{'width':'200px'}\\\">\\r\\n                        <ng-template let-record=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            {{record.creationTime | momentFormat:'L'}}\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                </p-dataTable>\\r\\n                <div class=\\\"primeng-paging-container\\\">\\r\\n                    <p-paginator rows=\\\"{{primengDatatableHelper.defaultRecordsCountPerPage}}\\\"\\r\\n                                 #paginator\\r\\n                                 (onPageChange)=\\\"getUsers($event)\\\"\\r\\n                                 [totalRecords]=\\\"primengDatatableHelper.totalRecordsCount\\\"\\r\\n                                 [rowsPerPageOptions]=\\\"primengDatatableHelper.predefinedRecordsCountPerPage\\\">\\r\\n                    </p-paginator>\\r\\n                    <span class=\\\"total-records-count\\\">\\r\\n                        {{l('TotalRecordsCount', primengDatatableHelper.totalRecordsCount)}}\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--<Primeng-Datatable-End>-->\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <createOrEditUserModal #createOrEditUserModal (modalSave)=\\\"getUsers()\\\"></createOrEditUserModal>\\r\\n\\r\\n    <editUserPermissionsModal #editUserPermissionsModal></editUserPermissionsModal>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/users/users.component.html\n// module id = ../../../../../src/app/admin/users/users.component.html\n// module chunks = admin.module","import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Http } from '@angular/http';\r\nimport { UserServiceProxy, UserListDto, EntityDtoOfInt64 } from '@shared/service-proxies/service-proxies';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { AppComponentBase } from '@shared/common/app-component-base';\r\nimport { FileDownloadService } from '@shared/utils/file-download.service';\r\nimport { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { CreateOrEditUserModalComponent } from './create-or-edit-user-modal.component';\r\nimport { EditUserPermissionsModalComponent } from './edit-user-permissions-modal.component';\r\nimport { ImpersonationService } from './impersonation.service';\r\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { DataTable } from 'primeng/components/datatable/datatable';\r\nimport { Paginator } from 'primeng/components/paginator/paginator';\r\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\r\n\r\n@Component({\r\n    templateUrl: \"./users.component.html\",\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [appModuleAnimation()]\r\n})\r\nexport class UsersComponent extends AppComponentBase {\r\n\r\n    @ViewChild('createOrEditUserModal') createOrEditUserModal: CreateOrEditUserModalComponent;\r\n    @ViewChild('editUserPermissionsModal') editUserPermissionsModal: EditUserPermissionsModalComponent;\r\n    @ViewChild('dataTable') dataTable: DataTable;\r\n    @ViewChild('paginator') paginator: Paginator;\r\n\r\n    //Filters\r\n    advancedFiltersAreShown: boolean = false;\r\n    filterText: string = '';\r\n    selectedPermission: string = '';\r\n    role: number = undefined;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _http: Http,\r\n        private _userServiceProxy: UserServiceProxy,\r\n        private _notifyService: NotifyService,\r\n        private _fileDownloadService: FileDownloadService,\r\n        private _impersonationService: ImpersonationService,\r\n        private _tokenAuth: TokenAuthServiceProxy,\r\n        private _activatedRoute: ActivatedRoute\r\n    ) {\r\n        super(injector);\r\n        this.filterText = this._activatedRoute.snapshot.queryParams['filterText'] || '';\r\n    }\r\n\r\n    getUsers(event?: LazyLoadEvent) {\r\n        this.primengDatatableHelper.showLoadingIndicator();\r\n\r\n        this._userServiceProxy.getUsers(\r\n            this.filterText,\r\n            this.permission ? this.selectedPermission : undefined,\r\n            this.role,\r\n            this.primengDatatableHelper.getSorting(this.dataTable),\r\n            this.primengDatatableHelper.getMaxResultCount(this.paginator, event),\r\n            this.primengDatatableHelper.getSkipCount(this.paginator, event)\r\n        ).subscribe(result => {\r\n            this.primengDatatableHelper.totalRecordsCount = result.totalCount;\r\n            this.primengDatatableHelper.records = result.items;\r\n            this.primengDatatableHelper.hideLoadingIndicator();\r\n        });\r\n    }\r\n\r\n    unlockUser(record): void {\r\n        this._userServiceProxy.unlockUser(new EntityDtoOfInt64({ id: record.id })).subscribe(() => {\r\n            this.notify.success(this.l('UnlockedTheUser', record.userName));\r\n        });\r\n    }\r\n\r\n    getRolesAsString(roles): string {\r\n        var roleNames = '';\r\n\r\n        for (var j = 0; j < roles.length; j++) {\r\n            if (roleNames.length) {\r\n                roleNames = roleNames + ', ';\r\n            }\r\n\r\n            roleNames = roleNames + roles[j].roleName;\r\n        };\r\n\r\n        return roleNames;\r\n    }\r\n     \r\n    reloadPage(): void {\r\n        this.paginator.changePage(this.paginator.getPage());\r\n    }\r\n   \r\n    exportToExcel(): void {\r\n        this._userServiceProxy.getUsersToExcel()\r\n            .subscribe(result => {\r\n                this._fileDownloadService.downloadTempFile(result);\r\n            });\r\n    }\r\n\r\n    createUser(): void {\r\n        this.createOrEditUserModal.show();\r\n    }\r\n\r\n    deleteUser(user: UserListDto): void {\r\n        if (user.userName === AppConsts.userManagement.defaultAdminUserName) {\r\n            this.message.warn(this.l(\"{0}UserCannotBeDeleted\", AppConsts.userManagement.defaultAdminUserName));\r\n            return;\r\n        }\r\n\r\n        this.message.confirm(\r\n            this.l('UserDeleteWarningMessage', user.userName),\r\n            (isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this._userServiceProxy.deleteUser(user.id)\r\n                        .subscribe(() => {\r\n                            this.reloadPage();\r\n                            this.notify.success(this.l('SuccessfullyDeleted'));\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Corarl Project/CorarlERP_FrontEnd/angular/src/app/admin/users/users.component.ts"],"sourceRoot":"webpack:///"}